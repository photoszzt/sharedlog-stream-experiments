===> User
uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
===> Configuring ...
===> Running preflight checks ... 
===> Check if /var/lib/kafka/data is writable ...
===> Check if Zookeeper is healthy ...
0 [main] DEBUG io.confluent.admin.utils.cli.ZookeeperReadyCommand  - Arguments Namespace(zookeeper_connect=zookeeper:2181, timeout=40000). 
3 [main] DEBUG io.confluent.admin.utils.ClusterStatus  - Check if Zookeeper is ready: zookeeper:2181 
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:host.name=broker-4
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.version=11.0.14.1
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.vendor=Azul Systems, Inc.
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.home=/usr/lib/jvm/zulu11-ca
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.class.path=/usr/share/java/cp-base-new/jackson-dataformat-csv-2.12.3.jar:/usr/share/java/cp-base-new/confluent-log4j-1.2.17-cp10.jar:/usr/share/java/cp-base-new/jackson-dataformat-yaml-2.12.3.jar:/usr/share/java/cp-base-new/jackson-annotations-2.12.3.jar:/usr/share/java/cp-base-new/lz4-java-1.8.0.jar:/usr/share/java/cp-base-new/jmx_prometheus_javaagent-0.14.0.jar:/usr/share/java/cp-base-new/scala-reflect-2.13.5.jar:/usr/share/java/cp-base-new/disk-usage-agent-7.1.0.jar:/usr/share/java/cp-base-new/logredactor-1.0.10.jar:/usr/share/java/cp-base-new/utility-belt-7.1.0.jar:/usr/share/java/cp-base-new/commons-cli-1.4.jar:/usr/share/java/cp-base-new/kafka-storage-api-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jackson-module-scala_2.13-2.12.3.jar:/usr/share/java/cp-base-new/kafka-raft-7.1.0-ccs.jar:/usr/share/java/cp-base-new/common-utils-7.1.0.jar:/usr/share/java/cp-base-new/kafka-metadata-7.1.0-ccs.jar:/usr/share/java/cp-base-new/slf4j-api-1.7.30.jar:/usr/share/java/cp-base-new/logredactor-metrics-1.0.10.jar:/usr/share/java/cp-base-new/kafka-clients-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jolokia-core-1.6.2.jar:/usr/share/java/cp-base-new/slf4j-log4j12-1.7.30.jar:/usr/share/java/cp-base-new/scala-java8-compat_2.13-1.0.0.jar:/usr/share/java/cp-base-new/zstd-jni-1.5.0-4.jar:/usr/share/java/cp-base-new/scala-library-2.13.5.jar:/usr/share/java/cp-base-new/gson-2.8.6.jar:/usr/share/java/cp-base-new/kafka-server-common-7.1.0-ccs.jar:/usr/share/java/cp-base-new/audience-annotations-0.5.0.jar:/usr/share/java/cp-base-new/paranamer-2.8.jar:/usr/share/java/cp-base-new/argparse4j-0.7.0.jar:/usr/share/java/cp-base-new/jackson-datatype-jdk8-2.12.3.jar:/usr/share/java/cp-base-new/slf4j-simple-1.7.30.jar:/usr/share/java/cp-base-new/snappy-java-1.1.8.4.jar:/usr/share/java/cp-base-new/jopt-simple-5.0.4.jar:/usr/share/java/cp-base-new/json-simple-1.1.1.jar:/usr/share/java/cp-base-new/kafka_2.13-7.1.0-ccs.jar:/usr/share/java/cp-base-new/kafka-storage-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jose4j-0.7.8.jar:/usr/share/java/cp-base-new/zookeeper-jute-3.6.3.jar:/usr/share/java/cp-base-new/zookeeper-3.6.3.jar:/usr/share/java/cp-base-new/jolokia-jvm-1.6.2-agent.jar:/usr/share/java/cp-base-new/jackson-core-2.12.3.jar:/usr/share/java/cp-base-new/jackson-databind-2.12.3.jar:/usr/share/java/cp-base-new/minimal-json-0.9.5.jar:/usr/share/java/cp-base-new/scala-collection-compat_2.13-2.4.4.jar:/usr/share/java/cp-base-new/scala-logging_2.13-3.9.3.jar:/usr/share/java/cp-base-new/snakeyaml-1.27.jar:/usr/share/java/cp-base-new/re2j-1.6.jar:/usr/share/java/cp-base-new/metrics-core-4.1.12.1.jar:/usr/share/java/cp-base-new/metrics-core-2.2.0.jar
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.io.tmpdir=/tmp
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.compiler=<NA>
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.name=Linux
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.arch=amd64
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.version=5.10.39-zjiabuild
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.name=appuser
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.home=/home/appuser
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.dir=/home/appuser
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.free=237MB
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.max=3886MB
16 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.total=244MB
19 [main] INFO org.apache.zookeeper.ZooKeeper  - Initiating client connection, connectString=zookeeper:2181 sessionTimeout=40000 watcher=io.confluent.admin.utils.ZookeeperConnectionWatcher@78ac1102
22 [main] INFO org.apache.zookeeper.common.X509Util  - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
27 [main] INFO org.apache.zookeeper.ClientCnxnSocket  - jute.maxbuffer value is 1048575 Bytes
33 [main] INFO org.apache.zookeeper.ClientCnxn  - zookeeper.request.timeout value is 0. feature enabled=false
42 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to kstreams-test_zookeeper.1.boh7nrm4yjwu43h7uobb71c4f.kstreams-test_default
44 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.99.0.12:2181.
44 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
51 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - Session 0x0 for sever zookeeper/172.99.0.12:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
52 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxnSocketNIO  - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:160)
	at java.base/sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:913)
	at java.base/sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:398)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:193)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1390)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanAndNotifyState(ClientCnxn.java:1331)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1309)
53 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxnSocketNIO  - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:160)
	at java.base/sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:930)
	at java.base/sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:406)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:198)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1390)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanAndNotifyState(ClientCnxn.java:1331)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1309)
1155 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to kstreams-test_zookeeper.1.boh7nrm4yjwu43h7uobb71c4f.kstreams-test_default
1155 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.99.0.12:2181.
1155 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
1155 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Socket connection established, initiating session, client: /172.99.0.6:54558, server: zookeeper/172.99.0.12:2181
1158 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Session establishment request sent on zookeeper/172.99.0.12:2181
1162 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Session establishment complete on server zookeeper/172.99.0.12:2181, session id = 0x10000079e480001, negotiated timeout = 40000
1164 [main] DEBUG org.apache.zookeeper.ZooKeeper  - Closing session: 0x10000079e480001
1165 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Closing client for session: 0x10000079e480001
1169 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Reading reply session id: 0x10000079e480001, packet:: clientPath:null serverPath:null finished:false header:: 1,-11  replyHeader:: 1,4,0  request:: null response:: null
1170 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - An exception was thrown while closing send thread for session 0x10000079e480001.
EndOfStreamException: Unable to read additional data from server sessionid 0x10000079e480001, likely server has closed socket
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:77)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
1171 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Disconnecting client for session: 0x10000079e480001
1271 [main] INFO org.apache.zookeeper.ZooKeeper  - Session: 0x10000079e480001 closed
1271 [main-EventThread] INFO org.apache.zookeeper.ClientCnxn  - EventThread shut down for session: 0x10000079e480001
===> Launching ... 
===> Launching kafka ... 
[2022-04-26 06:43:01,009] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2022-04-26 06:43:01,289] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2022-04-26 06:43:01,374] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2022-04-26 06:43:01,376] INFO starting (kafka.server.KafkaServer)
[2022-04-26 06:43:01,377] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
[2022-04-26 06:43:01,390] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
[2022-04-26 06:43:01,395] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:host.name=broker-4 (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.version=11.0.14.1 (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/connect-json-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.1.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-raft-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/logredactor-metrics-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.6.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.30.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.22.1.1.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/kafka-shell-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/slf4j-log4j12-1.7.30.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.0.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.0-4.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-mirror-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/logredactor-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/trogdor-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/confluent-log4j-1.2.17-cp8.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.6.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.1.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-tools-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/connect-runtime-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-transforms-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.8.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/jackson-core-2.12.3.jar:/usr/bin/../share/java/kafka/jackson-databind-2.12.3.jar:/usr/bin/../share/java/kafka/minimal-json-0.9.5.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.2.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.4.4.jar:/usr/bin/../share/java/kafka/plexus-utils-3.2.1.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.3.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/re2j-1.6.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jline-3.12.1.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:os.version=5.10.39-zjiabuild (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:os.memory.free=1009MB (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,395] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,396] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,398] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@232a7d73 (org.apache.zookeeper.ZooKeeper)
[2022-04-26 06:43:01,402] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2022-04-26 06:43:01,407] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
[2022-04-26 06:43:01,409] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2022-04-26 06:43:01,413] INFO Opening socket connection to server zookeeper/172.99.0.12:2181. (org.apache.zookeeper.ClientCnxn)
[2022-04-26 06:43:01,413] INFO SASL config status: Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2022-04-26 06:43:01,418] INFO Socket connection established, initiating session, client: /172.99.0.6:54562, server: zookeeper/172.99.0.12:2181 (org.apache.zookeeper.ClientCnxn)
[2022-04-26 06:43:01,423] INFO Session establishment complete on server zookeeper/172.99.0.12:2181, session id = 0x10000079e480003, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2022-04-26 06:43:01,425] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2022-04-26 06:43:01,507] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
[2022-04-26 06:43:01,516] INFO Feature ZK node at path: /feature does not exist (kafka.server.FinalizedFeatureChangeListener)
[2022-04-26 06:43:01,516] INFO Cleared cache (kafka.server.FinalizedFeatureCache)
[2022-04-26 06:43:01,669] INFO Cluster ID = DueL-2mIT1GOYVBlZgMBFA (kafka.server.KafkaServer)
[2022-04-26 06:43:01,672] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2022-04-26 06:43:01,703] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.6:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 4
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 4
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-04-26 06:43:01,708] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.6:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 4
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 4
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-04-26 06:43:01,738] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-04-26 06:43:01,738] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-04-26 06:43:01,739] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-04-26 06:43:01,741] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-04-26 06:43:01,772] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
[2022-04-26 06:43:01,776] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
[2022-04-26 06:43:01,781] INFO Loaded 0 logs in 8ms. (kafka.log.LogManager)
[2022-04-26 06:43:01,781] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2022-04-26 06:43:01,783] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2022-04-26 06:43:01,794] INFO Starting the log cleaner (kafka.log.LogCleaner)
[2022-04-26 06:43:01,877] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
[2022-04-26 06:43:02,105] INFO [BrokerToControllerChannelManager broker=4 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-04-26 06:43:02,238] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2022-04-26 06:43:02,241] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2022-04-26 06:43:02,266] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-04-26 06:43:02,272] INFO [BrokerToControllerChannelManager broker=4 name=alterIsr]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-04-26 06:43:02,293] INFO [ExpirationReaper-4-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,294] INFO [ExpirationReaper-4-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,294] INFO [ExpirationReaper-4-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,295] INFO [ExpirationReaper-4-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,308] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2022-04-26 06:43:02,330] INFO Creating /brokers/ids/4 (is it secure? false) (kafka.zk.KafkaZkClient)
[2022-04-26 06:43:02,358] INFO Stat of the created znode at /brokers/ids/4 is: 46,46,1650955382341,1650955382341,1,0,0,72057626758217731,204,0,46
 (kafka.zk.KafkaZkClient)
[2022-04-26 06:43:02,359] INFO Registered broker 4 at path /brokers/ids/4 with addresses: PLAINTEXT://172.99.0.6:9092, czxid (broker epoch): 46 (kafka.zk.KafkaZkClient)
[2022-04-26 06:43:02,406] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-04-26 06:43:02,414] INFO [ExpirationReaper-4-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,419] INFO [ExpirationReaper-4-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,419] INFO [ExpirationReaper-4-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,425] INFO Successfully created /controller_epoch with initial epoch 0 (kafka.zk.KafkaZkClient)
[2022-04-26 06:43:02,435] INFO [Controller id=4] 4 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-04-26 06:43:02,436] INFO [GroupCoordinator 4]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2022-04-26 06:43:02,438] INFO [Controller id=4] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-04-26 06:43:02,439] INFO [GroupCoordinator 4]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2022-04-26 06:43:02,440] INFO Feature ZK node created at path: /feature (kafka.server.FinalizedFeatureChangeListener)
[2022-04-26 06:43:02,456] INFO [TransactionCoordinator id=4] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-04-26 06:43:02,459] INFO [Transaction Marker Channel Manager 4]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2022-04-26 06:43:02,459] INFO [TransactionCoordinator id=4] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-04-26 06:43:02,464] INFO Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Features{}, epoch=0). (kafka.server.FinalizedFeatureCache)
[2022-04-26 06:43:02,465] INFO [Controller id=4] Registering handlers (kafka.controller.KafkaController)
[2022-04-26 06:43:02,467] INFO [Controller id=4] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-04-26 06:43:02,469] INFO [Controller id=4] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-04-26 06:43:02,470] INFO [Controller id=4] Initializing controller context (kafka.controller.KafkaController)
[2022-04-26 06:43:02,480] INFO [Controller id=4] Initialized broker epochs cache: HashMap(4 -> 46) (kafka.controller.KafkaController)
[2022-04-26 06:43:02,484] DEBUG [Controller id=4] Register BrokerModifications handler for Set(4) (kafka.controller.KafkaController)
[2022-04-26 06:43:02,487] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-04-26 06:43:02,494] INFO [ExpirationReaper-4-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-04-26 06:43:02,494] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-04-26 06:43:02,495] INFO [Controller id=4] Currently active brokers in the cluster: Set(4) (kafka.controller.KafkaController)
[2022-04-26 06:43:02,495] INFO [Controller id=4] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-04-26 06:43:02,496] INFO [Controller id=4] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-04-26 06:43:02,496] INFO [Controller id=4] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-04-26 06:43:02,498] INFO [Controller id=4] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-04-26 06:43:02,498] INFO [Controller id=4] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-04-26 06:43:02,498] INFO [Controller id=4] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-04-26 06:43:02,499] INFO [Topic Deletion Manager 4] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-04-26 06:43:02,499] INFO [Controller id=4] Sending update metadata request (kafka.controller.KafkaController)
[2022-04-26 06:43:02,502] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(4) for 0 partitions (state.change.logger)
[2022-04-26 06:43:02,507] INFO [ReplicaStateMachine controllerId=4] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-04-26 06:43:02,508] INFO [ReplicaStateMachine controllerId=4] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-04-26 06:43:02,510] INFO [ReplicaStateMachine controllerId=4] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-04-26 06:43:02,510] DEBUG [ReplicaStateMachine controllerId=4] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-04-26 06:43:02,511] INFO [PartitionStateMachine controllerId=4] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-04-26 06:43:02,511] INFO [PartitionStateMachine controllerId=4] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-04-26 06:43:02,512] INFO [RequestSendThread controllerId=4] Controller 4 connected to 172.99.0.6:9092 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-04-26 06:43:02,513] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2022-04-26 06:43:02,513] DEBUG [PartitionStateMachine controllerId=4] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-04-26 06:43:02,514] INFO [Controller id=4] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-04-26 06:43:02,517] INFO [Controller id=4] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-04-26 06:43:02,518] INFO [Controller id=4] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-04-26 06:43:02,518] INFO [Controller id=4] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-04-26 06:43:02,518] INFO [Controller id=4] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-04-26 06:43:02,519] INFO [Controller id=4] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-04-26 06:43:02,520] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Starting socket server acceptors and processors (kafka.network.SocketServer)
[2022-04-26 06:43:02,525] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-04-26 06:43:02,525] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Started socket server acceptors and processors (kafka.network.SocketServer)
[2022-04-26 06:43:02,530] INFO [Controller id=4] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-04-26 06:43:02,531] INFO Kafka version: 7.1.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
[2022-04-26 06:43:02,531] INFO Kafka commitId: c86722379ab997cc (org.apache.kafka.common.utils.AppInfoParser)
[2022-04-26 06:43:02,531] INFO Kafka startTimeMs: 1650955382525 (org.apache.kafka.common.utils.AppInfoParser)
[2022-04-26 06:43:02,533] INFO [KafkaServer id=4] started (kafka.server.KafkaServer)
[2022-04-26 06:43:02,564] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.6:9092 (id: 4 rack: null) (state.change.logger)
[2022-04-26 06:43:02,575] INFO [BrokerToControllerChannelManager broker=4 name=alterIsr]: Recorded new controller, from now on will use broker 172.99.0.6:9092 (id: 4 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-04-26 06:43:02,598] INFO [Controller id=4] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 3,4 (kafka.controller.KafkaController)
[2022-04-26 06:43:02,599] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-04-26 06:43:02,602] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-04-26 06:43:02,603] INFO [Controller id=4] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-04-26 06:43:02,603] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(4) for 0 partitions (state.change.logger)
[2022-04-26 06:43:02,604] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(3) for 0 partitions (state.change.logger)
[2022-04-26 06:43:02,605] INFO [RequestSendThread controllerId=4] Controller 4 connected to 172.99.0.5:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-04-26 06:43:02,605] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.6:9092 (id: 4 rack: null) (state.change.logger)
[2022-04-26 06:43:02,606] DEBUG [Controller id=4] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-04-26 06:43:02,607] INFO [Controller id=4] Updated broker epochs cache: HashMap(3 -> 51, 4 -> 46) (kafka.controller.KafkaController)
[2022-04-26 06:43:02,614] INFO [BrokerToControllerChannelManager broker=4 name=forwarding]: Recorded new controller, from now on will use broker 172.99.0.6:9092 (id: 4 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-04-26 06:43:02,823] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.5:9092 (id: 3 rack: null) (state.change.logger)
[2022-04-26 06:43:07,531] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-04-26 06:43:07,531] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-04-26 06:43:11,836] INFO [Controller id=4] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,3,4 (kafka.controller.KafkaController)
[2022-04-26 06:43:11,836] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-04-26 06:43:11,838] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-04-26 06:43:11,838] INFO [Controller id=4] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-04-26 06:43:11,838] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(3, 4) for 0 partitions (state.change.logger)
[2022-04-26 06:43:11,839] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2022-04-26 06:43:11,839] DEBUG [Controller id=4] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2022-04-26 06:43:11,839] INFO [RequestSendThread controllerId=4] Controller 4 connected to 172.99.0.3:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-04-26 06:43:11,840] INFO [Controller id=4] Updated broker epochs cache: HashMap(1 -> 84, 3 -> 51, 4 -> 46) (kafka.controller.KafkaController)
[2022-04-26 06:43:11,840] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker 172.99.0.6:9092 (id: 4 rack: null) (state.change.logger)
[2022-04-26 06:43:11,840] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.5:9092 (id: 3 rack: null) (state.change.logger)
[2022-04-26 06:43:11,958] INFO [Controller id=4] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2,3,4 (kafka.controller.KafkaController)
[2022-04-26 06:43:11,958] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-04-26 06:43:11,961] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-04-26 06:43:11,961] INFO [Controller id=4] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-04-26 06:43:11,962] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 3, 4) for 0 partitions (state.change.logger)
[2022-04-26 06:43:11,962] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2022-04-26 06:43:11,962] DEBUG [Controller id=4] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-04-26 06:43:11,963] INFO [RequestSendThread controllerId=4] Controller 4 connected to 172.99.0.4:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-04-26 06:43:11,963] INFO [Controller id=4] Updated broker epochs cache: HashMap(1 -> 84, 2 -> 85, 3 -> 51, 4 -> 46) (kafka.controller.KafkaController)
[2022-04-26 06:43:11,964] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker 172.99.0.6:9092 (id: 4 rack: null) (state.change.logger)
[2022-04-26 06:43:11,964] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker 172.99.0.5:9092 (id: 3 rack: null) (state.change.logger)
[2022-04-26 06:43:12,046] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.3:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-26 06:43:12,053] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.3:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-26 06:43:12,142] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.4:9092 (id: 2 rack: null) (state.change.logger)
[2022-04-26 06:44:23,093] INFO Creating topic src with configuration {min.insync.replicas=3} and initial partition assignment HashMap(0 -> ArrayBuffer(3, 4, 1)) (kafka.zk.AdminZkClient)
[2022-04-26 06:44:23,109] INFO [Controller id=4] New topics: [Set(src)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(src,Some(UVvmYK9RS3af4XP7gnQF3A),Map(src-0 -> ReplicaAssignment(replicas=3,4,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-04-26 06:44:23,110] INFO [Controller id=4] New partition creation callback for src-0 (kafka.controller.KafkaController)
[2022-04-26 06:44:23,112] INFO [Controller id=4 epoch=1] Changed partition src-0 state from NonExistentPartition to NewPartition with assigned replicas 3,4,1 (state.change.logger)
[2022-04-26 06:44:23,112] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-04-26 06:44:23,115] TRACE [Controller id=4 epoch=1] Changed state of replica 1 for partition src-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-04-26 06:44:23,115] TRACE [Controller id=4 epoch=1] Changed state of replica 3 for partition src-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-04-26 06:44:23,115] TRACE [Controller id=4 epoch=1] Changed state of replica 4 for partition src-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-04-26 06:44:23,115] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-04-26 06:44:23,158] INFO [Controller id=4 epoch=1] Changed partition src-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 1), zkVersion=0) (state.change.logger)
[2022-04-26 06:44:23,160] TRACE [Controller id=4 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition src-0 (state.change.logger)
[2022-04-26 06:44:23,161] INFO [Controller id=4 epoch=1] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2022-04-26 06:44:23,163] TRACE [Controller id=4 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition src-0 (state.change.logger)
[2022-04-26 06:44:23,163] INFO [Controller id=4 epoch=1] Sending LeaderAndIsr request to broker 3 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2022-04-26 06:44:23,163] TRACE [Controller id=4 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition src-0 (state.change.logger)
[2022-04-26 06:44:23,163] INFO [Controller id=4 epoch=1] Sending LeaderAndIsr request to broker 4 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2022-04-26 06:44:23,163] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3, 4) for 1 partitions (state.change.logger)
[2022-04-26 06:44:23,164] TRACE [Controller id=4 epoch=1] Changed state of replica 1 for partition src-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-04-26 06:44:23,164] TRACE [Controller id=4 epoch=1] Changed state of replica 3 for partition src-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-04-26 06:44:23,165] TRACE [Controller id=4 epoch=1] Changed state of replica 4 for partition src-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-04-26 06:44:23,165] INFO [Controller id=4 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-04-26 06:44:23,166] INFO [Broker id=4] Handling LeaderAndIsr request correlationId 4 from controller 4 for 1 partitions (state.change.logger)
[2022-04-26 06:44:23,167] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 4 epoch 1 (state.change.logger)
[2022-04-26 06:44:23,172] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.4:9092 (id: 2 rack: null) (state.change.logger)
[2022-04-26 06:44:23,185] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 4 from controller 4 epoch 1 starting the become-follower transition for partition src-0 with leader 3 (state.change.logger)
[2022-04-26 06:44:23,233] INFO [LogLoader partition=src-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-04-26 06:44:23,243] INFO Created log for partition src-0 in /var/lib/kafka/data/src-0 with properties {min.insync.replicas=3} (kafka.log.LogManager)
[2022-04-26 06:44:23,245] INFO [Partition src-0 broker=4] No checkpointed highwatermark is found for partition src-0 (kafka.cluster.Partition)
[2022-04-26 06:44:23,245] INFO [Partition src-0 broker=4] Log loaded for partition src-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-04-26 06:44:23,246] INFO [Broker id=4] Follower src-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-04-26 06:44:23,246] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions HashSet(src-0) (kafka.server.ReplicaFetcherManager)
[2022-04-26 06:44:23,247] INFO [Broker id=4] Stopped fetchers as part of become-follower request from controller 4 epoch 1 with correlation id 4 for 1 partitions (state.change.logger)
[2022-04-26 06:44:23,260] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-04-26 06:44:23,262] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 3 for partitions Map(src-0 -> InitialFetchState(Some(UVvmYK9RS3af4XP7gnQF3A),BrokerEndPoint(id=3, host=172.99.0.5:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-04-26 06:44:23,263] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 4 from controller 4 epoch 1 for the become-follower transition for partition src-0 with leader 3 (state.change.logger)
[2022-04-26 06:44:23,264] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition src-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-04-26 06:44:23,265] INFO [UnifiedLog partition=src-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-04-26 06:44:23,272] TRACE [Controller id=4 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=UVvmYK9RS3af4XP7gnQF3A, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 3 sent to broker 172.99.0.5:9092 (id: 3 rack: null) (state.change.logger)
[2022-04-26 06:44:23,274] INFO [Broker id=4] Finished LeaderAndIsr request in 108ms correlationId 4 from controller 4 for 1 partitions (state.change.logger)
[2022-04-26 06:44:23,276] TRACE [Controller id=4 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=UVvmYK9RS3af4XP7gnQF3A, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 4 sent to broker 172.99.0.6:9092 (id: 4 rack: null) (state.change.logger)
[2022-04-26 06:44:23,279] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 4 sent to broker 172.99.0.5:9092 (id: 3 rack: null) (state.change.logger)
[2022-04-26 06:44:23,279] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition src-0 in response to UpdateMetadata request sent by controller 4 epoch 1 with correlation id 5 (state.change.logger)
[2022-04-26 06:44:23,280] INFO [Broker id=4] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 4 epoch 1 with correlation id 5 (state.change.logger)
[2022-04-26 06:44:23,283] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 5 sent to broker 172.99.0.6:9092 (id: 4 rack: null) (state.change.logger)
[2022-04-26 06:44:23,291] TRACE [Controller id=4 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=UVvmYK9RS3af4XP7gnQF3A, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 2 sent to broker 172.99.0.3:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-26 06:44:23,296] TRACE [Controller id=4 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker 172.99.0.3:9092 (id: 1 rack: null) (state.change.logger)
[2022-04-26 06:44:23,302] WARN [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition src-0. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-04-26 06:44:53,238] INFO [LocalLog partition=src-0, dir=/var/lib/kafka/data] Rolled new log segment at offset 1035360 in 3 ms. (kafka.log.LocalLog)
[2022-04-26 06:44:53,239] INFO [ProducerStateManager partition=src-0] Wrote producer snapshot at offset 1035360 with 0 producer ids in 1 ms. (kafka.log.ProducerStateManager)
[2022-04-26 06:45:18,801] INFO [LocalLog partition=src-0, dir=/var/lib/kafka/data] Rolled new log segment at offset 2070720 in 1 ms. (kafka.log.LocalLog)
[2022-04-26 06:45:18,802] INFO [ProducerStateManager partition=src-0] Wrote producer snapshot at offset 2070720 with 0 producer ids in 1 ms. (kafka.log.ProducerStateManager)
[2022-04-26 06:45:44,260] INFO [LocalLog partition=src-0, dir=/var/lib/kafka/data] Rolled new log segment at offset 3106080 in 1 ms. (kafka.log.LocalLog)
[2022-04-26 06:45:44,261] INFO [ProducerStateManager partition=src-0] Wrote producer snapshot at offset 3106080 with 0 producer ids in 1 ms. (kafka.log.ProducerStateManager)
[2022-04-26 06:46:09,814] INFO [LocalLog partition=src-0, dir=/var/lib/kafka/data] Rolled new log segment at offset 4141440 in 1 ms. (kafka.log.LocalLog)
[2022-04-26 06:46:09,815] INFO [ProducerStateManager partition=src-0] Wrote producer snapshot at offset 4141440 with 0 producer ids in 0 ms. (kafka.log.ProducerStateManager)
