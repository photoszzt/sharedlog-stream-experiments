===> User
uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
===> Configuring ...
===> Running preflight checks ... 
===> Check if /var/lib/kafka/data is writable ...
===> Check if Zookeeper is healthy ...
0 [main] DEBUG io.confluent.admin.utils.cli.ZookeeperReadyCommand  - Arguments Namespace(zookeeper_connect=zookeeper:2181, timeout=40000). 
4 [main] DEBUG io.confluent.admin.utils.ClusterStatus  - Check if Zookeeper is ready: zookeeper:2181 
23 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT
23 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:host.name=broker-3
23 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.version=11.0.14.1
23 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.vendor=Azul Systems, Inc.
23 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.home=/usr/lib/jvm/zulu11-ca
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.class.path=/usr/share/java/cp-base-new/jackson-dataformat-csv-2.12.3.jar:/usr/share/java/cp-base-new/confluent-log4j-1.2.17-cp10.jar:/usr/share/java/cp-base-new/jackson-dataformat-yaml-2.12.3.jar:/usr/share/java/cp-base-new/jackson-annotations-2.12.3.jar:/usr/share/java/cp-base-new/lz4-java-1.8.0.jar:/usr/share/java/cp-base-new/jmx_prometheus_javaagent-0.14.0.jar:/usr/share/java/cp-base-new/scala-reflect-2.13.5.jar:/usr/share/java/cp-base-new/disk-usage-agent-7.1.0.jar:/usr/share/java/cp-base-new/logredactor-1.0.10.jar:/usr/share/java/cp-base-new/utility-belt-7.1.0.jar:/usr/share/java/cp-base-new/commons-cli-1.4.jar:/usr/share/java/cp-base-new/kafka-storage-api-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jackson-module-scala_2.13-2.12.3.jar:/usr/share/java/cp-base-new/kafka-raft-7.1.0-ccs.jar:/usr/share/java/cp-base-new/common-utils-7.1.0.jar:/usr/share/java/cp-base-new/kafka-metadata-7.1.0-ccs.jar:/usr/share/java/cp-base-new/slf4j-api-1.7.30.jar:/usr/share/java/cp-base-new/logredactor-metrics-1.0.10.jar:/usr/share/java/cp-base-new/kafka-clients-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jolokia-core-1.6.2.jar:/usr/share/java/cp-base-new/slf4j-log4j12-1.7.30.jar:/usr/share/java/cp-base-new/scala-java8-compat_2.13-1.0.0.jar:/usr/share/java/cp-base-new/zstd-jni-1.5.0-4.jar:/usr/share/java/cp-base-new/scala-library-2.13.5.jar:/usr/share/java/cp-base-new/gson-2.8.6.jar:/usr/share/java/cp-base-new/kafka-server-common-7.1.0-ccs.jar:/usr/share/java/cp-base-new/audience-annotations-0.5.0.jar:/usr/share/java/cp-base-new/paranamer-2.8.jar:/usr/share/java/cp-base-new/argparse4j-0.7.0.jar:/usr/share/java/cp-base-new/jackson-datatype-jdk8-2.12.3.jar:/usr/share/java/cp-base-new/slf4j-simple-1.7.30.jar:/usr/share/java/cp-base-new/snappy-java-1.1.8.4.jar:/usr/share/java/cp-base-new/jopt-simple-5.0.4.jar:/usr/share/java/cp-base-new/json-simple-1.1.1.jar:/usr/share/java/cp-base-new/kafka_2.13-7.1.0-ccs.jar:/usr/share/java/cp-base-new/kafka-storage-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jose4j-0.7.8.jar:/usr/share/java/cp-base-new/zookeeper-jute-3.6.3.jar:/usr/share/java/cp-base-new/zookeeper-3.6.3.jar:/usr/share/java/cp-base-new/jolokia-jvm-1.6.2-agent.jar:/usr/share/java/cp-base-new/jackson-core-2.12.3.jar:/usr/share/java/cp-base-new/jackson-databind-2.12.3.jar:/usr/share/java/cp-base-new/minimal-json-0.9.5.jar:/usr/share/java/cp-base-new/scala-collection-compat_2.13-2.4.4.jar:/usr/share/java/cp-base-new/scala-logging_2.13-3.9.3.jar:/usr/share/java/cp-base-new/snakeyaml-1.27.jar:/usr/share/java/cp-base-new/re2j-1.6.jar:/usr/share/java/cp-base-new/metrics-core-4.1.12.1.jar:/usr/share/java/cp-base-new/metrics-core-2.2.0.jar
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.io.tmpdir=/tmp
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.compiler=<NA>
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.name=Linux
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.arch=amd64
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.version=5.10.39-zjiabuild
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.name=appuser
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.home=/home/appuser
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.dir=/home/appuser
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.free=237MB
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.max=3886MB
24 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.total=244MB
26 [main] INFO org.apache.zookeeper.ZooKeeper  - Initiating client connection, connectString=zookeeper:2181 sessionTimeout=40000 watcher=io.confluent.admin.utils.ZookeeperConnectionWatcher@78ac1102
30 [main] INFO org.apache.zookeeper.common.X509Util  - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
36 [main] INFO org.apache.zookeeper.ClientCnxnSocket  - jute.maxbuffer value is 1048575 Bytes
42 [main] INFO org.apache.zookeeper.ClientCnxn  - zookeeper.request.timeout value is 0. feature enabled=false
10062 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to zookeeper
10064 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.99.0.11:2181.
10064 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
10072 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Socket connection established, initiating session, client: /172.99.0.5:60646, server: zookeeper/172.99.0.11:2181
10074 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Session establishment request sent on zookeeper/172.99.0.11:2181
10079 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Session establishment complete on server zookeeper/172.99.0.11:2181, session id = 0x1000008bc810004, negotiated timeout = 40000
10082 [main] DEBUG org.apache.zookeeper.ZooKeeper  - Closing session: 0x1000008bc810004
10082 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Closing client for session: 0x1000008bc810004
10087 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Reading reply session id: 0x1000008bc810004, packet:: clientPath:null serverPath:null finished:false header:: 1,-11  replyHeader:: 1,37,0  request:: null response:: null
10088 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - An exception was thrown while closing send thread for session 0x1000008bc810004.
EndOfStreamException: Unable to read additional data from server sessionid 0x1000008bc810004, likely server has closed socket
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:77)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
10089 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Disconnecting client for session: 0x1000008bc810004
10191 [main] INFO org.apache.zookeeper.ZooKeeper  - Session: 0x1000008bc810004 closed
10191 [main-EventThread] INFO org.apache.zookeeper.ClientCnxn  - EventThread shut down for session: 0x1000008bc810004
===> Launching ... 
===> Launching kafka ... 
[2022-10-04 16:40:07,565] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2022-10-04 16:40:07,879] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2022-10-04 16:40:07,954] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2022-10-04 16:40:07,956] INFO starting (kafka.server.KafkaServer)
[2022-10-04 16:40:07,957] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
[2022-10-04 16:40:07,970] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:40:07,975] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:host.name=broker-3 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.version=11.0.14.1 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/connect-json-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.1.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-raft-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/logredactor-metrics-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.6.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.30.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.22.1.1.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/kafka-shell-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/slf4j-log4j12-1.7.30.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.0.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.0-4.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-mirror-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/logredactor-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/trogdor-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/confluent-log4j-1.2.17-cp8.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.6.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.1.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-tools-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/connect-runtime-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-transforms-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.8.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/jackson-core-2.12.3.jar:/usr/bin/../share/java/kafka/jackson-databind-2.12.3.jar:/usr/bin/../share/java/kafka/minimal-json-0.9.5.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.2.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.4.4.jar:/usr/bin/../share/java/kafka/plexus-utils-3.2.1.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.3.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/re2j-1.6.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jline-3.12.1.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,975] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:os.version=5.10.39-zjiabuild (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:os.memory.free=1008MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,976] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,978] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@232a7d73 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:40:07,982] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2022-10-04 16:40:07,988] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:40:07,990] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:40:07,995] INFO Opening socket connection to server zookeeper/172.99.0.12:2181. (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:40:07,995] INFO SASL config status: Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:40:08,000] INFO Socket connection established, initiating session, client: /172.99.0.5:36800, server: zookeeper/172.99.0.12:2181 (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:40:08,005] INFO Session establishment complete on server zookeeper/172.99.0.12:2181, session id = 0x1000008bc810007, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:40:08,008] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:40:08,067] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
[2022-10-04 16:40:08,237] INFO Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Features{}, epoch=0). (kafka.server.FinalizedFeatureCache)
[2022-10-04 16:40:08,241] INFO Cluster ID = -RgkVRRMT0KycO1pvh4WJw (kafka.server.KafkaServer)
[2022-10-04 16:40:08,244] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2022-10-04 16:40:08,281] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.5:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 3
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 3
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-10-04 16:40:08,287] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.5:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 3
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 3
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-10-04 16:40:08,320] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:40:08,321] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:40:08,322] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:40:08,324] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:40:08,356] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
[2022-10-04 16:40:08,360] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
[2022-10-04 16:40:08,365] INFO Loaded 0 logs in 8ms. (kafka.log.LogManager)
[2022-10-04 16:40:08,365] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2022-10-04 16:40:08,368] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2022-10-04 16:40:08,380] INFO Starting the log cleaner (kafka.log.LogCleaner)
[2022-10-04 16:40:08,464] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
[2022-10-04 16:40:08,703] INFO [BrokerToControllerChannelManager broker=3 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:40:08,843] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2022-10-04 16:40:08,847] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2022-10-04 16:40:08,873] INFO [SocketServer listenerType=ZK_BROKER, nodeId=3] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-10-04 16:40:08,879] INFO [BrokerToControllerChannelManager broker=3 name=alterIsr]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:40:08,900] INFO [ExpirationReaper-3-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:08,901] INFO [ExpirationReaper-3-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:08,902] INFO [ExpirationReaper-3-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:08,903] INFO [ExpirationReaper-3-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:08,918] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2022-10-04 16:40:08,972] INFO Creating /brokers/ids/3 (is it secure? false) (kafka.zk.KafkaZkClient)
[2022-10-04 16:40:08,986] INFO Stat of the created znode at /brokers/ids/3 is: 85,85,1664901608981,1664901608981,1,0,0,72057631560237063,204,0,85
 (kafka.zk.KafkaZkClient)
[2022-10-04 16:40:08,987] INFO Registered broker 3 at path /brokers/ids/3 with addresses: PLAINTEXT://172.99.0.5:9092, czxid (broker epoch): 85 (kafka.zk.KafkaZkClient)
[2022-10-04 16:40:09,039] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-04 16:40:09,047] INFO [ExpirationReaper-3-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:09,051] DEBUG [Controller id=3] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-10-04 16:40:09,052] INFO [ExpirationReaper-3-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:09,053] INFO [ExpirationReaper-3-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:09,070] INFO [GroupCoordinator 3]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:40:09,074] INFO [GroupCoordinator 3]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:40:09,091] INFO [TransactionCoordinator id=3] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:40:09,094] INFO [Transaction Marker Channel Manager 3]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2022-10-04 16:40:09,094] INFO [TransactionCoordinator id=3] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:40:09,126] INFO [ExpirationReaper-3-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:40:09,143] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2022-10-04 16:40:09,151] INFO [SocketServer listenerType=ZK_BROKER, nodeId=3] Starting socket server acceptors and processors (kafka.network.SocketServer)
[2022-10-04 16:40:09,154] INFO [SocketServer listenerType=ZK_BROKER, nodeId=3] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-10-04 16:40:09,155] INFO [SocketServer listenerType=ZK_BROKER, nodeId=3] Started socket server acceptors and processors (kafka.network.SocketServer)
[2022-10-04 16:40:09,160] INFO Kafka version: 7.1.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:40:09,160] INFO Kafka commitId: c86722379ab997cc (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:40:09,160] INFO Kafka startTimeMs: 1664901609155 (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:40:09,161] INFO [KafkaServer id=3] started (kafka.server.KafkaServer)
[2022-10-04 16:40:09,214] INFO [BrokerToControllerChannelManager broker=3 name=forwarding]: Recorded new controller, from now on will use broker 172.99.0.4:9092 (id: 2 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:40:09,282] INFO [BrokerToControllerChannelManager broker=3 name=alterIsr]: Recorded new controller, from now on will use broker 172.99.0.4:9092 (id: 2 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:41:21,199] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 2 for 1 partitions (state.change.logger)
[2022-10-04 16:41:21,201] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 1 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:21,221] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 2 epoch 1 starting the become-follower transition for partition output-0 with leader 2 (state.change.logger)
[2022-10-04 16:41:21,274] INFO [LogLoader partition=output-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:21,286] INFO Created log for partition output-0 in /var/lib/kafka/data/output-0 with properties {min.insync.replicas=3} (kafka.log.LogManager)
[2022-10-04 16:41:21,287] INFO [Partition output-0 broker=3] No checkpointed highwatermark is found for partition output-0 (kafka.cluster.Partition)
[2022-10-04 16:41:21,288] INFO [Partition output-0 broker=3] Log loaded for partition output-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:21,288] INFO [Broker id=3] Follower output-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:21,289] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions HashSet(output-0) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:21,290] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 1 for 1 partitions (state.change.logger)
[2022-10-04 16:41:21,307] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:21,310] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 2 for partitions Map(output-0 -> InitialFetchState(Some(Qmff4ltjSS-E1VggpYFpMw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:21,311] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition output-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:21,312] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 1 from controller 2 epoch 1 for the become-follower transition for partition output-0 with leader 2 (state.change.logger)
[2022-10-04 16:41:21,312] INFO [UnifiedLog partition=output-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:21,324] INFO [Broker id=3] Finished LeaderAndIsr request in 126ms correlationId 1 from controller 2 for 1 partitions (state.change.logger)
[2022-10-04 16:41:21,330] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition output-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 2 (state.change.logger)
[2022-10-04 16:41:21,331] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 2 (state.change.logger)
[2022-10-04 16:41:21,575] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition src-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 3 (state.change.logger)
[2022-10-04 16:41:21,575] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 3 (state.change.logger)
[2022-10-04 16:41:36,485] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 for 37 partitions (state.change.logger)
[2022-10-04 16:41:36,485] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,485] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,485] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,486] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,487] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:36,501] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-7 (state.change.logger)
[2022-10-04 16:41:36,501] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-39 (state.change.logger)
[2022-10-04 16:41:36,501] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-3 (state.change.logger)
[2022-10-04 16:41:36,501] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-35 (state.change.logger)
[2022-10-04 16:41:36,501] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-15 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-47 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-11 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-43 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-23 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-19 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-31 (state.change.logger)
[2022-10-04 16:41:36,502] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-leader transition for partition __transaction_state-27 (state.change.logger)
[2022-10-04 16:41:36,503] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions HashSet(__transaction_state-31, __transaction_state-15, __transaction_state-7, __transaction_state-3, __transaction_state-39, __transaction_state-43, __transaction_state-11, __transaction_state-35, __transaction_state-23, __transaction_state-47, __transaction_state-19, __transaction_state-27) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:36,503] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 4 from controller 2 epoch 1 as part of the become-leader transition for 12 partitions (state.change.logger)
[2022-10-04 16:41:36,508] INFO [LogLoader partition=__transaction_state-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,509] INFO Created log for partition __transaction_state-7 in /var/lib/kafka/data/__transaction_state-7 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,510] INFO [Partition __transaction_state-7 broker=3] No checkpointed highwatermark is found for partition __transaction_state-7 (kafka.cluster.Partition)
[2022-10-04 16:41:36,510] INFO [Partition __transaction_state-7 broker=3] Log loaded for partition __transaction_state-7 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,512] INFO [Broker id=3] Leader __transaction_state-7 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,519] INFO [LogLoader partition=__transaction_state-39, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,520] INFO Created log for partition __transaction_state-39 in /var/lib/kafka/data/__transaction_state-39 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,520] INFO [Partition __transaction_state-39 broker=3] No checkpointed highwatermark is found for partition __transaction_state-39 (kafka.cluster.Partition)
[2022-10-04 16:41:36,520] INFO [Partition __transaction_state-39 broker=3] Log loaded for partition __transaction_state-39 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,520] INFO [Broker id=3] Leader __transaction_state-39 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,524] INFO [LogLoader partition=__transaction_state-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,525] INFO Created log for partition __transaction_state-3 in /var/lib/kafka/data/__transaction_state-3 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,525] INFO [Partition __transaction_state-3 broker=3] No checkpointed highwatermark is found for partition __transaction_state-3 (kafka.cluster.Partition)
[2022-10-04 16:41:36,525] INFO [Partition __transaction_state-3 broker=3] Log loaded for partition __transaction_state-3 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,525] INFO [Broker id=3] Leader __transaction_state-3 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,529] INFO [LogLoader partition=__transaction_state-35, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,529] INFO Created log for partition __transaction_state-35 in /var/lib/kafka/data/__transaction_state-35 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,530] INFO [Partition __transaction_state-35 broker=3] No checkpointed highwatermark is found for partition __transaction_state-35 (kafka.cluster.Partition)
[2022-10-04 16:41:36,530] INFO [Partition __transaction_state-35 broker=3] Log loaded for partition __transaction_state-35 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,530] INFO [Broker id=3] Leader __transaction_state-35 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,533] INFO [LogLoader partition=__transaction_state-15, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,534] INFO Created log for partition __transaction_state-15 in /var/lib/kafka/data/__transaction_state-15 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,534] INFO [Partition __transaction_state-15 broker=3] No checkpointed highwatermark is found for partition __transaction_state-15 (kafka.cluster.Partition)
[2022-10-04 16:41:36,534] INFO [Partition __transaction_state-15 broker=3] Log loaded for partition __transaction_state-15 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,534] INFO [Broker id=3] Leader __transaction_state-15 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,538] INFO [LogLoader partition=__transaction_state-47, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,538] INFO Created log for partition __transaction_state-47 in /var/lib/kafka/data/__transaction_state-47 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,538] INFO [Partition __transaction_state-47 broker=3] No checkpointed highwatermark is found for partition __transaction_state-47 (kafka.cluster.Partition)
[2022-10-04 16:41:36,539] INFO [Partition __transaction_state-47 broker=3] Log loaded for partition __transaction_state-47 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,539] INFO [Broker id=3] Leader __transaction_state-47 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,543] INFO [LogLoader partition=__transaction_state-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,543] INFO Created log for partition __transaction_state-11 in /var/lib/kafka/data/__transaction_state-11 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,543] INFO [Partition __transaction_state-11 broker=3] No checkpointed highwatermark is found for partition __transaction_state-11 (kafka.cluster.Partition)
[2022-10-04 16:41:36,544] INFO [Partition __transaction_state-11 broker=3] Log loaded for partition __transaction_state-11 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,544] INFO [Broker id=3] Leader __transaction_state-11 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,547] INFO [LogLoader partition=__transaction_state-43, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,548] INFO Created log for partition __transaction_state-43 in /var/lib/kafka/data/__transaction_state-43 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,548] INFO [Partition __transaction_state-43 broker=3] No checkpointed highwatermark is found for partition __transaction_state-43 (kafka.cluster.Partition)
[2022-10-04 16:41:36,548] INFO [Partition __transaction_state-43 broker=3] Log loaded for partition __transaction_state-43 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,548] INFO [Broker id=3] Leader __transaction_state-43 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,552] INFO [LogLoader partition=__transaction_state-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,552] INFO Created log for partition __transaction_state-23 in /var/lib/kafka/data/__transaction_state-23 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,552] INFO [Partition __transaction_state-23 broker=3] No checkpointed highwatermark is found for partition __transaction_state-23 (kafka.cluster.Partition)
[2022-10-04 16:41:36,552] INFO [Partition __transaction_state-23 broker=3] Log loaded for partition __transaction_state-23 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,553] INFO [Broker id=3] Leader __transaction_state-23 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,556] INFO [LogLoader partition=__transaction_state-19, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,557] INFO Created log for partition __transaction_state-19 in /var/lib/kafka/data/__transaction_state-19 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,557] INFO [Partition __transaction_state-19 broker=3] No checkpointed highwatermark is found for partition __transaction_state-19 (kafka.cluster.Partition)
[2022-10-04 16:41:36,557] INFO [Partition __transaction_state-19 broker=3] Log loaded for partition __transaction_state-19 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,557] INFO [Broker id=3] Leader __transaction_state-19 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,560] INFO [LogLoader partition=__transaction_state-31, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,561] INFO Created log for partition __transaction_state-31 in /var/lib/kafka/data/__transaction_state-31 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,561] INFO [Partition __transaction_state-31 broker=3] No checkpointed highwatermark is found for partition __transaction_state-31 (kafka.cluster.Partition)
[2022-10-04 16:41:36,561] INFO [Partition __transaction_state-31 broker=3] Log loaded for partition __transaction_state-31 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,561] INFO [Broker id=3] Leader __transaction_state-31 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,564] INFO [LogLoader partition=__transaction_state-27, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,565] INFO Created log for partition __transaction_state-27 in /var/lib/kafka/data/__transaction_state-27 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,565] INFO [Partition __transaction_state-27 broker=3] No checkpointed highwatermark is found for partition __transaction_state-27 (kafka.cluster.Partition)
[2022-10-04 16:41:36,565] INFO [Partition __transaction_state-27 broker=3] Log loaded for partition __transaction_state-27 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,565] INFO [Broker id=3] Leader __transaction_state-27 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-7 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-39 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-3 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-35 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-15 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-47 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-11 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-43 (state.change.logger)
[2022-10-04 16:41:36,567] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-23 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-19 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-31 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-leader transition for partition __transaction_state-27 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-22 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-37 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-26 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-41 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-8 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-38 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-4 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-34 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-49 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-16 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-46 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-5 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-20 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-1 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-32 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-13 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-28 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-40 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-2 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-17 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-14 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-29 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-44 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-10 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,568] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 4 from controller 2 epoch 1 starting the become-follower transition for partition __transaction_state-25 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,571] INFO [LogLoader partition=__transaction_state-22, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,572] INFO Created log for partition __transaction_state-22 in /var/lib/kafka/data/__transaction_state-22 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,572] INFO [Partition __transaction_state-22 broker=3] No checkpointed highwatermark is found for partition __transaction_state-22 (kafka.cluster.Partition)
[2022-10-04 16:41:36,572] INFO [Partition __transaction_state-22 broker=3] Log loaded for partition __transaction_state-22 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,572] INFO [Broker id=3] Follower __transaction_state-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,575] INFO [LogLoader partition=__transaction_state-37, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,576] INFO Created log for partition __transaction_state-37 in /var/lib/kafka/data/__transaction_state-37 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,576] INFO [Partition __transaction_state-37 broker=3] No checkpointed highwatermark is found for partition __transaction_state-37 (kafka.cluster.Partition)
[2022-10-04 16:41:36,576] INFO [Partition __transaction_state-37 broker=3] Log loaded for partition __transaction_state-37 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,576] INFO [Broker id=3] Follower __transaction_state-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,579] INFO [LogLoader partition=__transaction_state-26, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,580] INFO Created log for partition __transaction_state-26 in /var/lib/kafka/data/__transaction_state-26 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,580] INFO [Partition __transaction_state-26 broker=3] No checkpointed highwatermark is found for partition __transaction_state-26 (kafka.cluster.Partition)
[2022-10-04 16:41:36,580] INFO [Partition __transaction_state-26 broker=3] Log loaded for partition __transaction_state-26 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,580] INFO [Broker id=3] Follower __transaction_state-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,583] INFO [LogLoader partition=__transaction_state-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,583] INFO Created log for partition __transaction_state-41 in /var/lib/kafka/data/__transaction_state-41 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,583] INFO [Partition __transaction_state-41 broker=3] No checkpointed highwatermark is found for partition __transaction_state-41 (kafka.cluster.Partition)
[2022-10-04 16:41:36,583] INFO [Partition __transaction_state-41 broker=3] Log loaded for partition __transaction_state-41 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,583] INFO [Broker id=3] Follower __transaction_state-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,586] INFO [LogLoader partition=__transaction_state-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,587] INFO Created log for partition __transaction_state-8 in /var/lib/kafka/data/__transaction_state-8 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,587] INFO [Partition __transaction_state-8 broker=3] No checkpointed highwatermark is found for partition __transaction_state-8 (kafka.cluster.Partition)
[2022-10-04 16:41:36,587] INFO [Partition __transaction_state-8 broker=3] Log loaded for partition __transaction_state-8 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,587] INFO [Broker id=3] Follower __transaction_state-8 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,590] INFO [LogLoader partition=__transaction_state-38, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,590] INFO Created log for partition __transaction_state-38 in /var/lib/kafka/data/__transaction_state-38 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,590] INFO [Partition __transaction_state-38 broker=3] No checkpointed highwatermark is found for partition __transaction_state-38 (kafka.cluster.Partition)
[2022-10-04 16:41:36,591] INFO [Partition __transaction_state-38 broker=3] Log loaded for partition __transaction_state-38 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,591] INFO [Broker id=3] Follower __transaction_state-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,593] INFO [LogLoader partition=__transaction_state-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,594] INFO Created log for partition __transaction_state-4 in /var/lib/kafka/data/__transaction_state-4 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,594] INFO [Partition __transaction_state-4 broker=3] No checkpointed highwatermark is found for partition __transaction_state-4 (kafka.cluster.Partition)
[2022-10-04 16:41:36,594] INFO [Partition __transaction_state-4 broker=3] Log loaded for partition __transaction_state-4 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,594] INFO [Broker id=3] Follower __transaction_state-4 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,597] INFO [LogLoader partition=__transaction_state-34, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,597] INFO Created log for partition __transaction_state-34 in /var/lib/kafka/data/__transaction_state-34 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,597] INFO [Partition __transaction_state-34 broker=3] No checkpointed highwatermark is found for partition __transaction_state-34 (kafka.cluster.Partition)
[2022-10-04 16:41:36,597] INFO [Partition __transaction_state-34 broker=3] Log loaded for partition __transaction_state-34 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,597] INFO [Broker id=3] Follower __transaction_state-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,600] INFO [LogLoader partition=__transaction_state-49, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,601] INFO Created log for partition __transaction_state-49 in /var/lib/kafka/data/__transaction_state-49 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,601] INFO [Partition __transaction_state-49 broker=3] No checkpointed highwatermark is found for partition __transaction_state-49 (kafka.cluster.Partition)
[2022-10-04 16:41:36,601] INFO [Partition __transaction_state-49 broker=3] Log loaded for partition __transaction_state-49 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,601] INFO [Broker id=3] Follower __transaction_state-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,603] INFO [LogLoader partition=__transaction_state-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,604] INFO Created log for partition __transaction_state-16 in /var/lib/kafka/data/__transaction_state-16 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,604] INFO [Partition __transaction_state-16 broker=3] No checkpointed highwatermark is found for partition __transaction_state-16 (kafka.cluster.Partition)
[2022-10-04 16:41:36,604] INFO [Partition __transaction_state-16 broker=3] Log loaded for partition __transaction_state-16 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,604] INFO [Broker id=3] Follower __transaction_state-16 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,607] INFO [LogLoader partition=__transaction_state-46, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,608] INFO Created log for partition __transaction_state-46 in /var/lib/kafka/data/__transaction_state-46 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,608] INFO [Partition __transaction_state-46 broker=3] No checkpointed highwatermark is found for partition __transaction_state-46 (kafka.cluster.Partition)
[2022-10-04 16:41:36,608] INFO [Partition __transaction_state-46 broker=3] Log loaded for partition __transaction_state-46 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,608] INFO [Broker id=3] Follower __transaction_state-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,611] INFO [LogLoader partition=__transaction_state-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,611] INFO Created log for partition __transaction_state-5 in /var/lib/kafka/data/__transaction_state-5 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,611] INFO [Partition __transaction_state-5 broker=3] No checkpointed highwatermark is found for partition __transaction_state-5 (kafka.cluster.Partition)
[2022-10-04 16:41:36,611] INFO [Partition __transaction_state-5 broker=3] Log loaded for partition __transaction_state-5 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,611] INFO [Broker id=3] Follower __transaction_state-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,614] INFO [LogLoader partition=__transaction_state-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,615] INFO Created log for partition __transaction_state-20 in /var/lib/kafka/data/__transaction_state-20 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,615] INFO [Partition __transaction_state-20 broker=3] No checkpointed highwatermark is found for partition __transaction_state-20 (kafka.cluster.Partition)
[2022-10-04 16:41:36,615] INFO [Partition __transaction_state-20 broker=3] Log loaded for partition __transaction_state-20 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,615] INFO [Broker id=3] Follower __transaction_state-20 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,617] INFO [LogLoader partition=__transaction_state-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,618] INFO Created log for partition __transaction_state-1 in /var/lib/kafka/data/__transaction_state-1 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,618] INFO [Partition __transaction_state-1 broker=3] No checkpointed highwatermark is found for partition __transaction_state-1 (kafka.cluster.Partition)
[2022-10-04 16:41:36,618] INFO [Partition __transaction_state-1 broker=3] Log loaded for partition __transaction_state-1 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,618] INFO [Broker id=3] Follower __transaction_state-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,621] INFO [LogLoader partition=__transaction_state-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,621] INFO Created log for partition __transaction_state-32 in /var/lib/kafka/data/__transaction_state-32 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,621] INFO [Partition __transaction_state-32 broker=3] No checkpointed highwatermark is found for partition __transaction_state-32 (kafka.cluster.Partition)
[2022-10-04 16:41:36,622] INFO [Partition __transaction_state-32 broker=3] Log loaded for partition __transaction_state-32 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,622] INFO [Broker id=3] Follower __transaction_state-32 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,624] INFO [LogLoader partition=__transaction_state-13, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,625] INFO Created log for partition __transaction_state-13 in /var/lib/kafka/data/__transaction_state-13 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,625] INFO [Partition __transaction_state-13 broker=3] No checkpointed highwatermark is found for partition __transaction_state-13 (kafka.cluster.Partition)
[2022-10-04 16:41:36,625] INFO [Partition __transaction_state-13 broker=3] Log loaded for partition __transaction_state-13 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,625] INFO [Broker id=3] Follower __transaction_state-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,627] INFO [LogLoader partition=__transaction_state-28, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,628] INFO Created log for partition __transaction_state-28 in /var/lib/kafka/data/__transaction_state-28 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,628] INFO [Partition __transaction_state-28 broker=3] No checkpointed highwatermark is found for partition __transaction_state-28 (kafka.cluster.Partition)
[2022-10-04 16:41:36,628] INFO [Partition __transaction_state-28 broker=3] Log loaded for partition __transaction_state-28 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,628] INFO [Broker id=3] Follower __transaction_state-28 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,631] INFO [LogLoader partition=__transaction_state-40, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,631] INFO Created log for partition __transaction_state-40 in /var/lib/kafka/data/__transaction_state-40 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,631] INFO [Partition __transaction_state-40 broker=3] No checkpointed highwatermark is found for partition __transaction_state-40 (kafka.cluster.Partition)
[2022-10-04 16:41:36,631] INFO [Partition __transaction_state-40 broker=3] Log loaded for partition __transaction_state-40 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,631] INFO [Broker id=3] Follower __transaction_state-40 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,634] INFO [LogLoader partition=__transaction_state-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,635] INFO Created log for partition __transaction_state-2 in /var/lib/kafka/data/__transaction_state-2 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,635] INFO [Partition __transaction_state-2 broker=3] No checkpointed highwatermark is found for partition __transaction_state-2 (kafka.cluster.Partition)
[2022-10-04 16:41:36,635] INFO [Partition __transaction_state-2 broker=3] Log loaded for partition __transaction_state-2 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,635] INFO [Broker id=3] Follower __transaction_state-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,637] INFO [LogLoader partition=__transaction_state-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,638] INFO Created log for partition __transaction_state-17 in /var/lib/kafka/data/__transaction_state-17 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,638] INFO [Partition __transaction_state-17 broker=3] No checkpointed highwatermark is found for partition __transaction_state-17 (kafka.cluster.Partition)
[2022-10-04 16:41:36,638] INFO [Partition __transaction_state-17 broker=3] Log loaded for partition __transaction_state-17 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,638] INFO [Broker id=3] Follower __transaction_state-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,641] INFO [LogLoader partition=__transaction_state-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,642] INFO Created log for partition __transaction_state-14 in /var/lib/kafka/data/__transaction_state-14 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,642] INFO [Partition __transaction_state-14 broker=3] No checkpointed highwatermark is found for partition __transaction_state-14 (kafka.cluster.Partition)
[2022-10-04 16:41:36,642] INFO [Partition __transaction_state-14 broker=3] Log loaded for partition __transaction_state-14 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,642] INFO [Broker id=3] Follower __transaction_state-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,645] INFO [LogLoader partition=__transaction_state-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,646] INFO Created log for partition __transaction_state-29 in /var/lib/kafka/data/__transaction_state-29 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,646] INFO [Partition __transaction_state-29 broker=3] No checkpointed highwatermark is found for partition __transaction_state-29 (kafka.cluster.Partition)
[2022-10-04 16:41:36,646] INFO [Partition __transaction_state-29 broker=3] Log loaded for partition __transaction_state-29 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,646] INFO [Broker id=3] Follower __transaction_state-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,649] INFO [LogLoader partition=__transaction_state-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,650] INFO Created log for partition __transaction_state-44 in /var/lib/kafka/data/__transaction_state-44 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,650] INFO [Partition __transaction_state-44 broker=3] No checkpointed highwatermark is found for partition __transaction_state-44 (kafka.cluster.Partition)
[2022-10-04 16:41:36,650] INFO [Partition __transaction_state-44 broker=3] Log loaded for partition __transaction_state-44 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,650] INFO [Broker id=3] Follower __transaction_state-44 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,652] INFO [LogLoader partition=__transaction_state-10, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,653] INFO Created log for partition __transaction_state-10 in /var/lib/kafka/data/__transaction_state-10 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,653] INFO [Partition __transaction_state-10 broker=3] No checkpointed highwatermark is found for partition __transaction_state-10 (kafka.cluster.Partition)
[2022-10-04 16:41:36,654] INFO [Partition __transaction_state-10 broker=3] Log loaded for partition __transaction_state-10 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,654] INFO [Broker id=3] Follower __transaction_state-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,659] INFO [LogLoader partition=__transaction_state-25, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:36,660] INFO Created log for partition __transaction_state-25 in /var/lib/kafka/data/__transaction_state-25 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:41:36,660] INFO [Partition __transaction_state-25 broker=3] No checkpointed highwatermark is found for partition __transaction_state-25 (kafka.cluster.Partition)
[2022-10-04 16:41:36,660] INFO [Partition __transaction_state-25 broker=3] Log loaded for partition __transaction_state-25 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:36,660] INFO [Broker id=3] Follower __transaction_state-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:36,660] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions HashSet(__transaction_state-44, __transaction_state-13, __transaction_state-46, __transaction_state-17, __transaction_state-34, __transaction_state-5, __transaction_state-38, __transaction_state-40, __transaction_state-26, __transaction_state-28, __transaction_state-32, __transaction_state-1, __transaction_state-20, __transaction_state-22, __transaction_state-10, __transaction_state-14, __transaction_state-16, __transaction_state-49, __transaction_state-2, __transaction_state-4, __transaction_state-37, __transaction_state-8, __transaction_state-41, __transaction_state-29, __transaction_state-25) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:36,660] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 4 for 25 partitions (state.change.logger)
[2022-10-04 16:41:36,665] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,666] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 4 for partitions HashMap(__transaction_state-44 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-4 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-32 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-8 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-16 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-40 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-28 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __transaction_state-20 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:36,666] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-28 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,666] INFO [UnifiedLog partition=__transaction_state-28, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,667] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-44 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,667] INFO [UnifiedLog partition=__transaction_state-44, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,667] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-16 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,667] INFO [UnifiedLog partition=__transaction_state-16, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,668] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-32 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,668] INFO [UnifiedLog partition=__transaction_state-32, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,668] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-4 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,668] INFO [UnifiedLog partition=__transaction_state-4, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,668] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-20 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,668] INFO [UnifiedLog partition=__transaction_state-20, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,668] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-8 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,668] INFO [UnifiedLog partition=__transaction_state-8, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,668] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __transaction_state-40 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,668] INFO [UnifiedLog partition=__transaction_state-40, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,669] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,670] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 1 for partitions HashMap(__transaction_state-49 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-13 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-37 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-29 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-5 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-41 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-1 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-25 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __transaction_state-17 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:36,671] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-13 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,671] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 2 for partitions HashMap(__transaction_state-46 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-2 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-38 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-22 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-26 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-34 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-14 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __transaction_state-10 -> InitialFetchState(Some(oBa-jrBgTGCCq_p-CRZNNw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:36,671] INFO [UnifiedLog partition=__transaction_state-13, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-22 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-37 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-26 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-41 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-8 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-38 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,671] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-4 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-34 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-49 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-16 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-46 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-5 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-20 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-1 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-32 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-13 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-28 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-40 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-2 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-17 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-14 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-29 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-44 with leader 4 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-10 with leader 2 (state.change.logger)
[2022-10-04 16:41:36,672] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 4 from controller 2 epoch 1 for the become-follower transition for partition __transaction_state-25 with leader 1 (state.change.logger)
[2022-10-04 16:41:36,673] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-29 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,673] INFO [UnifiedLog partition=__transaction_state-29, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,673] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-17 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,673] INFO [UnifiedLog partition=__transaction_state-17, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,673] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-49 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,673] INFO [UnifiedLog partition=__transaction_state-49, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,673] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-1 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,673] INFO [UnifiedLog partition=__transaction_state-1, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,673] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-5 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,673] INFO [UnifiedLog partition=__transaction_state-5, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,674] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-37 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,674] INFO [UnifiedLog partition=__transaction_state-37, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,674] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-25 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,674] INFO [UnifiedLog partition=__transaction_state-25, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,674] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __transaction_state-41 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,674] INFO [UnifiedLog partition=__transaction_state-41, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,675] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 7 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,679] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 39 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,679] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 3 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 35 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 15 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 47 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 11 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 43 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-7 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 23 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 19 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 31 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Elected as the txn coordinator for partition 27 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,680] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 22 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-22 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 37 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-37 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 26 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-26 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 41 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-41 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 8 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-8 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 38 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-38 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 4 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-4 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 34 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-34 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 49 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-49 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 16 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-16 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 46 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-46 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,681] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 5 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,681] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-5 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 20 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-20 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 1 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-1 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 32 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-32 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 13 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-13 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 28 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-28 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 40 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-40 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 2 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-2 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 17 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-17 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 14 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-14 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 29 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-29 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 44 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-44 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 10 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-10 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,682] INFO [TransactionCoordinator id=3] Resigned as the txn coordinator for partition 25 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:41:36,682] INFO [Transaction State Manager 3]: No cached transaction metadata found for __transaction_state-25 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,683] INFO [Broker id=3] Finished LeaderAndIsr request in 197ms correlationId 4 from controller 2 for 37 partitions (state.change.logger)
[2022-10-04 16:41:36,689] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-7 in 10 milliseconds, of which 1 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,691] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __transaction_state-42 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-13 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __transaction_state-46 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-17 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __transaction_state-34 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-5 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __transaction_state-38 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-9 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __transaction_state-26 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __transaction_state-30 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-1 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __transaction_state-18 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __transaction_state-22 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-12 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-45 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-16 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-7 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-49 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-39 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-4 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-37 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-8 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-41 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-29 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-33 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-21 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-25 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,692] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __transaction_state-11 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-44 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __transaction_state-15 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-48 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __transaction_state-3 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-36 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __transaction_state-7 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-40 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-28 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-32 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-20 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-24 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __transaction_state-10 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __transaction_state-43 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __transaction_state-14 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __transaction_state-47 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __transaction_state-2 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __transaction_state-35 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __transaction_state-6 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __transaction_state-39 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __transaction_state-27 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __transaction_state-31 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __transaction_state-19 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __transaction_state-23 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,693] INFO [Broker id=3] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:41:36,695] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-39 in 16 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,695] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-39 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,695] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-3 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,698] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-3 in 18 milliseconds, of which 15 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,698] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-3 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,698] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-35 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,700] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-35 in 20 milliseconds, of which 18 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,700] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-35 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,700] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-15 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,702] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-15 in 22 milliseconds, of which 20 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,703] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-15 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,703] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-47 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,705] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-47 in 25 milliseconds, of which 23 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,705] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-47 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,705] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-11 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,707] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-11 in 27 milliseconds, of which 25 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,707] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-11 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,707] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-43 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,708] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-43 in 28 milliseconds, of which 27 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,708] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-43 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,708] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-23 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,710] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-23 in 30 milliseconds, of which 28 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,710] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-23 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,710] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-19 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,712] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-19 in 32 milliseconds, of which 30 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,712] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-19 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,712] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-31 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,713] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-31 in 33 milliseconds, of which 32 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,713] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-31 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,713] INFO [Transaction State Manager 3]: Loading transaction metadata from __transaction_state-27 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,715] INFO [Transaction State Manager 3]: Finished loading 0 transaction metadata from __transaction_state-27 in 35 milliseconds, of which 33 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,715] INFO [Transaction State Manager 3]: Completed loading transaction metadata from __transaction_state-27 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:41:36,935] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-10 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,935] INFO [UnifiedLog partition=__transaction_state-10, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,935] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-26 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,935] INFO [UnifiedLog partition=__transaction_state-26, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,935] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-14 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,935] INFO [UnifiedLog partition=__transaction_state-14, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,936] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-46 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,936] INFO [UnifiedLog partition=__transaction_state-46, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,936] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-2 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,936] INFO [UnifiedLog partition=__transaction_state-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,936] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-34 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,936] INFO [UnifiedLog partition=__transaction_state-34, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,936] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-22 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,936] INFO [UnifiedLog partition=__transaction_state-22, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:36,936] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __transaction_state-38 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:36,936] INFO [UnifiedLog partition=__transaction_state-38, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,759] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 for 38 partitions (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,759] TRACE [Broker id=3] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 2 epoch 1 (state.change.logger)
[2022-10-04 16:41:37,767] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:41:37,768] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:41:37,768] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions HashSet(__consumer_offsets-36, __consumer_offsets-24, __consumer_offsets-48, __consumer_offsets-12, __consumer_offsets-8, __consumer_offsets-4, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:37,769] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 2 epoch 1 as part of the become-leader transition for 13 partitions (state.change.logger)
[2022-10-04 16:41:37,772] INFO [LogLoader partition=__consumer_offsets-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,773] INFO Created log for partition __consumer_offsets-20 in /var/lib/kafka/data/__consumer_offsets-20 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,774] INFO [Partition __consumer_offsets-20 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
[2022-10-04 16:41:37,774] INFO [Partition __consumer_offsets-20 broker=3] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,774] INFO [Broker id=3] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,777] INFO [LogLoader partition=__consumer_offsets-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,778] INFO Created log for partition __consumer_offsets-24 in /var/lib/kafka/data/__consumer_offsets-24 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,778] INFO [Partition __consumer_offsets-24 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
[2022-10-04 16:41:37,778] INFO [Partition __consumer_offsets-24 broker=3] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,778] INFO [Broker id=3] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,781] INFO [LogLoader partition=__consumer_offsets-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,781] INFO Created log for partition __consumer_offsets-12 in /var/lib/kafka/data/__consumer_offsets-12 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,781] INFO [Partition __consumer_offsets-12 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
[2022-10-04 16:41:37,782] INFO [Partition __consumer_offsets-12 broker=3] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,782] INFO [Broker id=3] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,785] INFO [LogLoader partition=__consumer_offsets-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,785] INFO Created log for partition __consumer_offsets-44 in /var/lib/kafka/data/__consumer_offsets-44 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,785] INFO [Partition __consumer_offsets-44 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
[2022-10-04 16:41:37,785] INFO [Partition __consumer_offsets-44 broker=3] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,785] INFO [Broker id=3] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,789] INFO [LogLoader partition=__consumer_offsets-48, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,789] INFO Created log for partition __consumer_offsets-48 in /var/lib/kafka/data/__consumer_offsets-48 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,789] INFO [Partition __consumer_offsets-48 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
[2022-10-04 16:41:37,789] INFO [Partition __consumer_offsets-48 broker=3] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,789] INFO [Broker id=3] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,792] INFO [LogLoader partition=__consumer_offsets-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,793] INFO Created log for partition __consumer_offsets-16 in /var/lib/kafka/data/__consumer_offsets-16 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,793] INFO [Partition __consumer_offsets-16 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
[2022-10-04 16:41:37,793] INFO [Partition __consumer_offsets-16 broker=3] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,793] INFO [Broker id=3] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,796] INFO [LogLoader partition=__consumer_offsets-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,797] INFO Created log for partition __consumer_offsets-4 in /var/lib/kafka/data/__consumer_offsets-4 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,797] INFO [Partition __consumer_offsets-4 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
[2022-10-04 16:41:37,797] INFO [Partition __consumer_offsets-4 broker=3] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,797] INFO [Broker id=3] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,800] INFO [LogLoader partition=__consumer_offsets-36, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,801] INFO Created log for partition __consumer_offsets-36 in /var/lib/kafka/data/__consumer_offsets-36 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,801] INFO [Partition __consumer_offsets-36 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
[2022-10-04 16:41:37,801] INFO [Partition __consumer_offsets-36 broker=3] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,801] INFO [Broker id=3] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,804] INFO [LogLoader partition=__consumer_offsets-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,804] INFO Created log for partition __consumer_offsets-8 in /var/lib/kafka/data/__consumer_offsets-8 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,804] INFO [Partition __consumer_offsets-8 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
[2022-10-04 16:41:37,804] INFO [Partition __consumer_offsets-8 broker=3] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,805] INFO [Broker id=3] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,808] INFO [LogLoader partition=__consumer_offsets-40, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,808] INFO Created log for partition __consumer_offsets-40 in /var/lib/kafka/data/__consumer_offsets-40 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,808] INFO [Partition __consumer_offsets-40 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
[2022-10-04 16:41:37,808] INFO [Partition __consumer_offsets-40 broker=3] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,808] INFO [Broker id=3] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,811] INFO [LogLoader partition=__consumer_offsets-28, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,812] INFO Created log for partition __consumer_offsets-28 in /var/lib/kafka/data/__consumer_offsets-28 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,812] INFO [Partition __consumer_offsets-28 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
[2022-10-04 16:41:37,812] INFO [Partition __consumer_offsets-28 broker=3] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,812] INFO [Broker id=3] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,2,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,815] INFO [LogLoader partition=__consumer_offsets-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,816] INFO Created log for partition __consumer_offsets-0 in /var/lib/kafka/data/__consumer_offsets-0 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,816] INFO [Partition __consumer_offsets-0 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,816] INFO [Partition __consumer_offsets-0 broker=3] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,816] INFO [Broker id=3] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,820] INFO [LogLoader partition=__consumer_offsets-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,821] INFO Created log for partition __consumer_offsets-32 in /var/lib/kafka/data/__consumer_offsets-32 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,821] INFO [Partition __consumer_offsets-32 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
[2022-10-04 16:41:37,821] INFO [Partition __consumer_offsets-32 broker=3] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,821] INFO [Broker id=3] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [3,4,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,821] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:41:37,821] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:41:37,821] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:41:37,821] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:41:37,821] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-37 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-7 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-22 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-41 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-10 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-29 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-14 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-19 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-34 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-23 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-38 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-11 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-26 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-49 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-35 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-5 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-31 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-46 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-1 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-2 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-25 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-43 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-13 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-47 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,822] TRACE [Broker id=3] Handling LeaderAndIsr request correlationId 6 from controller 2 epoch 1 starting the become-follower transition for partition __consumer_offsets-17 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,824] INFO [LogLoader partition=__consumer_offsets-37, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,825] INFO Created log for partition __consumer_offsets-37 in /var/lib/kafka/data/__consumer_offsets-37 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,825] INFO [Partition __consumer_offsets-37 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-37 (kafka.cluster.Partition)
[2022-10-04 16:41:37,825] INFO [Partition __consumer_offsets-37 broker=3] Log loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,825] INFO [Broker id=3] Follower __consumer_offsets-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,827] INFO [LogLoader partition=__consumer_offsets-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,828] INFO Created log for partition __consumer_offsets-7 in /var/lib/kafka/data/__consumer_offsets-7 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,828] INFO [Partition __consumer_offsets-7 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-7 (kafka.cluster.Partition)
[2022-10-04 16:41:37,828] INFO [Partition __consumer_offsets-7 broker=3] Log loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,828] INFO [Broker id=3] Follower __consumer_offsets-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,830] INFO [LogLoader partition=__consumer_offsets-22, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,831] INFO Created log for partition __consumer_offsets-22 in /var/lib/kafka/data/__consumer_offsets-22 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,831] INFO [Partition __consumer_offsets-22 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-22 (kafka.cluster.Partition)
[2022-10-04 16:41:37,831] INFO [Partition __consumer_offsets-22 broker=3] Log loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,831] INFO [Broker id=3] Follower __consumer_offsets-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,833] INFO [LogLoader partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,834] INFO Created log for partition __consumer_offsets-41 in /var/lib/kafka/data/__consumer_offsets-41 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,834] INFO [Partition __consumer_offsets-41 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
[2022-10-04 16:41:37,834] INFO [Partition __consumer_offsets-41 broker=3] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,834] INFO [Broker id=3] Follower __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,836] INFO [LogLoader partition=__consumer_offsets-10, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,837] INFO Created log for partition __consumer_offsets-10 in /var/lib/kafka/data/__consumer_offsets-10 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,837] INFO [Partition __consumer_offsets-10 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-10 (kafka.cluster.Partition)
[2022-10-04 16:41:37,837] INFO [Partition __consumer_offsets-10 broker=3] Log loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,837] INFO [Broker id=3] Follower __consumer_offsets-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,840] INFO [LogLoader partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,841] INFO Created log for partition __consumer_offsets-29 in /var/lib/kafka/data/__consumer_offsets-29 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,841] INFO [Partition __consumer_offsets-29 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
[2022-10-04 16:41:37,841] INFO [Partition __consumer_offsets-29 broker=3] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,841] INFO [Broker id=3] Follower __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,844] INFO [LogLoader partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,844] INFO Created log for partition __consumer_offsets-14 in /var/lib/kafka/data/__consumer_offsets-14 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,844] INFO [Partition __consumer_offsets-14 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
[2022-10-04 16:41:37,844] INFO [Partition __consumer_offsets-14 broker=3] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,844] INFO [Broker id=3] Follower __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,847] INFO [LogLoader partition=__consumer_offsets-19, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,847] INFO Created log for partition __consumer_offsets-19 in /var/lib/kafka/data/__consumer_offsets-19 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,847] INFO [Partition __consumer_offsets-19 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-19 (kafka.cluster.Partition)
[2022-10-04 16:41:37,847] INFO [Partition __consumer_offsets-19 broker=3] Log loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,847] INFO [Broker id=3] Follower __consumer_offsets-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,850] INFO [LogLoader partition=__consumer_offsets-34, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,851] INFO Created log for partition __consumer_offsets-34 in /var/lib/kafka/data/__consumer_offsets-34 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,851] INFO [Partition __consumer_offsets-34 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-34 (kafka.cluster.Partition)
[2022-10-04 16:41:37,851] INFO [Partition __consumer_offsets-34 broker=3] Log loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,851] INFO [Broker id=3] Follower __consumer_offsets-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,854] INFO [LogLoader partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,855] INFO Created log for partition __consumer_offsets-23 in /var/lib/kafka/data/__consumer_offsets-23 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,855] INFO [Partition __consumer_offsets-23 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
[2022-10-04 16:41:37,855] INFO [Partition __consumer_offsets-23 broker=3] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,855] INFO [Broker id=3] Follower __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,858] INFO [LogLoader partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,858] INFO Created log for partition __consumer_offsets-38 in /var/lib/kafka/data/__consumer_offsets-38 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,858] INFO [Partition __consumer_offsets-38 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
[2022-10-04 16:41:37,858] INFO [Partition __consumer_offsets-38 broker=3] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,858] INFO [Broker id=3] Follower __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,861] INFO [LogLoader partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,862] INFO Created log for partition __consumer_offsets-11 in /var/lib/kafka/data/__consumer_offsets-11 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,862] INFO [Partition __consumer_offsets-11 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
[2022-10-04 16:41:37,862] INFO [Partition __consumer_offsets-11 broker=3] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,862] INFO [Broker id=3] Follower __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,865] INFO [LogLoader partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,865] INFO Created log for partition __consumer_offsets-26 in /var/lib/kafka/data/__consumer_offsets-26 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,865] INFO [Partition __consumer_offsets-26 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
[2022-10-04 16:41:37,865] INFO [Partition __consumer_offsets-26 broker=3] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,865] INFO [Broker id=3] Follower __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,868] INFO [LogLoader partition=__consumer_offsets-49, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,868] INFO Created log for partition __consumer_offsets-49 in /var/lib/kafka/data/__consumer_offsets-49 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,869] INFO [Partition __consumer_offsets-49 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition)
[2022-10-04 16:41:37,869] INFO [Partition __consumer_offsets-49 broker=3] Log loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,869] INFO [Broker id=3] Follower __consumer_offsets-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,872] INFO [LogLoader partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,872] INFO Created log for partition __consumer_offsets-35 in /var/lib/kafka/data/__consumer_offsets-35 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,872] INFO [Partition __consumer_offsets-35 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
[2022-10-04 16:41:37,872] INFO [Partition __consumer_offsets-35 broker=3] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,872] INFO [Broker id=3] Follower __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,875] INFO [LogLoader partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,876] INFO Created log for partition __consumer_offsets-5 in /var/lib/kafka/data/__consumer_offsets-5 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,876] INFO [Partition __consumer_offsets-5 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
[2022-10-04 16:41:37,876] INFO [Partition __consumer_offsets-5 broker=3] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,876] INFO [Broker id=3] Follower __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,879] INFO [LogLoader partition=__consumer_offsets-31, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,879] INFO Created log for partition __consumer_offsets-31 in /var/lib/kafka/data/__consumer_offsets-31 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,879] INFO [Partition __consumer_offsets-31 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-31 (kafka.cluster.Partition)
[2022-10-04 16:41:37,879] INFO [Partition __consumer_offsets-31 broker=3] Log loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,879] INFO [Broker id=3] Follower __consumer_offsets-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,881] INFO [LogLoader partition=__consumer_offsets-46, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,882] INFO Created log for partition __consumer_offsets-46 in /var/lib/kafka/data/__consumer_offsets-46 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,882] INFO [Partition __consumer_offsets-46 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-46 (kafka.cluster.Partition)
[2022-10-04 16:41:37,882] INFO [Partition __consumer_offsets-46 broker=3] Log loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,882] INFO [Broker id=3] Follower __consumer_offsets-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,884] INFO [LogLoader partition=__consumer_offsets-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,884] INFO Created log for partition __consumer_offsets-1 in /var/lib/kafka/data/__consumer_offsets-1 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,885] INFO [Partition __consumer_offsets-1 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-1 (kafka.cluster.Partition)
[2022-10-04 16:41:37,885] INFO [Partition __consumer_offsets-1 broker=3] Log loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,885] INFO [Broker id=3] Follower __consumer_offsets-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,887] INFO [LogLoader partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,887] INFO Created log for partition __consumer_offsets-2 in /var/lib/kafka/data/__consumer_offsets-2 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,887] INFO [Partition __consumer_offsets-2 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
[2022-10-04 16:41:37,887] INFO [Partition __consumer_offsets-2 broker=3] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,887] INFO [Broker id=3] Follower __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,889] INFO [LogLoader partition=__consumer_offsets-25, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,889] INFO Created log for partition __consumer_offsets-25 in /var/lib/kafka/data/__consumer_offsets-25 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,889] INFO [Partition __consumer_offsets-25 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-25 (kafka.cluster.Partition)
[2022-10-04 16:41:37,889] INFO [Partition __consumer_offsets-25 broker=3] Log loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,890] INFO [Broker id=3] Follower __consumer_offsets-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,892] INFO [LogLoader partition=__consumer_offsets-43, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,892] INFO Created log for partition __consumer_offsets-43 in /var/lib/kafka/data/__consumer_offsets-43 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,892] INFO [Partition __consumer_offsets-43 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-43 (kafka.cluster.Partition)
[2022-10-04 16:41:37,892] INFO [Partition __consumer_offsets-43 broker=3] Log loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,892] INFO [Broker id=3] Follower __consumer_offsets-43 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,895] INFO [LogLoader partition=__consumer_offsets-13, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,896] INFO Created log for partition __consumer_offsets-13 in /var/lib/kafka/data/__consumer_offsets-13 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,896] INFO [Partition __consumer_offsets-13 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-13 (kafka.cluster.Partition)
[2022-10-04 16:41:37,896] INFO [Partition __consumer_offsets-13 broker=3] Log loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,896] INFO [Broker id=3] Follower __consumer_offsets-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,899] INFO [LogLoader partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,899] INFO Created log for partition __consumer_offsets-47 in /var/lib/kafka/data/__consumer_offsets-47 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,899] INFO [Partition __consumer_offsets-47 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
[2022-10-04 16:41:37,899] INFO [Partition __consumer_offsets-47 broker=3] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,899] INFO [Broker id=3] Follower __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,902] INFO [LogLoader partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:41:37,903] INFO Created log for partition __consumer_offsets-17 in /var/lib/kafka/data/__consumer_offsets-17 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:41:37,903] INFO [Partition __consumer_offsets-17 broker=3] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
[2022-10-04 16:41:37,903] INFO [Partition __consumer_offsets-17 broker=3] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:41:37,903] INFO [Broker id=3] Follower __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:41:37,904] INFO [ReplicaFetcherManager on broker 3] Removed fetcher for partitions HashSet(__consumer_offsets-13, __consumer_offsets-46, __consumer_offsets-11, __consumer_offsets-23, __consumer_offsets-19, __consumer_offsets-17, __consumer_offsets-26, __consumer_offsets-7, __consumer_offsets-5, __consumer_offsets-38, __consumer_offsets-1, __consumer_offsets-34, __consumer_offsets-47, __consumer_offsets-14, __consumer_offsets-43, __consumer_offsets-41, __consumer_offsets-10, __consumer_offsets-22, __consumer_offsets-49, __consumer_offsets-31, __consumer_offsets-29, __consumer_offsets-25, __consumer_offsets-37, __consumer_offsets-35, __consumer_offsets-2) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:37,904] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 2 epoch 1 with correlation id 6 for 25 partitions (state.change.logger)
[2022-10-04 16:41:37,905] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 4 for partitions HashMap(__consumer_offsets-25 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-37 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-17 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-13 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-29 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-41 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-49 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-1 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0), __consumer_offsets-5 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=4, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:37,906] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 1 for partitions HashMap(__consumer_offsets-22 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-46 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-38 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-26 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-34 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-10 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-2 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0), __consumer_offsets-14 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=1, host=172.99.0.3:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:37,906] INFO [ReplicaFetcherManager on broker 3] Added fetcher to broker 2 for partitions HashMap(__consumer_offsets-7 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-35 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-23 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-47 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-31 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-43 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-19 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0), __consumer_offsets-11 -> InitialFetchState(Some(XsFPiqFhS_unMFpTmFkAEw),BrokerEndPoint(id=2, host=172.99.0.4:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-37 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-7 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-22 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-41 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-10 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-29 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-14 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-19 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-34 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-23 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-38 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-11 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-26 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-49 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-35 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-5 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-31 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-46 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-1 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-2 with leader 1 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-25 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-43 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-13 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-47 with leader 2 (state.change.logger)
[2022-10-04 16:41:37,906] TRACE [Broker id=3] Completed LeaderAndIsr request correlationId 6 from controller 2 epoch 1 for the become-follower transition for partition __consumer_offsets-17 with leader 4 (state.change.logger)
[2022-10-04 16:41:37,906] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-29 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-13 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-13, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-41 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-25 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-25, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-37 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-37, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-5 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-17 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-1 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-1, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,907] INFO [ReplicaFetcher replicaId=3, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-49 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,907] INFO [UnifiedLog partition=__consumer_offsets-49, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,908] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 20 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,909] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-20 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 24 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-24 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 12 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-12 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 44 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-44 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 48 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-48 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 16 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-16 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 4 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-4 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 36 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-36 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 8 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-8 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 40 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-40 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 28 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-28 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 0 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-0 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,910] INFO [GroupCoordinator 3]: Elected as the group coordinator for partition 32 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,910] INFO [GroupMetadataManager brokerId=3] Scheduling loading of offsets and group metadata from __consumer_offsets-32 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,911] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 37 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,911] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 7 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 22 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 41 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 10 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 29 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 14 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 19 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 34 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 23 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 38 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 11 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 26 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 49 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 35 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 5 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 31 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 46 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 1 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 2 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 25 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 43 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 13 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 47 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,912] INFO [GroupCoordinator 3]: Resigned as the group coordinator for partition 17 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,912] INFO [GroupMetadataManager brokerId=3] Scheduling unloading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,913] INFO [Broker id=3] Finished LeaderAndIsr request in 155ms correlationId 6 from controller 2 for 38 partitions (state.change.logger)
[2022-10-04 16:41:37,915] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-20 in 5 milliseconds for epoch 0, of which 2 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,915] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-24 in 5 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,915] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-12 in 5 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,915] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-44 in 5 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,915] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,915] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-48 in 6 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-16 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-4 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-36 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-8 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-40 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 1], zkVersion=0, replicas=[3, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 4], zkVersion=0, replicas=[3, 2, 4], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-28 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 2], zkVersion=0, replicas=[3, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,916] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-0 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 3], zkVersion=0, replicas=[2, 1, 3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 1], zkVersion=0, replicas=[2, 4, 1], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 4], zkVersion=0, replicas=[2, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] TRACE [Broker id=3] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,917] INFO [GroupMetadataManager brokerId=3] Finished loading offsets and group metadata from __consumer_offsets-32 in 7 milliseconds for epoch 0, of which 7 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,917] INFO [Broker id=3] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-37 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-7 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-22 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-41 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-10 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-29 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-14 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-19 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-34 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-23 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-38 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-11 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-26 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,918] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-49 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-35 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-5 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-31 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-46 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-1 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-2 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-25 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-43 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-13 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-47 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,919] INFO [GroupMetadataManager brokerId=3] Finished unloading __consumer_offsets-17 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-31 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-31, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-47 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-43 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-43, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-11 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-23 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-7 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-7, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-35 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,943] INFO [ReplicaFetcher replicaId=3, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-19 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:37,943] INFO [UnifiedLog partition=__consumer_offsets-19, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:37,970] INFO [GroupCoordinator 3]: Dynamic member with unknown member id joins group bench in Empty state. Created a new member id consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:37,978] INFO [GroupCoordinator 3]: Preparing to rebalance group bench in state PreparingRebalance with old generation 0 (__consumer_offsets-32) (reason: Adding new member consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd with group instance id None) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:38,194] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-14 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,194] INFO [UnifiedLog partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,194] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-46 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,194] INFO [UnifiedLog partition=__consumer_offsets-46, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,194] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-26 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,195] INFO [UnifiedLog partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,195] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-10 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,195] INFO [UnifiedLog partition=__consumer_offsets-10, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,195] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-38 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,195] INFO [UnifiedLog partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,195] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-22 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,195] INFO [UnifiedLog partition=__consumer_offsets-22, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,195] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-34 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,195] INFO [UnifiedLog partition=__consumer_offsets-34, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:38,195] INFO [ReplicaFetcher replicaId=3, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-2 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:41:38,195] INFO [UnifiedLog partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:41:40,985] INFO [GroupCoordinator 3]: Stabilized group bench generation 1 (__consumer_offsets-32) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:40,997] INFO [GroupCoordinator 3]: Assignment received from leader consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd for group bench for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:41:46,151] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,261] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,372] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,481] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,592] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,702] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,812] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:46,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,032] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,143] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,251] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,363] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,477] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,587] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,697] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,807] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:47,917] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,027] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,137] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,245] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,364] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,476] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,587] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,696] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,807] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:48,917] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,027] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,136] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,246] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,363] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,476] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,588] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,697] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,806] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:49,917] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,027] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,137] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,246] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,362] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,476] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,586] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,696] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,806] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:50,917] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,027] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,043] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,137] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,245] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,362] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,471] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,581] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,691] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,801] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:51,911] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,022] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,131] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,240] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,362] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,470] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,581] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,691] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,802] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:52,911] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,022] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,132] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,239] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,362] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,475] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,586] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,696] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,807] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:53,916] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,027] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,136] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,245] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,362] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,475] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,580] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,690] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,801] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:54,911] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,021] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,131] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,240] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,362] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,470] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,580] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,691] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,800] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:55,911] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,021] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,131] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,240] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,361] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,470] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,580] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,686] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,795] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:56,906] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,015] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,126] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,235] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,345] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,461] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,570] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,680] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,791] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:57,900] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,011] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,121] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,231] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,340] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,461] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,570] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,680] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,785] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:58,895] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,000] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,110] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,220] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,330] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,436] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,544] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,661] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,770] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,875] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:41:59,985] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,090] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,200] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,306] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,415] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,526] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,635] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,744] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,861] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:00,969] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,043] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,076] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,185] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,295] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,405] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,516] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,626] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,735] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,844] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:01,961] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,069] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,175] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,285] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,390] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,500] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,610] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,721] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,830] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:02,940] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,061] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,170] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,279] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,385] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,491] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,600] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,706] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,815] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:03,920] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,030] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,139] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,249] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,361] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,469] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,575] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,684] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,790] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:04,896] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,005] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,116] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,225] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,336] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,444] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,561] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,669] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,775] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,884] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:05,990] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,101] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,211] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,321] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,430] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,539] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,661] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,769] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,875] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:06,980] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,089] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,195] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,304] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,410] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,516] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,625] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,731] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,839] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:07,960] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,069] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,179] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,284] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,390] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,499] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,605] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,715] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,825] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:08,935] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,160] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,269] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,379] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,485] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,594] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,705] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,815] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:09,925] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,035] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,144] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,253] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,361] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,470] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,579] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,685] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,794] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:10,900] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,010] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,116] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,225] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,335] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,444] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,560] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,669] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,774] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,879] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:11,989] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,095] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,204] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,310] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,415] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,525] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,630] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,739] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,860] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:12,969] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,075] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,184] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,290] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,399] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,505] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,610] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,720] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,825] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:13,934] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,160] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,269] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,379] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,484] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,594] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,700] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,805] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:14,915] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,020] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,130] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,235] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,344] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,460] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,569] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,674] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,779] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,884] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:15,994] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,099] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,209] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,314] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,420] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,529] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,639] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,760] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,869] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:16,975] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,084] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,189] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,299] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,405] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,514] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,620] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,725] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,834] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:17,944] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,060] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,169] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,384] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,489] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,594] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,699] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:18,909] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,015] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,124] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,229] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,335] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,444] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,560] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,669] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,774] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,879] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:19,984] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,090] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,194] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,300] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,404] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,509] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,615] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,720] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,825] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:20,940] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,048] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,160] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,269] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,373] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,479] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,585] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,694] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,799] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:21,904] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,009] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,115] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,224] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,330] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,439] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,560] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,668] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,774] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,879] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:22,984] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,089] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,305] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,410] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,520] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,625] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,734] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,844] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:23,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,069] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,174] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,279] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,384] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,489] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,594] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,700] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:24,910] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,014] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,119] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,225] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,334] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,444] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,559] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,669] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,774] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,879] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:25,985] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,043] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,092] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,200] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,309] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,414] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,520] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,835] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:26,943] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,060] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,169] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,274] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,383] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,489] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,595] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,699] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,805] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:27,914] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,020] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,130] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,238] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,348] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,460] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,569] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,674] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,779] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,884] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:28,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,094] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,304] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,410] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,515] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,835] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:29,943] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,060] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,168] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,274] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,484] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,589] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,694] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,799] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:30,905] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,014] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,043] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,120] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,225] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,329] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,435] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,543] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,664] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,773] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,879] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:31,984] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,089] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,194] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,300] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,409] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,515] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,835] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:32,943] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,060] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,168] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,274] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,379] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,484] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,589] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,799] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:33,905] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,009] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,114] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,219] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,429] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,535] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,643] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,759] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,868] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:34,974] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,078] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,183] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,289] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,394] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,499] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,604] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,709] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,814] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:35,919] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,024] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,129] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,234] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,339] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,459] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,569] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,674] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,884] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:36,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,094] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,309] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,414] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,520] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,834] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:37,943] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,060] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,168] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,274] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,484] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,589] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,799] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:38,904] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,009] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,114] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,219] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,429] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,535] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,643] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,759] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,869] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:39,974] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,078] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,184] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,289] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,394] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,499] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,605] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,709] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,815] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:40,919] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,024] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,045] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,129] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,234] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,343] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,459] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,568] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,673] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,884] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:41,989] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,094] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,304] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,409] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,514] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,620] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,724] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,829] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:42,935] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,043] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,159] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,268] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,374] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,479] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,584] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,689] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,794] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:43,904] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,009] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,115] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,219] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,429] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,535] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,643] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,760] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,868] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:44,974] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,079] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,183] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,289] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,394] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,498] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,604] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,709] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,814] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:45,919] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,024] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,045] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,129] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,234] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,343] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,459] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,568] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,674] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,884] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:46,989] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,093] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,304] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,409] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,514] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,620] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,724] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,829] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:47,934] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,043] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,159] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,268] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,373] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,479] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,584] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,688] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,794] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:48,899] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,003] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,109] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,214] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,318] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,424] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,529] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,635] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,743] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,848] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:49,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,068] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,174] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,384] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,489] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,594] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,699] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,805] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:50,913] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,019] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,044] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,125] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,229] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,334] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,443] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,559] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,668] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,773] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,878] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:51,984] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,088] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,194] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,299] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,404] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,509] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,615] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,719] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,824] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:52,930] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,034] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,138] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,259] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,369] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,474] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,578] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,684] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,788] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,894] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:53,999] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,103] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,209] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,314] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,418] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,524] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,629] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,734] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,843] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:54,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,068] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,173] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,384] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,488] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,594] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,699] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:55,909] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,014] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,045] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,118] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,224] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,329] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,434] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,543] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,659] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:56,979] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,084] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,399] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,609] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,819] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:57,924] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,029] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,243] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,348] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,458] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,568] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,673] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,779] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:58,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,094] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,198] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,304] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,409] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,513] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,619] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,724] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,829] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:42:59,934] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,038] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,158] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,268] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,373] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,478] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,583] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,688] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,794] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:00,898] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,003] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,045] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,108] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,213] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,319] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,424] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,530] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,634] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,738] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,847] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:01,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,068] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,173] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,383] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,489] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,593] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,699] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:02,908] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,014] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,119] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,223] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,327] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,434] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,542] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,659] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:03,978] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,399] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,504] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,819] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:04,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,029] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,242] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,348] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,459] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,567] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,673] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:05,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,094] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,303] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,409] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,514] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,618] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,724] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,828] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:06,933] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,038] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,158] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,263] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,368] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,473] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,577] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,683] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,788] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,894] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:07,998] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,103] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,209] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,314] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,418] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,524] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,629] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,734] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,842] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:08,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,068] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,173] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,383] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,488] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,593] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,698] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:09,908] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,013] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,119] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,224] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,328] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,433] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,538] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,658] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:10,978] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,399] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:11,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,342] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,459] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,567] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,678] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,783] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,888] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:12,993] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,098] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,203] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,309] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,413] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,518] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,833] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:13,937] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,059] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,167] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,273] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,483] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,588] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:14,904] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,219] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,428] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,637] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,863] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:15,968] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,045] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,072] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,178] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,283] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,388] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,493] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,598] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,704] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,809] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:16,913] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,018] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,124] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,229] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,333] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,437] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,662] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:17,977] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:18,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,238] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,343] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,458] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,562] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,668] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,773] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,878] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:19,983] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,088] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,193] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,298] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,403] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,508] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,613] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,718] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,823] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:20,929] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,033] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,045] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,137] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,259] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,367] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,473] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,578] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,683] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,787] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,893] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:21,998] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,104] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,208] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,313] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,418] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,524] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,628] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,733] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,837] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:22,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,067] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,173] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,383] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,488] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,593] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,699] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:23,908] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,013] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,119] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,223] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,328] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,434] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,537] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,658] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,763] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,867] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:24,973] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,078] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,183] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,288] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,393] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,498] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,604] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,708] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,813] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:25,919] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,024] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,128] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,233] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,338] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,458] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,568] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,673] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,882] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:26,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,093] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,199] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,303] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,408] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,514] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,619] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,723] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,828] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:27,934] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,042] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,158] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,268] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,373] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,478] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,583] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,688] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,793] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:28,898] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,003] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,109] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,214] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,318] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,423] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,529] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,634] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,742] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,847] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:29,959] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,067] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,173] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,278] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,383] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,488] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,593] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,698] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,804] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:30,908] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,013] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,118] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,224] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,328] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,433] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,538] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,658] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,767] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:31,978] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,399] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,819] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:32,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,242] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,347] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,458] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,568] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,672] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:33,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,093] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,204] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,308] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,413] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,519] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,623] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,728] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,834] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:34,942] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,058] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,168] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,273] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,483] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,588] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,694] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:35,903] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,009] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,114] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,429] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,534] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,642] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,759] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,868] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:36,972] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,078] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,183] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,288] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,393] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,498] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:37,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,242] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,359] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,468] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,572] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,677] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,783] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,888] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:38,992] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,098] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,203] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,309] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,413] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,518] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,623] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,833] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:39,937] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,059] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,167] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,272] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,483] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,587] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:40,903] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,428] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,637] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,862] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:41,967] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,073] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,177] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,283] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,388] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,493] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,597] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,703] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,808] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:42,913] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,018] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,123] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,228] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,334] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,442] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,663] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,872] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:43,977] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,292] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,609] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,713] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:44,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,029] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,133] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,359] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,467] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,573] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,678] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,783] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,887] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:45,993] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,098] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,203] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,308] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,413] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,518] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,728] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,833] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:46,937] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,058] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,167] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,273] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,482] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,588] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:47,902] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,428] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,638] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,862] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:48,968] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,073] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,177] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,283] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,388] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,494] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,598] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,703] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,808] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:49,914] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,018] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,123] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,229] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,334] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,437] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,559] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,663] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,767] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:50,978] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,713] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,819] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:51,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,242] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,358] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,462] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,568] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,672] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:52,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,092] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,198] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,303] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,408] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,513] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,618] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,723] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,829] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:53,933] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,037] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,159] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,267] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,373] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,478] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,582] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,688] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,793] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:54,898] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,004] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,108] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,213] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,319] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,424] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,528] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,633] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,738] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,858] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:55,962] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,067] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,173] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,277] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,383] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,488] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,593] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,698] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,803] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:56,908] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,014] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,118] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,223] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,328] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,434] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,537] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,658] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,763] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,867] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:57,972] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,078] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,183] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,288] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,393] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,498] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,603] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,708] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,813] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:58,918] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,023] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,128] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,233] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,337] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,442] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,662] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:43:59,977] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,294] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:00,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,133] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,359] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,463] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,567] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,672] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:01,987] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,093] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,198] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,303] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,408] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,513] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,618] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,724] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,828] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:02,933] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,037] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,158] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,262] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,367] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,473] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,577] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,683] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,788] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,893] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:03,997] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,103] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,208] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,313] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,418] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,523] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,628] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,733] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,837] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:04,942] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,058] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,167] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,272] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,483] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,587] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:05,903] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,428] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,637] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,862] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:06,967] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,073] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,178] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,282] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,393] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,498] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,604] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,708] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,813] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:07,918] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,024] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,128] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,233] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,337] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,442] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,662] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,872] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:08,977] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,292] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:09,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,134] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,359] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,467] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,573] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,678] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,783] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,887] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:10,993] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,098] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,203] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,308] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,413] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,518] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,624] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,728] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,833] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:11,937] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,059] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,167] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,272] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,483] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,587] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:12,903] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,428] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,637] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,862] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:13,968] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,073] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,177] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,283] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,388] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,493] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,598] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,703] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,808] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:14,914] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,018] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,123] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,228] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,333] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,437] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,663] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,872] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:15,978] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,085] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,713] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:16,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,133] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,358] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,467] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,572] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,678] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,783] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,888] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:17,993] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,098] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,203] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,308] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,413] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,518] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,623] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,729] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,833] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:18,937] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,058] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,167] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,272] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,378] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,483] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,587] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,693] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:19,903] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,324] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,428] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,637] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,862] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:20,968] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,073] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,178] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,282] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,388] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,493] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,598] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,703] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,808] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:21,913] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,019] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,123] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,228] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,333] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,437] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,662] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,872] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:22,978] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,292] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,713] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:23,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,133] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,358] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,463] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,567] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,673] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,778] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:24,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,093] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,198] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,303] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,408] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,513] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,618] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,724] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,828] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:25,933] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,037] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,158] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,262] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,367] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,473] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,577] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,682] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,788] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,893] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:26,997] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,103] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,208] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,313] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,418] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,523] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,628] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,733] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,837] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:27,942] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,058] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,163] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,267] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,372] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,478] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,583] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,688] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,798] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:28,903] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,008] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,113] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,218] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,323] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,429] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,533] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,637] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,758] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,867] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:29,972] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,078] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,183] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,288] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,393] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,498] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,603] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,707] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,813] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:30,918] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,024] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,129] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,233] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,337] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,442] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,558] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,662] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,768] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,873] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:31,977] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,083] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,188] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,293] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,398] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,503] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,608] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,714] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,818] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:32,923] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,028] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,133] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,237] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,358] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,463] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,567] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,672] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,777] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,883] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:33,988] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,093] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,198] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,303] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,408] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,513] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,618] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,723] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,829] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:34,933] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,037] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,158] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,267] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,372] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,478] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,583] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,687] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,793] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:35,898] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,003] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,046] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,108] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,213] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,318] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,424] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,528] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,633] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:36,738] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:41,047] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:42,679] WARN [GroupMetadataManager brokerId=3] group: bench with leader: consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:44:42,685] INFO [GroupCoordinator 3]: Preparing to rebalance group bench in state PreparingRebalance with old generation 1 (__consumer_offsets-32) (reason: Removing member consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:44:42,686] INFO [GroupCoordinator 3]: Group bench with generation 2 is now empty (__consumer_offsets-32) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:44:42,687] INFO [GroupCoordinator 3]: Member MemberMetadata(memberId=consumer-bench-1-6eb81dc4-ebac-43a9-9447-63e17d1bb7fd, groupInstanceId=None, clientId=consumer-bench-1, clientHost=/172.99.0.17, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group bench through explicit `LeaveGroup` request (kafka.coordinator.group.GroupCoordinator)
