===> User
uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
===> Configuring ...
===> Running preflight checks ... 
===> Check if /var/lib/kafka/data is writable ...
===> Check if Zookeeper is healthy ...
0 [main] DEBUG io.confluent.admin.utils.cli.ZookeeperReadyCommand  - Arguments Namespace(zookeeper_connect=zookeeper:2181, timeout=40000). 
3 [main] DEBUG io.confluent.admin.utils.ClusterStatus  - Check if Zookeeper is ready: zookeeper:2181 
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:host.name=broker-4
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.version=11.0.14.1
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.vendor=Azul Systems, Inc.
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.home=/usr/lib/jvm/zulu11-ca
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.class.path=/usr/share/java/cp-base-new/jackson-dataformat-csv-2.12.3.jar:/usr/share/java/cp-base-new/confluent-log4j-1.2.17-cp10.jar:/usr/share/java/cp-base-new/jackson-dataformat-yaml-2.12.3.jar:/usr/share/java/cp-base-new/jackson-annotations-2.12.3.jar:/usr/share/java/cp-base-new/lz4-java-1.8.0.jar:/usr/share/java/cp-base-new/jmx_prometheus_javaagent-0.14.0.jar:/usr/share/java/cp-base-new/scala-reflect-2.13.5.jar:/usr/share/java/cp-base-new/disk-usage-agent-7.1.0.jar:/usr/share/java/cp-base-new/logredactor-1.0.10.jar:/usr/share/java/cp-base-new/utility-belt-7.1.0.jar:/usr/share/java/cp-base-new/commons-cli-1.4.jar:/usr/share/java/cp-base-new/kafka-storage-api-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jackson-module-scala_2.13-2.12.3.jar:/usr/share/java/cp-base-new/kafka-raft-7.1.0-ccs.jar:/usr/share/java/cp-base-new/common-utils-7.1.0.jar:/usr/share/java/cp-base-new/kafka-metadata-7.1.0-ccs.jar:/usr/share/java/cp-base-new/slf4j-api-1.7.30.jar:/usr/share/java/cp-base-new/logredactor-metrics-1.0.10.jar:/usr/share/java/cp-base-new/kafka-clients-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jolokia-core-1.6.2.jar:/usr/share/java/cp-base-new/slf4j-log4j12-1.7.30.jar:/usr/share/java/cp-base-new/scala-java8-compat_2.13-1.0.0.jar:/usr/share/java/cp-base-new/zstd-jni-1.5.0-4.jar:/usr/share/java/cp-base-new/scala-library-2.13.5.jar:/usr/share/java/cp-base-new/gson-2.8.6.jar:/usr/share/java/cp-base-new/kafka-server-common-7.1.0-ccs.jar:/usr/share/java/cp-base-new/audience-annotations-0.5.0.jar:/usr/share/java/cp-base-new/paranamer-2.8.jar:/usr/share/java/cp-base-new/argparse4j-0.7.0.jar:/usr/share/java/cp-base-new/jackson-datatype-jdk8-2.12.3.jar:/usr/share/java/cp-base-new/slf4j-simple-1.7.30.jar:/usr/share/java/cp-base-new/snappy-java-1.1.8.4.jar:/usr/share/java/cp-base-new/jopt-simple-5.0.4.jar:/usr/share/java/cp-base-new/json-simple-1.1.1.jar:/usr/share/java/cp-base-new/kafka_2.13-7.1.0-ccs.jar:/usr/share/java/cp-base-new/kafka-storage-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jose4j-0.7.8.jar:/usr/share/java/cp-base-new/zookeeper-jute-3.6.3.jar:/usr/share/java/cp-base-new/zookeeper-3.6.3.jar:/usr/share/java/cp-base-new/jolokia-jvm-1.6.2-agent.jar:/usr/share/java/cp-base-new/jackson-core-2.12.3.jar:/usr/share/java/cp-base-new/jackson-databind-2.12.3.jar:/usr/share/java/cp-base-new/minimal-json-0.9.5.jar:/usr/share/java/cp-base-new/scala-collection-compat_2.13-2.4.4.jar:/usr/share/java/cp-base-new/scala-logging_2.13-3.9.3.jar:/usr/share/java/cp-base-new/snakeyaml-1.27.jar:/usr/share/java/cp-base-new/re2j-1.6.jar:/usr/share/java/cp-base-new/metrics-core-4.1.12.1.jar:/usr/share/java/cp-base-new/metrics-core-2.2.0.jar
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.io.tmpdir=/tmp
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.compiler=<NA>
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.name=Linux
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.arch=amd64
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.version=5.10.39-zjiabuild
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.name=appuser
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.home=/home/appuser
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.dir=/home/appuser
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.free=237MB
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.max=3886MB
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.total=244MB
19 [main] INFO org.apache.zookeeper.ZooKeeper  - Initiating client connection, connectString=zookeeper:2181 sessionTimeout=40000 watcher=io.confluent.admin.utils.ZookeeperConnectionWatcher@78ac1102
23 [main] INFO org.apache.zookeeper.common.X509Util  - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
28 [main] INFO org.apache.zookeeper.ClientCnxnSocket  - jute.maxbuffer value is 1048575 Bytes
34 [main] INFO org.apache.zookeeper.ClientCnxn  - zookeeper.request.timeout value is 0. feature enabled=false
10055 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to zookeeper
10056 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.99.0.11:2181.
10056 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
10063 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Socket connection established, initiating session, client: /172.99.0.3:55224, server: zookeeper/172.99.0.11:2181
10065 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Session establishment request sent on zookeeper/172.99.0.11:2181
10069 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Session establishment complete on server zookeeper/172.99.0.11:2181, session id = 0x1000018dd7d0004, negotiated timeout = 40000
10072 [main] DEBUG org.apache.zookeeper.ZooKeeper  - Closing session: 0x1000018dd7d0004
10072 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Closing client for session: 0x1000018dd7d0004
10076 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Reading reply session id: 0x1000018dd7d0004, packet:: clientPath:null serverPath:null finished:false header:: 1,-11  replyHeader:: 1,37,0  request:: null response:: null
10077 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - An exception was thrown while closing send thread for session 0x1000018dd7d0004.
EndOfStreamException: Unable to read additional data from server sessionid 0x1000018dd7d0004, likely server has closed socket
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:77)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
10077 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Disconnecting client for session: 0x1000018dd7d0004
10180 [main] INFO org.apache.zookeeper.ZooKeeper  - Session: 0x1000018dd7d0004 closed
10180 [main-EventThread] INFO org.apache.zookeeper.ClientCnxn  - EventThread shut down for session: 0x1000018dd7d0004
===> Launching ... 
===> Launching kafka ... 
[2022-10-04 16:57:44,212] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2022-10-04 16:57:44,524] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2022-10-04 16:57:44,617] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2022-10-04 16:57:44,619] INFO starting (kafka.server.KafkaServer)
[2022-10-04 16:57:44,620] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
[2022-10-04 16:57:44,633] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:57:44,637] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,637] INFO Client environment:host.name=broker-4 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,637] INFO Client environment:java.version=11.0.14.1 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,637] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,637] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,637] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/connect-json-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.1.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-raft-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/logredactor-metrics-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.6.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.30.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.22.1.1.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/kafka-shell-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/slf4j-log4j12-1.7.30.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.0.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.0-4.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-mirror-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/logredactor-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/trogdor-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/confluent-log4j-1.2.17-cp8.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.6.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.1.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-tools-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/connect-runtime-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-transforms-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.8.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/jackson-core-2.12.3.jar:/usr/bin/../share/java/kafka/jackson-databind-2.12.3.jar:/usr/bin/../share/java/kafka/minimal-json-0.9.5.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.2.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.4.4.jar:/usr/bin/../share/java/kafka/plexus-utils-3.2.1.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.3.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/re2j-1.6.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jline-3.12.1.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:os.version=5.10.39-zjiabuild (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:os.memory.free=1009MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,638] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,640] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@232a7d73 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:57:44,645] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2022-10-04 16:57:44,649] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:57:44,652] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:57:44,656] INFO Opening socket connection to server zookeeper/172.99.0.12:2181. (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:57:44,657] INFO SASL config status: Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:57:44,661] INFO Socket connection established, initiating session, client: /172.99.0.3:56356, server: zookeeper/172.99.0.12:2181 (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:57:44,666] INFO Session establishment complete on server zookeeper/172.99.0.12:2181, session id = 0x1000018dd7d0006, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:57:44,669] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:57:44,730] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
[2022-10-04 16:57:44,890] INFO Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Features{}, epoch=0). (kafka.server.FinalizedFeatureCache)
[2022-10-04 16:57:44,894] INFO Cluster ID = -dqOpl6XT0ajao4ar3xrBA (kafka.server.KafkaServer)
[2022-10-04 16:57:44,896] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2022-10-04 16:57:44,938] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.3:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 4
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 4
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-10-04 16:57:44,945] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.3:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 4
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 4
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-10-04 16:57:44,978] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:57:44,979] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:57:44,980] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:57:44,981] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:57:45,013] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
[2022-10-04 16:57:45,017] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
[2022-10-04 16:57:45,021] INFO Loaded 0 logs in 8ms. (kafka.log.LogManager)
[2022-10-04 16:57:45,022] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2022-10-04 16:57:45,024] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2022-10-04 16:57:45,037] INFO Starting the log cleaner (kafka.log.LogCleaner)
[2022-10-04 16:57:45,116] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
[2022-10-04 16:57:45,358] INFO [BrokerToControllerChannelManager broker=4 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:57:45,510] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2022-10-04 16:57:45,513] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2022-10-04 16:57:45,538] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-10-04 16:57:45,543] INFO [BrokerToControllerChannelManager broker=4 name=alterIsr]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:57:45,563] INFO [ExpirationReaper-4-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,563] INFO [ExpirationReaper-4-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,564] INFO [ExpirationReaper-4-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,565] INFO [ExpirationReaper-4-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,578] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2022-10-04 16:57:45,628] INFO Creating /brokers/ids/4 (is it secure? false) (kafka.zk.KafkaZkClient)
[2022-10-04 16:57:45,640] INFO Stat of the created znode at /brokers/ids/4 is: 69,69,1664902665636,1664902665636,1,0,0,72057700833099782,204,0,69
 (kafka.zk.KafkaZkClient)
[2022-10-04 16:57:45,641] INFO Registered broker 4 at path /brokers/ids/4 with addresses: PLAINTEXT://172.99.0.3:9092, czxid (broker epoch): 69 (kafka.zk.KafkaZkClient)
[2022-10-04 16:57:45,689] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-04 16:57:45,697] INFO [ExpirationReaper-4-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,700] DEBUG [Controller id=4] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-10-04 16:57:45,701] INFO [ExpirationReaper-4-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,702] INFO [ExpirationReaper-4-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,717] INFO [GroupCoordinator 4]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:57:45,721] INFO [GroupCoordinator 4]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:57:45,736] INFO [TransactionCoordinator id=4] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:57:45,739] INFO [Transaction Marker Channel Manager 4]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2022-10-04 16:57:45,739] INFO [TransactionCoordinator id=4] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:57:45,768] INFO [ExpirationReaper-4-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:57:45,784] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2022-10-04 16:57:45,791] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Starting socket server acceptors and processors (kafka.network.SocketServer)
[2022-10-04 16:57:45,795] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-10-04 16:57:45,796] INFO [SocketServer listenerType=ZK_BROKER, nodeId=4] Started socket server acceptors and processors (kafka.network.SocketServer)
[2022-10-04 16:57:45,800] INFO Kafka version: 7.1.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:57:45,801] INFO Kafka commitId: c86722379ab997cc (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:57:45,801] INFO Kafka startTimeMs: 1664902665796 (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:57:45,802] INFO [KafkaServer id=4] started (kafka.server.KafkaServer)
[2022-10-04 16:57:45,846] INFO [BrokerToControllerChannelManager broker=4 name=alterIsr]: Recorded new controller, from now on will use broker 172.99.0.4:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:57:45,868] INFO [BrokerToControllerChannelManager broker=4 name=forwarding]: Recorded new controller, from now on will use broker 172.99.0.4:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:58:58,367] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition src-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
[2022-10-04 16:58:58,368] INFO [Broker id=4] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 2 (state.change.logger)
[2022-10-04 16:59:09,918] INFO [Broker id=4] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2022-10-04 16:59:09,920] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 3 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:09,934] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 3 from controller 1 epoch 1 starting the become-follower transition for partition output-0 with leader 1 (state.change.logger)
[2022-10-04 16:59:09,981] INFO [LogLoader partition=output-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:09,991] INFO Created log for partition output-0 in /var/lib/kafka/data/output-0 with properties {min.insync.replicas=3} (kafka.log.LogManager)
[2022-10-04 16:59:09,993] INFO [Partition output-0 broker=4] No checkpointed highwatermark is found for partition output-0 (kafka.cluster.Partition)
[2022-10-04 16:59:09,993] INFO [Partition output-0 broker=4] Log loaded for partition output-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:09,994] INFO [Broker id=4] Follower output-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:09,995] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions HashSet(output-0) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:09,995] INFO [Broker id=4] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 3 for 1 partitions (state.change.logger)
[2022-10-04 16:59:10,011] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:10,014] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions Map(output-0 -> InitialFetchState(Some(dM-vP0dRQnSz0q4YLA5rSA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:10,015] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition output-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:10,015] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 3 from controller 1 epoch 1 for the become-follower transition for partition output-0 with leader 1 (state.change.logger)
[2022-10-04 16:59:10,016] INFO [UnifiedLog partition=output-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:10,024] INFO [Broker id=4] Finished LeaderAndIsr request in 106ms correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2022-10-04 16:59:10,028] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition output-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2022-10-04 16:59:10,028] INFO [Broker id=4] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2022-10-04 16:59:13,992] INFO [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 for 38 partitions (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,992] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:13,993] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 5 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-24 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-20 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-0 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-32 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-28 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-8 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-40 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-4 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-36 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-16 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-48 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-12 (state.change.logger)
[2022-10-04 16:59:14,008] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-44 (state.change.logger)
[2022-10-04 16:59:14,010] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions HashSet(__transaction_state-12, __transaction_state-48, __transaction_state-0, __transaction_state-44, __transaction_state-4, __transaction_state-32, __transaction_state-16, __transaction_state-40, __transaction_state-28, __transaction_state-20, __transaction_state-24, __transaction_state-36, __transaction_state-8) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:14,010] INFO [Broker id=4] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 1 as part of the become-leader transition for 13 partitions (state.change.logger)
[2022-10-04 16:59:14,015] INFO [LogLoader partition=__transaction_state-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,016] INFO Created log for partition __transaction_state-24 in /var/lib/kafka/data/__transaction_state-24 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,017] INFO [Partition __transaction_state-24 broker=4] No checkpointed highwatermark is found for partition __transaction_state-24 (kafka.cluster.Partition)
[2022-10-04 16:59:14,017] INFO [Partition __transaction_state-24 broker=4] Log loaded for partition __transaction_state-24 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,018] INFO [Broker id=4] Leader __transaction_state-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,025] INFO [LogLoader partition=__transaction_state-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,026] INFO Created log for partition __transaction_state-20 in /var/lib/kafka/data/__transaction_state-20 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,026] INFO [Partition __transaction_state-20 broker=4] No checkpointed highwatermark is found for partition __transaction_state-20 (kafka.cluster.Partition)
[2022-10-04 16:59:14,026] INFO [Partition __transaction_state-20 broker=4] Log loaded for partition __transaction_state-20 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,026] INFO [Broker id=4] Leader __transaction_state-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,030] INFO [LogLoader partition=__transaction_state-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,030] INFO Created log for partition __transaction_state-0 in /var/lib/kafka/data/__transaction_state-0 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,030] INFO [Partition __transaction_state-0 broker=4] No checkpointed highwatermark is found for partition __transaction_state-0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,030] INFO [Partition __transaction_state-0 broker=4] Log loaded for partition __transaction_state-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,031] INFO [Broker id=4] Leader __transaction_state-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,034] INFO [LogLoader partition=__transaction_state-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,035] INFO Created log for partition __transaction_state-32 in /var/lib/kafka/data/__transaction_state-32 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,035] INFO [Partition __transaction_state-32 broker=4] No checkpointed highwatermark is found for partition __transaction_state-32 (kafka.cluster.Partition)
[2022-10-04 16:59:14,035] INFO [Partition __transaction_state-32 broker=4] Log loaded for partition __transaction_state-32 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,035] INFO [Broker id=4] Leader __transaction_state-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,038] INFO [LogLoader partition=__transaction_state-28, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,039] INFO Created log for partition __transaction_state-28 in /var/lib/kafka/data/__transaction_state-28 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,039] INFO [Partition __transaction_state-28 broker=4] No checkpointed highwatermark is found for partition __transaction_state-28 (kafka.cluster.Partition)
[2022-10-04 16:59:14,039] INFO [Partition __transaction_state-28 broker=4] Log loaded for partition __transaction_state-28 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,039] INFO [Broker id=4] Leader __transaction_state-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,043] INFO [LogLoader partition=__transaction_state-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,043] INFO Created log for partition __transaction_state-8 in /var/lib/kafka/data/__transaction_state-8 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,043] INFO [Partition __transaction_state-8 broker=4] No checkpointed highwatermark is found for partition __transaction_state-8 (kafka.cluster.Partition)
[2022-10-04 16:59:14,043] INFO [Partition __transaction_state-8 broker=4] Log loaded for partition __transaction_state-8 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,043] INFO [Broker id=4] Leader __transaction_state-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,047] INFO [LogLoader partition=__transaction_state-40, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,048] INFO Created log for partition __transaction_state-40 in /var/lib/kafka/data/__transaction_state-40 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,048] INFO [Partition __transaction_state-40 broker=4] No checkpointed highwatermark is found for partition __transaction_state-40 (kafka.cluster.Partition)
[2022-10-04 16:59:14,048] INFO [Partition __transaction_state-40 broker=4] Log loaded for partition __transaction_state-40 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,048] INFO [Broker id=4] Leader __transaction_state-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,051] INFO [LogLoader partition=__transaction_state-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,052] INFO Created log for partition __transaction_state-4 in /var/lib/kafka/data/__transaction_state-4 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,052] INFO [Partition __transaction_state-4 broker=4] No checkpointed highwatermark is found for partition __transaction_state-4 (kafka.cluster.Partition)
[2022-10-04 16:59:14,052] INFO [Partition __transaction_state-4 broker=4] Log loaded for partition __transaction_state-4 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,052] INFO [Broker id=4] Leader __transaction_state-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,055] INFO [LogLoader partition=__transaction_state-36, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,056] INFO Created log for partition __transaction_state-36 in /var/lib/kafka/data/__transaction_state-36 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,056] INFO [Partition __transaction_state-36 broker=4] No checkpointed highwatermark is found for partition __transaction_state-36 (kafka.cluster.Partition)
[2022-10-04 16:59:14,056] INFO [Partition __transaction_state-36 broker=4] Log loaded for partition __transaction_state-36 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,056] INFO [Broker id=4] Leader __transaction_state-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,059] INFO [LogLoader partition=__transaction_state-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,059] INFO Created log for partition __transaction_state-16 in /var/lib/kafka/data/__transaction_state-16 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,059] INFO [Partition __transaction_state-16 broker=4] No checkpointed highwatermark is found for partition __transaction_state-16 (kafka.cluster.Partition)
[2022-10-04 16:59:14,059] INFO [Partition __transaction_state-16 broker=4] Log loaded for partition __transaction_state-16 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,059] INFO [Broker id=4] Leader __transaction_state-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,062] INFO [LogLoader partition=__transaction_state-48, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,063] INFO Created log for partition __transaction_state-48 in /var/lib/kafka/data/__transaction_state-48 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,063] INFO [Partition __transaction_state-48 broker=4] No checkpointed highwatermark is found for partition __transaction_state-48 (kafka.cluster.Partition)
[2022-10-04 16:59:14,063] INFO [Partition __transaction_state-48 broker=4] Log loaded for partition __transaction_state-48 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,063] INFO [Broker id=4] Leader __transaction_state-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,066] INFO [LogLoader partition=__transaction_state-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,066] INFO Created log for partition __transaction_state-12 in /var/lib/kafka/data/__transaction_state-12 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,067] INFO [Partition __transaction_state-12 broker=4] No checkpointed highwatermark is found for partition __transaction_state-12 (kafka.cluster.Partition)
[2022-10-04 16:59:14,067] INFO [Partition __transaction_state-12 broker=4] Log loaded for partition __transaction_state-12 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,067] INFO [Broker id=4] Leader __transaction_state-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,069] INFO [LogLoader partition=__transaction_state-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,070] INFO Created log for partition __transaction_state-44 in /var/lib/kafka/data/__transaction_state-44 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,070] INFO [Partition __transaction_state-44 broker=4] No checkpointed highwatermark is found for partition __transaction_state-44 (kafka.cluster.Partition)
[2022-10-04 16:59:14,070] INFO [Partition __transaction_state-44 broker=4] Log loaded for partition __transaction_state-44 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,070] INFO [Broker id=4] Leader __transaction_state-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-24 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-20 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-0 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-32 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-28 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-8 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-40 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-4 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-36 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-16 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-48 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-12 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-44 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-7 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-22 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-37 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-11 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-26 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-41 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-23 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-38 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-19 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-34 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-49 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-31 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-46 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-5 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-35 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-1 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-47 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,072] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-13 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-43 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-2 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-17 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-14 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-29 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-10 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,073] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 5 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-25 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,075] INFO [LogLoader partition=__transaction_state-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,075] INFO Created log for partition __transaction_state-7 in /var/lib/kafka/data/__transaction_state-7 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,075] INFO [Partition __transaction_state-7 broker=4] No checkpointed highwatermark is found for partition __transaction_state-7 (kafka.cluster.Partition)
[2022-10-04 16:59:14,075] INFO [Partition __transaction_state-7 broker=4] Log loaded for partition __transaction_state-7 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,076] INFO [Broker id=4] Follower __transaction_state-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,078] INFO [LogLoader partition=__transaction_state-22, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,078] INFO Created log for partition __transaction_state-22 in /var/lib/kafka/data/__transaction_state-22 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,078] INFO [Partition __transaction_state-22 broker=4] No checkpointed highwatermark is found for partition __transaction_state-22 (kafka.cluster.Partition)
[2022-10-04 16:59:14,078] INFO [Partition __transaction_state-22 broker=4] Log loaded for partition __transaction_state-22 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,078] INFO [Broker id=4] Follower __transaction_state-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,080] INFO [LogLoader partition=__transaction_state-37, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,081] INFO Created log for partition __transaction_state-37 in /var/lib/kafka/data/__transaction_state-37 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,081] INFO [Partition __transaction_state-37 broker=4] No checkpointed highwatermark is found for partition __transaction_state-37 (kafka.cluster.Partition)
[2022-10-04 16:59:14,081] INFO [Partition __transaction_state-37 broker=4] Log loaded for partition __transaction_state-37 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,081] INFO [Broker id=4] Follower __transaction_state-37 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,083] INFO [LogLoader partition=__transaction_state-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,084] INFO Created log for partition __transaction_state-11 in /var/lib/kafka/data/__transaction_state-11 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,084] INFO [Partition __transaction_state-11 broker=4] No checkpointed highwatermark is found for partition __transaction_state-11 (kafka.cluster.Partition)
[2022-10-04 16:59:14,084] INFO [Partition __transaction_state-11 broker=4] Log loaded for partition __transaction_state-11 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,084] INFO [Broker id=4] Follower __transaction_state-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,086] INFO [LogLoader partition=__transaction_state-26, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,086] INFO Created log for partition __transaction_state-26 in /var/lib/kafka/data/__transaction_state-26 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,086] INFO [Partition __transaction_state-26 broker=4] No checkpointed highwatermark is found for partition __transaction_state-26 (kafka.cluster.Partition)
[2022-10-04 16:59:14,086] INFO [Partition __transaction_state-26 broker=4] Log loaded for partition __transaction_state-26 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,086] INFO [Broker id=4] Follower __transaction_state-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,088] INFO [LogLoader partition=__transaction_state-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,089] INFO Created log for partition __transaction_state-41 in /var/lib/kafka/data/__transaction_state-41 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,089] INFO [Partition __transaction_state-41 broker=4] No checkpointed highwatermark is found for partition __transaction_state-41 (kafka.cluster.Partition)
[2022-10-04 16:59:14,089] INFO [Partition __transaction_state-41 broker=4] Log loaded for partition __transaction_state-41 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,089] INFO [Broker id=4] Follower __transaction_state-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,091] INFO [LogLoader partition=__transaction_state-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,092] INFO Created log for partition __transaction_state-23 in /var/lib/kafka/data/__transaction_state-23 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,092] INFO [Partition __transaction_state-23 broker=4] No checkpointed highwatermark is found for partition __transaction_state-23 (kafka.cluster.Partition)
[2022-10-04 16:59:14,092] INFO [Partition __transaction_state-23 broker=4] Log loaded for partition __transaction_state-23 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,092] INFO [Broker id=4] Follower __transaction_state-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,094] INFO [LogLoader partition=__transaction_state-38, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,095] INFO Created log for partition __transaction_state-38 in /var/lib/kafka/data/__transaction_state-38 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,095] INFO [Partition __transaction_state-38 broker=4] No checkpointed highwatermark is found for partition __transaction_state-38 (kafka.cluster.Partition)
[2022-10-04 16:59:14,095] INFO [Partition __transaction_state-38 broker=4] Log loaded for partition __transaction_state-38 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,095] INFO [Broker id=4] Follower __transaction_state-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,097] INFO [LogLoader partition=__transaction_state-19, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,098] INFO Created log for partition __transaction_state-19 in /var/lib/kafka/data/__transaction_state-19 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,098] INFO [Partition __transaction_state-19 broker=4] No checkpointed highwatermark is found for partition __transaction_state-19 (kafka.cluster.Partition)
[2022-10-04 16:59:14,098] INFO [Partition __transaction_state-19 broker=4] Log loaded for partition __transaction_state-19 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,098] INFO [Broker id=4] Follower __transaction_state-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,100] INFO [LogLoader partition=__transaction_state-34, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,100] INFO Created log for partition __transaction_state-34 in /var/lib/kafka/data/__transaction_state-34 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,100] INFO [Partition __transaction_state-34 broker=4] No checkpointed highwatermark is found for partition __transaction_state-34 (kafka.cluster.Partition)
[2022-10-04 16:59:14,101] INFO [Partition __transaction_state-34 broker=4] Log loaded for partition __transaction_state-34 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,101] INFO [Broker id=4] Follower __transaction_state-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,103] INFO [LogLoader partition=__transaction_state-49, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,103] INFO Created log for partition __transaction_state-49 in /var/lib/kafka/data/__transaction_state-49 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,103] INFO [Partition __transaction_state-49 broker=4] No checkpointed highwatermark is found for partition __transaction_state-49 (kafka.cluster.Partition)
[2022-10-04 16:59:14,103] INFO [Partition __transaction_state-49 broker=4] Log loaded for partition __transaction_state-49 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,103] INFO [Broker id=4] Follower __transaction_state-49 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,106] INFO [LogLoader partition=__transaction_state-31, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,107] INFO Created log for partition __transaction_state-31 in /var/lib/kafka/data/__transaction_state-31 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,107] INFO [Partition __transaction_state-31 broker=4] No checkpointed highwatermark is found for partition __transaction_state-31 (kafka.cluster.Partition)
[2022-10-04 16:59:14,107] INFO [Partition __transaction_state-31 broker=4] Log loaded for partition __transaction_state-31 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,107] INFO [Broker id=4] Follower __transaction_state-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,109] INFO [LogLoader partition=__transaction_state-46, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,110] INFO Created log for partition __transaction_state-46 in /var/lib/kafka/data/__transaction_state-46 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,110] INFO [Partition __transaction_state-46 broker=4] No checkpointed highwatermark is found for partition __transaction_state-46 (kafka.cluster.Partition)
[2022-10-04 16:59:14,110] INFO [Partition __transaction_state-46 broker=4] Log loaded for partition __transaction_state-46 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,110] INFO [Broker id=4] Follower __transaction_state-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,113] INFO [LogLoader partition=__transaction_state-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,114] INFO Created log for partition __transaction_state-5 in /var/lib/kafka/data/__transaction_state-5 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,114] INFO [Partition __transaction_state-5 broker=4] No checkpointed highwatermark is found for partition __transaction_state-5 (kafka.cluster.Partition)
[2022-10-04 16:59:14,114] INFO [Partition __transaction_state-5 broker=4] Log loaded for partition __transaction_state-5 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,114] INFO [Broker id=4] Follower __transaction_state-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,117] INFO [LogLoader partition=__transaction_state-35, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,117] INFO Created log for partition __transaction_state-35 in /var/lib/kafka/data/__transaction_state-35 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,117] INFO [Partition __transaction_state-35 broker=4] No checkpointed highwatermark is found for partition __transaction_state-35 (kafka.cluster.Partition)
[2022-10-04 16:59:14,117] INFO [Partition __transaction_state-35 broker=4] Log loaded for partition __transaction_state-35 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,118] INFO [Broker id=4] Follower __transaction_state-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,121] INFO [LogLoader partition=__transaction_state-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,121] INFO Created log for partition __transaction_state-1 in /var/lib/kafka/data/__transaction_state-1 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,121] INFO [Partition __transaction_state-1 broker=4] No checkpointed highwatermark is found for partition __transaction_state-1 (kafka.cluster.Partition)
[2022-10-04 16:59:14,121] INFO [Partition __transaction_state-1 broker=4] Log loaded for partition __transaction_state-1 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,121] INFO [Broker id=4] Follower __transaction_state-1 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,124] INFO [LogLoader partition=__transaction_state-47, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,124] INFO Created log for partition __transaction_state-47 in /var/lib/kafka/data/__transaction_state-47 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,125] INFO [Partition __transaction_state-47 broker=4] No checkpointed highwatermark is found for partition __transaction_state-47 (kafka.cluster.Partition)
[2022-10-04 16:59:14,125] INFO [Partition __transaction_state-47 broker=4] Log loaded for partition __transaction_state-47 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,125] INFO [Broker id=4] Follower __transaction_state-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,127] INFO [LogLoader partition=__transaction_state-13, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,128] INFO Created log for partition __transaction_state-13 in /var/lib/kafka/data/__transaction_state-13 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,128] INFO [Partition __transaction_state-13 broker=4] No checkpointed highwatermark is found for partition __transaction_state-13 (kafka.cluster.Partition)
[2022-10-04 16:59:14,128] INFO [Partition __transaction_state-13 broker=4] Log loaded for partition __transaction_state-13 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,128] INFO [Broker id=4] Follower __transaction_state-13 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,131] INFO [LogLoader partition=__transaction_state-43, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,132] INFO Created log for partition __transaction_state-43 in /var/lib/kafka/data/__transaction_state-43 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,132] INFO [Partition __transaction_state-43 broker=4] No checkpointed highwatermark is found for partition __transaction_state-43 (kafka.cluster.Partition)
[2022-10-04 16:59:14,132] INFO [Partition __transaction_state-43 broker=4] Log loaded for partition __transaction_state-43 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,132] INFO [Broker id=4] Follower __transaction_state-43 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,135] INFO [LogLoader partition=__transaction_state-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,135] INFO Created log for partition __transaction_state-2 in /var/lib/kafka/data/__transaction_state-2 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,136] INFO [Partition __transaction_state-2 broker=4] No checkpointed highwatermark is found for partition __transaction_state-2 (kafka.cluster.Partition)
[2022-10-04 16:59:14,136] INFO [Partition __transaction_state-2 broker=4] Log loaded for partition __transaction_state-2 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,136] INFO [Broker id=4] Follower __transaction_state-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,139] INFO [LogLoader partition=__transaction_state-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,139] INFO Created log for partition __transaction_state-17 in /var/lib/kafka/data/__transaction_state-17 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,139] INFO [Partition __transaction_state-17 broker=4] No checkpointed highwatermark is found for partition __transaction_state-17 (kafka.cluster.Partition)
[2022-10-04 16:59:14,139] INFO [Partition __transaction_state-17 broker=4] Log loaded for partition __transaction_state-17 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,139] INFO [Broker id=4] Follower __transaction_state-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,143] INFO [LogLoader partition=__transaction_state-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,143] INFO Created log for partition __transaction_state-14 in /var/lib/kafka/data/__transaction_state-14 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,144] INFO [Partition __transaction_state-14 broker=4] No checkpointed highwatermark is found for partition __transaction_state-14 (kafka.cluster.Partition)
[2022-10-04 16:59:14,144] INFO [Partition __transaction_state-14 broker=4] Log loaded for partition __transaction_state-14 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,144] INFO [Broker id=4] Follower __transaction_state-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,148] INFO [LogLoader partition=__transaction_state-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,148] INFO Created log for partition __transaction_state-29 in /var/lib/kafka/data/__transaction_state-29 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,148] INFO [Partition __transaction_state-29 broker=4] No checkpointed highwatermark is found for partition __transaction_state-29 (kafka.cluster.Partition)
[2022-10-04 16:59:14,149] INFO [Partition __transaction_state-29 broker=4] Log loaded for partition __transaction_state-29 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,149] INFO [Broker id=4] Follower __transaction_state-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,152] INFO [LogLoader partition=__transaction_state-10, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,153] INFO Created log for partition __transaction_state-10 in /var/lib/kafka/data/__transaction_state-10 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,153] INFO [Partition __transaction_state-10 broker=4] No checkpointed highwatermark is found for partition __transaction_state-10 (kafka.cluster.Partition)
[2022-10-04 16:59:14,153] INFO [Partition __transaction_state-10 broker=4] Log loaded for partition __transaction_state-10 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,153] INFO [Broker id=4] Follower __transaction_state-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,156] INFO [LogLoader partition=__transaction_state-25, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:14,157] INFO Created log for partition __transaction_state-25 in /var/lib/kafka/data/__transaction_state-25 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:59:14,157] INFO [Partition __transaction_state-25 broker=4] No checkpointed highwatermark is found for partition __transaction_state-25 (kafka.cluster.Partition)
[2022-10-04 16:59:14,157] INFO [Partition __transaction_state-25 broker=4] Log loaded for partition __transaction_state-25 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:14,157] INFO [Broker id=4] Follower __transaction_state-25 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:14,158] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions HashSet(__transaction_state-11, __transaction_state-13, __transaction_state-46, __transaction_state-17, __transaction_state-34, __transaction_state-5, __transaction_state-38, __transaction_state-7, __transaction_state-26, __transaction_state-1, __transaction_state-22, __transaction_state-10, __transaction_state-43, __transaction_state-14, __transaction_state-47, __transaction_state-49, __transaction_state-2, __transaction_state-35, __transaction_state-37, __transaction_state-41, __transaction_state-29, __transaction_state-31, __transaction_state-19, __transaction_state-23, __transaction_state-25) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:14,158] INFO [Broker id=4] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 5 for 25 partitions (state.change.logger)
[2022-10-04 16:59:14,162] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,163] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-10 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,163] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 3 for partitions HashMap(__transaction_state-46 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-2 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-38 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-22 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-26 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-34 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-14 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-10 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:14,163] INFO [UnifiedLog partition=__transaction_state-10, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,163] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-26 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,163] INFO [UnifiedLog partition=__transaction_state-26, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,163] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-14 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,163] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions HashMap(__transaction_state-31 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-7 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-43 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-11 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-19 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-35 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-23 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __transaction_state-47 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:14,163] INFO [UnifiedLog partition=__transaction_state-14, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,164] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-46 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,164] INFO [UnifiedLog partition=__transaction_state-46, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,164] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-2 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,164] INFO [UnifiedLog partition=__transaction_state-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,164] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-34 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,164] INFO [UnifiedLog partition=__transaction_state-34, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,164] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-22 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,165] INFO [UnifiedLog partition=__transaction_state-22, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,165] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __transaction_state-38 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,165] INFO [UnifiedLog partition=__transaction_state-38, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,167] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,167] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-13 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,167] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 2 for partitions HashMap(__transaction_state-49 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-13 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-37 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-29 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-5 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-41 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-1 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-25 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-17 -> InitialFetchState(Some(GNs7lK8qRWS_URG8me8QdQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:14,167] INFO [UnifiedLog partition=__transaction_state-13, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-7 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,167] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-29 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-22 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-37 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,167] INFO [UnifiedLog partition=__transaction_state-29, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-11 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-26 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,167] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-17 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-41 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-23 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,167] INFO [UnifiedLog partition=__transaction_state-17, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-38 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-19 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,167] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-49 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,167] INFO [UnifiedLog partition=__transaction_state-49, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,167] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-34 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-49 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-1 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-31 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-46 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [UnifiedLog partition=__transaction_state-1, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-5 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-35 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-5 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-1 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-47 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [UnifiedLog partition=__transaction_state-5, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-13 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-37 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,168] INFO [UnifiedLog partition=__transaction_state-37, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-43 with leader 1 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-25 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-2 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-17 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [UnifiedLog partition=__transaction_state-25, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-14 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-29 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __transaction_state-41 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-10 with leader 3 (state.change.logger)
[2022-10-04 16:59:14,168] INFO [UnifiedLog partition=__transaction_state-41, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,168] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 5 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-25 with leader 2 (state.change.logger)
[2022-10-04 16:59:14,169] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 24 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 20 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 0 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 32 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 28 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 8 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 40 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 4 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 36 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-24 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 16 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 48 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 12 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Elected as the txn coordinator for partition 44 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,174] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 7 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-7 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 22 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-22 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 37 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-37 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 11 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-11 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 26 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-26 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 41 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-41 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 23 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-23 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 38 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-38 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 19 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-19 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 34 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-34 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,175] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 49 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,175] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-49 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 31 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-31 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 46 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-46 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 5 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-5 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 35 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-35 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 1 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-1 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 47 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-47 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 13 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-13 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 43 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-43 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 2 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-2 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 17 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-17 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 14 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-14 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 29 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-29 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 10 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-10 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,176] INFO [TransactionCoordinator id=4] Resigned as the txn coordinator for partition 25 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:14,176] INFO [Transaction State Manager 4]: No cached transaction metadata found for __transaction_state-25 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,177] INFO [Broker id=4] Finished LeaderAndIsr request in 185ms correlationId 5 from controller 1 for 38 partitions (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,180] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,181] INFO [Broker id=4] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2022-10-04 16:59:14,186] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-24 in 12 milliseconds, of which 1 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,190] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-24 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,190] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-20 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,192] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-20 in 18 milliseconds, of which 16 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,193] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-20 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,193] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-0 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,194] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-0 in 20 milliseconds, of which 19 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,195] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-0 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,195] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-32 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,196] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-32 in 22 milliseconds, of which 21 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,196] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-32 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,196] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-28 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,198] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-28 in 24 milliseconds, of which 22 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,198] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-28 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,198] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-8 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,200] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-8 in 26 milliseconds, of which 24 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,200] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-8 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,200] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-40 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,201] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-40 in 27 milliseconds, of which 26 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,201] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-40 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,201] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-4 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,202] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-4 in 28 milliseconds, of which 27 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,202] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-4 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,203] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-36 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,204] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-36 in 30 milliseconds, of which 29 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,204] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-36 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,204] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-16 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,205] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-16 in 31 milliseconds, of which 30 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,205] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-16 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,205] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-48 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,207] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-48 in 33 milliseconds, of which 31 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,207] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-48 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,207] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-12 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,208] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-12 in 34 milliseconds, of which 33 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,208] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-12 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,209] INFO [Transaction State Manager 4]: Loading transaction metadata from __transaction_state-44 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,210] INFO [Transaction State Manager 4]: Finished loading 0 transaction metadata from __transaction_state-44 in 36 milliseconds, of which 35 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,210] INFO [Transaction State Manager 4]: Completed loading transaction metadata from __transaction_state-44 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:59:14,556] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-11 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,556] INFO [UnifiedLog partition=__transaction_state-11, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,556] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-43 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,556] INFO [UnifiedLog partition=__transaction_state-43, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,557] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-31 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,557] INFO [UnifiedLog partition=__transaction_state-31, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,557] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-47 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,557] INFO [UnifiedLog partition=__transaction_state-47, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,557] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-19 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,557] INFO [UnifiedLog partition=__transaction_state-19, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,557] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-35 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,557] INFO [UnifiedLog partition=__transaction_state-35, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,557] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-7 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,557] INFO [UnifiedLog partition=__transaction_state-7, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:14,557] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __transaction_state-23 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:14,557] INFO [UnifiedLog partition=__transaction_state-23, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,167] INFO [TransactionCoordinator id=4] Initialized transactionalId bench-prod-1 with producerId 0 and producer epoch 0 on partition __transaction_state-16 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:59:15,200] INFO Creating topic __consumer_offsets with configuration {compression.type=producer, cleanup.policy=compact, segment.bytes=104857600} and initial partition assignment HashMap(0 -> ArrayBuffer(4, 2, 3), 1 -> ArrayBuffer(2, 3, 1), 2 -> ArrayBuffer(3, 1, 4), 3 -> ArrayBuffer(1, 4, 2), 4 -> ArrayBuffer(4, 3, 1), 5 -> ArrayBuffer(2, 1, 4), 6 -> ArrayBuffer(3, 4, 2), 7 -> ArrayBuffer(1, 2, 3), 8 -> ArrayBuffer(4, 1, 2), 9 -> ArrayBuffer(2, 4, 3), 10 -> ArrayBuffer(3, 2, 1), 11 -> ArrayBuffer(1, 3, 4), 12 -> ArrayBuffer(4, 2, 3), 13 -> ArrayBuffer(2, 3, 1), 14 -> ArrayBuffer(3, 1, 4), 15 -> ArrayBuffer(1, 4, 2), 16 -> ArrayBuffer(4, 3, 1), 17 -> ArrayBuffer(2, 1, 4), 18 -> ArrayBuffer(3, 4, 2), 19 -> ArrayBuffer(1, 2, 3), 20 -> ArrayBuffer(4, 1, 2), 21 -> ArrayBuffer(2, 4, 3), 22 -> ArrayBuffer(3, 2, 1), 23 -> ArrayBuffer(1, 3, 4), 24 -> ArrayBuffer(4, 2, 3), 25 -> ArrayBuffer(2, 3, 1), 26 -> ArrayBuffer(3, 1, 4), 27 -> ArrayBuffer(1, 4, 2), 28 -> ArrayBuffer(4, 3, 1), 29 -> ArrayBuffer(2, 1, 4), 30 -> ArrayBuffer(3, 4, 2), 31 -> ArrayBuffer(1, 2, 3), 32 -> ArrayBuffer(4, 1, 2), 33 -> ArrayBuffer(2, 4, 3), 34 -> ArrayBuffer(3, 2, 1), 35 -> ArrayBuffer(1, 3, 4), 36 -> ArrayBuffer(4, 2, 3), 37 -> ArrayBuffer(2, 3, 1), 38 -> ArrayBuffer(3, 1, 4), 39 -> ArrayBuffer(1, 4, 2), 40 -> ArrayBuffer(4, 3, 1), 41 -> ArrayBuffer(2, 1, 4), 42 -> ArrayBuffer(3, 4, 2), 43 -> ArrayBuffer(1, 2, 3), 44 -> ArrayBuffer(4, 1, 2), 45 -> ArrayBuffer(2, 4, 3), 46 -> ArrayBuffer(3, 2, 1), 47 -> ArrayBuffer(1, 3, 4), 48 -> ArrayBuffer(4, 2, 3), 49 -> ArrayBuffer(2, 3, 1)) (kafka.zk.AdminZkClient)
[2022-10-04 16:59:15,265] INFO [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 for 37 partitions (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,265] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,266] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,266] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,266] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,266] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,266] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,266] TRACE [Broker id=4] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 7 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:59:15,278] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:59:15,279] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions HashSet(__consumer_offsets-36, __consumer_offsets-24, __consumer_offsets-48, __consumer_offsets-12, __consumer_offsets-8, __consumer_offsets-4, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:15,279] INFO [Broker id=4] Stopped fetchers as part of LeaderAndIsr request correlationId 7 from controller 1 epoch 1 as part of the become-leader transition for 13 partitions (state.change.logger)
[2022-10-04 16:59:15,282] INFO [LogLoader partition=__consumer_offsets-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,283] INFO Created log for partition __consumer_offsets-20 in /var/lib/kafka/data/__consumer_offsets-20 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,284] INFO [Partition __consumer_offsets-20 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
[2022-10-04 16:59:15,284] INFO [Partition __consumer_offsets-20 broker=4] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,284] INFO [Broker id=4] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,287] INFO [LogLoader partition=__consumer_offsets-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,288] INFO Created log for partition __consumer_offsets-24 in /var/lib/kafka/data/__consumer_offsets-24 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,288] INFO [Partition __consumer_offsets-24 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
[2022-10-04 16:59:15,288] INFO [Partition __consumer_offsets-24 broker=4] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,288] INFO [Broker id=4] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,290] INFO [LogLoader partition=__consumer_offsets-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,291] INFO Created log for partition __consumer_offsets-12 in /var/lib/kafka/data/__consumer_offsets-12 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,291] INFO [Partition __consumer_offsets-12 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
[2022-10-04 16:59:15,291] INFO [Partition __consumer_offsets-12 broker=4] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,291] INFO [Broker id=4] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,293] INFO [LogLoader partition=__consumer_offsets-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,294] INFO Created log for partition __consumer_offsets-44 in /var/lib/kafka/data/__consumer_offsets-44 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,294] INFO [Partition __consumer_offsets-44 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
[2022-10-04 16:59:15,294] INFO [Partition __consumer_offsets-44 broker=4] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,294] INFO [Broker id=4] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,296] INFO [LogLoader partition=__consumer_offsets-48, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,297] INFO Created log for partition __consumer_offsets-48 in /var/lib/kafka/data/__consumer_offsets-48 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,297] INFO [Partition __consumer_offsets-48 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
[2022-10-04 16:59:15,297] INFO [Partition __consumer_offsets-48 broker=4] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,297] INFO [Broker id=4] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,299] INFO [LogLoader partition=__consumer_offsets-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,300] INFO Created log for partition __consumer_offsets-16 in /var/lib/kafka/data/__consumer_offsets-16 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,300] INFO [Partition __consumer_offsets-16 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
[2022-10-04 16:59:15,300] INFO [Partition __consumer_offsets-16 broker=4] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,300] INFO [Broker id=4] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,302] INFO [LogLoader partition=__consumer_offsets-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,302] INFO Created log for partition __consumer_offsets-4 in /var/lib/kafka/data/__consumer_offsets-4 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,302] INFO [Partition __consumer_offsets-4 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
[2022-10-04 16:59:15,303] INFO [Partition __consumer_offsets-4 broker=4] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,303] INFO [Broker id=4] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,305] INFO [LogLoader partition=__consumer_offsets-36, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,305] INFO Created log for partition __consumer_offsets-36 in /var/lib/kafka/data/__consumer_offsets-36 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,305] INFO [Partition __consumer_offsets-36 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
[2022-10-04 16:59:15,305] INFO [Partition __consumer_offsets-36 broker=4] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,305] INFO [Broker id=4] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,307] INFO [LogLoader partition=__consumer_offsets-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,308] INFO Created log for partition __consumer_offsets-8 in /var/lib/kafka/data/__consumer_offsets-8 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,308] INFO [Partition __consumer_offsets-8 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
[2022-10-04 16:59:15,308] INFO [Partition __consumer_offsets-8 broker=4] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,308] INFO [Broker id=4] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,310] INFO [LogLoader partition=__consumer_offsets-40, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,311] INFO Created log for partition __consumer_offsets-40 in /var/lib/kafka/data/__consumer_offsets-40 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,311] INFO [Partition __consumer_offsets-40 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
[2022-10-04 16:59:15,311] INFO [Partition __consumer_offsets-40 broker=4] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,311] INFO [Broker id=4] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,313] INFO [LogLoader partition=__consumer_offsets-28, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,313] INFO Created log for partition __consumer_offsets-28 in /var/lib/kafka/data/__consumer_offsets-28 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,313] INFO [Partition __consumer_offsets-28 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
[2022-10-04 16:59:15,313] INFO [Partition __consumer_offsets-28 broker=4] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,313] INFO [Broker id=4] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,3,1] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,316] INFO [LogLoader partition=__consumer_offsets-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,316] INFO Created log for partition __consumer_offsets-0 in /var/lib/kafka/data/__consumer_offsets-0 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,316] INFO [Partition __consumer_offsets-0 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,316] INFO [Partition __consumer_offsets-0 broker=4] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,316] INFO [Broker id=4] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,318] INFO [LogLoader partition=__consumer_offsets-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,319] INFO Created log for partition __consumer_offsets-32 in /var/lib/kafka/data/__consumer_offsets-32 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,319] INFO [Partition __consumer_offsets-32 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
[2022-10-04 16:59:15,319] INFO [Partition __consumer_offsets-32 broker=4] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,319] INFO [Broker id=4] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [4,1,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-3 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-18 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-41 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-29 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-14 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-33 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-23 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-38 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-11 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-26 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-45 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-15 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-30 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-35 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-5 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-39 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-9 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-27 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-42 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-2 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-21 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-6 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-47 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,320] TRACE [Broker id=4] Handling LeaderAndIsr request correlationId 7 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-17 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,322] INFO [LogLoader partition=__consumer_offsets-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,322] INFO Created log for partition __consumer_offsets-3 in /var/lib/kafka/data/__consumer_offsets-3 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,322] INFO [Partition __consumer_offsets-3 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition)
[2022-10-04 16:59:15,322] INFO [Partition __consumer_offsets-3 broker=4] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,322] INFO [Broker id=4] Follower __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,324] INFO [LogLoader partition=__consumer_offsets-18, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,324] INFO Created log for partition __consumer_offsets-18 in /var/lib/kafka/data/__consumer_offsets-18 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,324] INFO [Partition __consumer_offsets-18 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition)
[2022-10-04 16:59:15,324] INFO [Partition __consumer_offsets-18 broker=4] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,324] INFO [Broker id=4] Follower __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,326] INFO [LogLoader partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,326] INFO Created log for partition __consumer_offsets-41 in /var/lib/kafka/data/__consumer_offsets-41 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,326] INFO [Partition __consumer_offsets-41 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
[2022-10-04 16:59:15,326] INFO [Partition __consumer_offsets-41 broker=4] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,326] INFO [Broker id=4] Follower __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,328] INFO [LogLoader partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,328] INFO Created log for partition __consumer_offsets-29 in /var/lib/kafka/data/__consumer_offsets-29 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,329] INFO [Partition __consumer_offsets-29 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
[2022-10-04 16:59:15,329] INFO [Partition __consumer_offsets-29 broker=4] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,329] INFO [Broker id=4] Follower __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,330] INFO [LogLoader partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,331] INFO Created log for partition __consumer_offsets-14 in /var/lib/kafka/data/__consumer_offsets-14 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,331] INFO [Partition __consumer_offsets-14 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
[2022-10-04 16:59:15,331] INFO [Partition __consumer_offsets-14 broker=4] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,331] INFO [Broker id=4] Follower __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,333] INFO [LogLoader partition=__consumer_offsets-33, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,333] INFO Created log for partition __consumer_offsets-33 in /var/lib/kafka/data/__consumer_offsets-33 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,333] INFO [Partition __consumer_offsets-33 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition)
[2022-10-04 16:59:15,333] INFO [Partition __consumer_offsets-33 broker=4] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,333] INFO [Broker id=4] Follower __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,335] INFO [LogLoader partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,336] INFO Created log for partition __consumer_offsets-23 in /var/lib/kafka/data/__consumer_offsets-23 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,336] INFO [Partition __consumer_offsets-23 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
[2022-10-04 16:59:15,336] INFO [Partition __consumer_offsets-23 broker=4] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,336] INFO [Broker id=4] Follower __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,338] INFO [LogLoader partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,338] INFO Created log for partition __consumer_offsets-38 in /var/lib/kafka/data/__consumer_offsets-38 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,338] INFO [Partition __consumer_offsets-38 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
[2022-10-04 16:59:15,338] INFO [Partition __consumer_offsets-38 broker=4] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,338] INFO [Broker id=4] Follower __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,340] INFO [LogLoader partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,341] INFO Created log for partition __consumer_offsets-11 in /var/lib/kafka/data/__consumer_offsets-11 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,341] INFO [Partition __consumer_offsets-11 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
[2022-10-04 16:59:15,341] INFO [Partition __consumer_offsets-11 broker=4] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,341] INFO [Broker id=4] Follower __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,343] INFO [LogLoader partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,343] INFO Created log for partition __consumer_offsets-26 in /var/lib/kafka/data/__consumer_offsets-26 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,343] INFO [Partition __consumer_offsets-26 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
[2022-10-04 16:59:15,343] INFO [Partition __consumer_offsets-26 broker=4] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,343] INFO [Broker id=4] Follower __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,346] INFO [LogLoader partition=__consumer_offsets-45, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,346] INFO Created log for partition __consumer_offsets-45 in /var/lib/kafka/data/__consumer_offsets-45 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,346] INFO [Partition __consumer_offsets-45 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition)
[2022-10-04 16:59:15,346] INFO [Partition __consumer_offsets-45 broker=4] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,346] INFO [Broker id=4] Follower __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,348] INFO [LogLoader partition=__consumer_offsets-15, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,349] INFO Created log for partition __consumer_offsets-15 in /var/lib/kafka/data/__consumer_offsets-15 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,349] INFO [Partition __consumer_offsets-15 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition)
[2022-10-04 16:59:15,349] INFO [Partition __consumer_offsets-15 broker=4] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,349] INFO [Broker id=4] Follower __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,351] INFO [LogLoader partition=__consumer_offsets-30, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,351] INFO Created log for partition __consumer_offsets-30 in /var/lib/kafka/data/__consumer_offsets-30 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,351] INFO [Partition __consumer_offsets-30 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition)
[2022-10-04 16:59:15,351] INFO [Partition __consumer_offsets-30 broker=4] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,351] INFO [Broker id=4] Follower __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,353] INFO [LogLoader partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,361] INFO Created log for partition __consumer_offsets-35 in /var/lib/kafka/data/__consumer_offsets-35 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,361] INFO [Partition __consumer_offsets-35 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
[2022-10-04 16:59:15,361] INFO [Partition __consumer_offsets-35 broker=4] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,361] INFO [Broker id=4] Follower __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,363] INFO [LogLoader partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,364] INFO Created log for partition __consumer_offsets-5 in /var/lib/kafka/data/__consumer_offsets-5 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,364] INFO [Partition __consumer_offsets-5 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
[2022-10-04 16:59:15,364] INFO [Partition __consumer_offsets-5 broker=4] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,364] INFO [Broker id=4] Follower __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,366] INFO [LogLoader partition=__consumer_offsets-39, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,367] INFO Created log for partition __consumer_offsets-39 in /var/lib/kafka/data/__consumer_offsets-39 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,367] INFO [Partition __consumer_offsets-39 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition)
[2022-10-04 16:59:15,367] INFO [Partition __consumer_offsets-39 broker=4] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,367] INFO [Broker id=4] Follower __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,368] INFO [LogLoader partition=__consumer_offsets-9, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,369] INFO Created log for partition __consumer_offsets-9 in /var/lib/kafka/data/__consumer_offsets-9 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,369] INFO [Partition __consumer_offsets-9 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition)
[2022-10-04 16:59:15,369] INFO [Partition __consumer_offsets-9 broker=4] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,369] INFO [Broker id=4] Follower __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,371] INFO [LogLoader partition=__consumer_offsets-27, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,371] INFO Created log for partition __consumer_offsets-27 in /var/lib/kafka/data/__consumer_offsets-27 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,371] INFO [Partition __consumer_offsets-27 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition)
[2022-10-04 16:59:15,371] INFO [Partition __consumer_offsets-27 broker=4] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,371] INFO [Broker id=4] Follower __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,373] INFO [LogLoader partition=__consumer_offsets-42, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,373] INFO Created log for partition __consumer_offsets-42 in /var/lib/kafka/data/__consumer_offsets-42 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,373] INFO [Partition __consumer_offsets-42 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition)
[2022-10-04 16:59:15,373] INFO [Partition __consumer_offsets-42 broker=4] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,373] INFO [Broker id=4] Follower __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,375] INFO [LogLoader partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,375] INFO Created log for partition __consumer_offsets-2 in /var/lib/kafka/data/__consumer_offsets-2 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,375] INFO [Partition __consumer_offsets-2 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
[2022-10-04 16:59:15,375] INFO [Partition __consumer_offsets-2 broker=4] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,375] INFO [Broker id=4] Follower __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,377] INFO [LogLoader partition=__consumer_offsets-21, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,377] INFO Created log for partition __consumer_offsets-21 in /var/lib/kafka/data/__consumer_offsets-21 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,377] INFO [Partition __consumer_offsets-21 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition)
[2022-10-04 16:59:15,378] INFO [Partition __consumer_offsets-21 broker=4] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,378] INFO [Broker id=4] Follower __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,379] INFO [LogLoader partition=__consumer_offsets-6, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,380] INFO Created log for partition __consumer_offsets-6 in /var/lib/kafka/data/__consumer_offsets-6 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,380] INFO [Partition __consumer_offsets-6 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition)
[2022-10-04 16:59:15,380] INFO [Partition __consumer_offsets-6 broker=4] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,380] INFO [Broker id=4] Follower __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,381] INFO [LogLoader partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,382] INFO Created log for partition __consumer_offsets-47 in /var/lib/kafka/data/__consumer_offsets-47 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,382] INFO [Partition __consumer_offsets-47 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
[2022-10-04 16:59:15,382] INFO [Partition __consumer_offsets-47 broker=4] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,382] INFO [Broker id=4] Follower __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,383] INFO [LogLoader partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:59:15,384] INFO Created log for partition __consumer_offsets-17 in /var/lib/kafka/data/__consumer_offsets-17 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:59:15,384] INFO [Partition __consumer_offsets-17 broker=4] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
[2022-10-04 16:59:15,384] INFO [Partition __consumer_offsets-17 broker=4] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:59:15,384] INFO [Broker id=4] Follower __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:59:15,384] INFO [ReplicaFetcherManager on broker 4] Removed fetcher for partitions HashSet(__consumer_offsets-15, __consumer_offsets-11, __consumer_offsets-9, __consumer_offsets-42, __consumer_offsets-23, __consumer_offsets-21, __consumer_offsets-17, __consumer_offsets-30, __consumer_offsets-26, __consumer_offsets-5, __consumer_offsets-38, __consumer_offsets-3, __consumer_offsets-47, __consumer_offsets-45, __consumer_offsets-14, __consumer_offsets-41, __consumer_offsets-18, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-39, __consumer_offsets-6, __consumer_offsets-35, __consumer_offsets-33, __consumer_offsets-2) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:15,384] INFO [Broker id=4] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 7 for 24 partitions (state.change.logger)
[2022-10-04 16:59:15,385] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 3 for partitions HashMap(__consumer_offsets-30 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-38 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-26 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-42 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-18 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-2 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-6 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-14 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:15,386] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 1 for partitions HashMap(__consumer_offsets-27 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-35 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-23 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-47 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-3 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-15 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-11 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0), __consumer_offsets-39 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=1, host=172.99.0.4:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:15,386] INFO [ReplicaFetcherManager on broker 4] Added fetcher to broker 2 for partitions HashMap(__consumer_offsets-21 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-9 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-17 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-29 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-41 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-33 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-45 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-5 -> InitialFetchState(Some(awJ-Y2k8SmCOq8HvTLFYkA),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-3 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-18 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-41 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-29 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-14 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-33 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-23 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-38 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-11 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-26 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-45 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-15 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-30 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-35 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-5 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-39 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-9 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-27 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-42 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-2 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-21 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-6 with leader 3 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-47 with leader 1 (state.change.logger)
[2022-10-04 16:59:15,386] TRACE [Broker id=4] Completed LeaderAndIsr request correlationId 7 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-17 with leader 2 (state.change.logger)
[2022-10-04 16:59:15,387] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 20 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-20 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 24 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-24 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 12 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-12 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 44 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-44 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 48 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-48 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 16 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-16 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 4 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-4 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 36 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-36 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,388] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 8 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,388] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-8 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,389] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 40 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,389] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-40 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,389] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 28 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,389] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-28 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,389] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 0 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,389] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-0 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,389] INFO [GroupCoordinator 4]: Elected as the group coordinator for partition 32 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,389] INFO [GroupMetadataManager brokerId=4] Scheduling loading of offsets and group metadata from __consumer_offsets-32 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,389] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 3 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,389] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 18 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 41 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 29 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 14 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 33 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 23 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 38 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 11 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 26 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 45 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 15 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 30 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 35 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 5 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 39 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 9 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 27 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 42 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 2 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 21 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 6 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,390] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,390] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 47 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,391] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,391] INFO [GroupCoordinator 4]: Resigned as the group coordinator for partition 17 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,391] INFO [GroupMetadataManager brokerId=4] Scheduling unloading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,391] INFO [Broker id=4] Finished LeaderAndIsr request in 126ms correlationId 7 from controller 1 for 37 partitions (state.change.logger)
[2022-10-04 16:59:15,393] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-20 in 4 milliseconds for epoch 0, of which 1 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,393] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-24 in 5 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-12 in 5 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,393] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-44 in 6 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-48 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-16 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-4 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,395] TRACE [Broker id=4] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,394] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-36 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,395] INFO [Broker id=4] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 8 (state.change.logger)
[2022-10-04 16:59:15,395] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-8 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,395] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-40 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,395] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-28 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,395] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-0 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,396] INFO [GroupMetadataManager brokerId=4] Finished loading offsets and group metadata from __consumer_offsets-32 in 7 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,396] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-3 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,396] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-18 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,396] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-41 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,396] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-29 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,396] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-14 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-33 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-23 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-38 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-11 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-26 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-45 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-15 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-30 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-35 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-5 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-39 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-9 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-27 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-42 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-2 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-21 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-6 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-47 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,397] INFO [GroupMetadataManager brokerId=4] Finished unloading __consumer_offsets-17 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:15,412] INFO [GroupCoordinator 4]: Dynamic member with unknown member id joins group bench in Empty state. Created a new member id consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,421] INFO [GroupCoordinator 4]: Preparing to rebalance group bench in state PreparingRebalance with old generation 0 (__consumer_offsets-32) (reason: Adding new member consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d with group instance id None) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:15,566] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-15 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,566] INFO [UnifiedLog partition=__consumer_offsets-15, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,566] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-47 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,566] INFO [UnifiedLog partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,566] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-27 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,567] INFO [UnifiedLog partition=__consumer_offsets-27, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,567] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-11 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,567] INFO [UnifiedLog partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,567] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-39 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,567] INFO [UnifiedLog partition=__consumer_offsets-39, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,567] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-23 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,567] INFO [UnifiedLog partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,567] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-35 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,567] INFO [UnifiedLog partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,567] INFO [ReplicaFetcher replicaId=4, leaderId=1, fetcherId=0] Truncating partition __consumer_offsets-3 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,567] INFO [UnifiedLog partition=__consumer_offsets-3, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-30 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-30, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-14 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-42 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-42, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-26 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-38 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-6 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-6, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-18 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-18, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,696] INFO [ReplicaFetcher replicaId=4, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-2 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,696] INFO [UnifiedLog partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,700] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-29 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,700] INFO [UnifiedLog partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-45 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-45, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-41 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-9 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-9, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-21 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-21, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-5 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-33 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-33, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:15,701] INFO [ReplicaFetcher replicaId=4, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-17 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:59:15,701] INFO [UnifiedLog partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:59:18,427] INFO [GroupCoordinator 4]: Stabilized group bench generation 1 (__consumer_offsets-32) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:18,438] INFO [GroupCoordinator 4]: Assignment received from leader consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d for group bench for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:59:23,460] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:23,573] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:23,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:23,791] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:23,914] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,026] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,137] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,246] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,357] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,468] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,577] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,687] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,795] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:24,913] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,027] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,137] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,246] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,357] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,467] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,577] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,686] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,796] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:25,913] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,026] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,136] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,246] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,352] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,462] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,571] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,678] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,786] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:26,895] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,013] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,121] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,231] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,341] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,452] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,561] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,672] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,781] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:27,890] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,012] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,125] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,231] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,340] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,446] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,556] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,671] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,781] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:28,889] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,012] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,120] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,230] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,336] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,447] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,556] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,667] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,777] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,886] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:29,995] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,112] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,220] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,331] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,440] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,547] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,656] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,761] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,871] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:30,976] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,087] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,195] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,300] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,411] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,520] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,625] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,735] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,840] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:31,946] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,055] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,161] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,266] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,376] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,481] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,589] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,820] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:32,931] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,040] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,145] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,251] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,361] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,470] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,576] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,686] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,795] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:33,911] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,020] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,125] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,235] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,340] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,446] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,555] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,661] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,766] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,876] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:34,981] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,087] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,195] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,304] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,411] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,520] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,625] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,730] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,835] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:35,945] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,050] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,156] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,260] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,366] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,470] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,576] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,681] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,786] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:36,895] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,011] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,120] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,225] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,329] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,435] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,541] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,646] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,752] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,857] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:37,965] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,071] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,176] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,285] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,395] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,499] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,611] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,720] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,824] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:38,930] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,036] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,145] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,250] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,356] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,465] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,571] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,675] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,781] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:39,892] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,011] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,119] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,224] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,330] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,434] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,540] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,645] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,750] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,855] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:40,960] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,065] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,175] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,280] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,393] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,511] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,619] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,724] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,830] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:41,934] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,040] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,145] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,250] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,360] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,469] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,575] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,680] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,785] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:42,894] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,011] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,119] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,224] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,330] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,435] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,540] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,645] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,750] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,855] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:43,960] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,066] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,175] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,280] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,385] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,493] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,610] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,719] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,824] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:44,929] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,035] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,144] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,250] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,355] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,464] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,570] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,675] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,784] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:45,894] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,010] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,119] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,225] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,329] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,434] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,540] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,645] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,750] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,860] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:46,965] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,070] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,174] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,280] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,389] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,511] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,619] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,724] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,829] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:47,934] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,039] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,144] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,250] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,355] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,460] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,564] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,670] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,775] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,880] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:48,985] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,094] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,211] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,319] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,425] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,529] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,634] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,739] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,844] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:49,950] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,054] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,160] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,264] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,370] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,475] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,585] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,693] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,799] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:50,910] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,019] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,124] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,229] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,334] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,439] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,544] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,650] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,759] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,865] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:51,969] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,075] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,180] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,285] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,388] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,509] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,619] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,724] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,829] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:52,934] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,038] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,144] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,249] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,354] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,458] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,564] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,669] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,775] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,879] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:53,984] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,093] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,210] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,318] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,424] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,529] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,634] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,739] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,845] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:54,949] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,054] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,159] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,264] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,370] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,474] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,579] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,685] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,793] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:55,910] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,018] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,124] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,228] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,334] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,439] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,544] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,649] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,755] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,859] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:56,965] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,069] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,174] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,280] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,388] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,493] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,610] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,719] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,824] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:57,929] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,034] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,139] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,244] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,560] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,770] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,875] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:58,980] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,084] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,193] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,299] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,410] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,519] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,624] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,729] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,834] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:59:59,939] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,044] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,150] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,254] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,360] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,464] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,570] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,675] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,779] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,886] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:00,993] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,110] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,218] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,324] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,429] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,534] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,639] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,745] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,849] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:01,954] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,059] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,165] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,269] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,375] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,480] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,584] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,689] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,798] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:02,910] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,018] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,124] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,229] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,334] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,440] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,544] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,649] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,755] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,859] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:03,965] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,070] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,174] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,280] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,385] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,494] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,610] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,824] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:04,928] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,034] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,245] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,455] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,559] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,769] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,874] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:05,980] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,084] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,188] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,298] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,409] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,519] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,623] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,729] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,833] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:06,939] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,044] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,148] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,254] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,359] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,464] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,569] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,675] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,779] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,884] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:07,988] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,109] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,219] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,323] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,429] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,533] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,639] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,744] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,848] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:08,954] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,059] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,164] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,269] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,374] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,479] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,584] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,693] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,798] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:09,910] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,018] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,124] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,229] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,333] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,439] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,543] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,649] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,754] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,859] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:10,964] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,070] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,174] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,279] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,384] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,488] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,609] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,824] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:11,928] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,034] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,139] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,243] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,559] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,770] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,874] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:12,984] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,088] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,209] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,318] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,424] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,529] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,634] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,744] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,849] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:13,953] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,059] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,164] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,269] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,374] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,479] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,584] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,693] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,798] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:14,909] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,018] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,123] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,229] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,334] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,438] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,544] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,649] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,753] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,859] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:15,964] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,069] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,175] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,279] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,384] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,492] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,609] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:16,929] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,033] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,139] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,244] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,559] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,768] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,874] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:17,979] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,084] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,188] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,293] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,409] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,518] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,624] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,729] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,833] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:18,938] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,044] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,149] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,253] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,359] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,464] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,569] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,674] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,779] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,884] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:19,988] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,109] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,218] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,324] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,428] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,533] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,639] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,744] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,848] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:20,954] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,059] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,164] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,268] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,374] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,479] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,585] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,693] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,798] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:21,909] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,018] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,123] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,228] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,334] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,438] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,544] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,649] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,754] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,858] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:22,964] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,069] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,174] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,278] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,384] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,488] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:23,928] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,034] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,243] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,454] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,769] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,874] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:24,980] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,084] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,188] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,310] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,418] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,523] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,629] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,734] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,838] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:25,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,049] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,154] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,259] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,363] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,469] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,574] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,679] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,783] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:26,888] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,010] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,118] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,223] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,329] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,434] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,538] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,643] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,749] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,854] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:27,959] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,064] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,169] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,274] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,379] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,484] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,588] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,709] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,818] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:28,923] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,029] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,449] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,764] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,869] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:29,974] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,079] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,184] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,392] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,498] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,609] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:30,929] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,033] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,244] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,769] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:31,979] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,084] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,188] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,308] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,418] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,523] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,628] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,734] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,838] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:32,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,048] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,154] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,258] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,363] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,468] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,576] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,679] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,783] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:33,887] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,009] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,118] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,223] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,328] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,434] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,539] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,643] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,748] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,854] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:34,959] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,063] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,169] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,274] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,380] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,484] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,592] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,709] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,818] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:35,923] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,029] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,764] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,869] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:36,974] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,393] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,508] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,612] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:37,927] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,033] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,244] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,349] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,664] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,769] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:38,978] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,084] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,188] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,308] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,418] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,523] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,628] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,732] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,838] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:39,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,049] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,154] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,258] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,364] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,469] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,574] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,678] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,784] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:40,888] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,117] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,223] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,328] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,432] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,538] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,643] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,748] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,854] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:41,958] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,063] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,168] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,274] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,379] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,483] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,587] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,709] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:42,922] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,028] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,659] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:43,974] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,079] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,392] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,508] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,617] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,723] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,828] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:44,933] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,037] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,143] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,248] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,353] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,459] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,563] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,668] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,773] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,879] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:45,984] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,092] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,209] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,318] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,423] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,527] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,633] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,738] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,843] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:46,949] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,053] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,158] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,263] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,368] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,474] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:47,893] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,009] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,117] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,223] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,328] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,433] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,538] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,643] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,748] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,853] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:48,958] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,064] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,168] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,273] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,379] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,484] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,587] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,708] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,812] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:49,918] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,022] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,128] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,233] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,338] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,443] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,547] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,653] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,758] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,863] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:50,969] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,073] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,178] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,283] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,388] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,492] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,818] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:51,923] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,027] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,869] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:52,975] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,393] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,497] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:53,928] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,032] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,243] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,348] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,663] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,768] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:54,979] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,083] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,187] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,309] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,418] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,522] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,627] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,732] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,838] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:55,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,049] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,153] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,258] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,363] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,469] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,573] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,678] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,784] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:56,887] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,008] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,112] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,217] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,323] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,428] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,532] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,637] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,743] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,848] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:57,953] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,058] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,163] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,268] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,373] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,479] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,584] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,692] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,809] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:58,918] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,023] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,127] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,233] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,338] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,443] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,548] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,652] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,758] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,863] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:00:59,968] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,073] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,179] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,283] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,387] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,492] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,609] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,717] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:00,928] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,033] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,137] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,243] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,348] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,559] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,663] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,768] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:01,979] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,083] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,187] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,308] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,412] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,518] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,622] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,727] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,833] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:02,938] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,043] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,148] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,253] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,358] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,462] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,568] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,674] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,778] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,883] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:03,987] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,108] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,217] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,322] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,427] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,533] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,638] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,743] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,847] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:04,952] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,058] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,163] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,268] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,374] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,478] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,583] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,687] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,809] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:05,917] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,022] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,127] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,233] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,338] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,444] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,547] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,653] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,758] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,863] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:06,968] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,074] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,178] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,283] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,387] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,508] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,612] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,717] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,822] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:07,927] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,033] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,243] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,347] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,663] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,768] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:08,978] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,083] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,188] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,308] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,412] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,518] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,623] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,728] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,832] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:09,938] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,043] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,148] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,253] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,358] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,470] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:10,892] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,008] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,112] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,218] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,322] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,427] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,533] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,638] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,743] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,847] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:11,953] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,058] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,163] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,268] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,374] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,478] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,583] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,687] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,808] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:12,917] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,022] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,128] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,233] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,338] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,443] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,547] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,653] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,758] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,863] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:13,968] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,074] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,178] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,283] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,387] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,509] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,617] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,722] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,827] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:14,933] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,038] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,143] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,248] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,353] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,458] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,563] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,668] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,773] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,878] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:15,983] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,087] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,207] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,312] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,417] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,522] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,628] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,733] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,838] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:16,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,048] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,153] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,259] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,363] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,468] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,573] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,678] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,783] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:17,886] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,008] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,112] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,217] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,323] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,428] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,534] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,637] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,743] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,848] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:18,953] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,058] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,163] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,268] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,374] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,478] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,583] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,687] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,808] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:19,912] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,017] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,123] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,228] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,332] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,438] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,543] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,648] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,753] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,858] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:20,963] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,068] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,173] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,278] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,383] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,487] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,713] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:21,922] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,028] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,342] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,867] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:22,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,286] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,392] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,497] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:23,922] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,027] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,447] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:24,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,391] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,508] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,612] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,717] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,823] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:25,927] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,032] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,243] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,348] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,663] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,768] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:26,978] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,083] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,187] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,308] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,413] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,517] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,622] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,727] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,833] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:27,938] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,042] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,147] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,253] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,358] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,463] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,568] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,673] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,778] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,883] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:28,987] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,108] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,212] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,317] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,423] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,527] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,632] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,738] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,843] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:29,948] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,052] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,158] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,263] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,368] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,473] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:30,892] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,007] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,112] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,217] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,323] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,428] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,533] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,637] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,742] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,848] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:31,953] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,058] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,162] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,268] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,373] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,478] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,583] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,687] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,808] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:32,912] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,018] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,123] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,227] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,332] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,438] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,543] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,649] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,753] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,858] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:33,963] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,068] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,173] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,279] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,383] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,487] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:34,922] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,028] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,342] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,447] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:35,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,391] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,497] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,818] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:36,923] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,027] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,132] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,552] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,657] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:37,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,392] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,496] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,608] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:38,923] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,028] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,132] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,237] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,657] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:39,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,184] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,392] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,509] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,612] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,717] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,822] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:40,927] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,033] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,138] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,242] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,347] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,453] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,558] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,663] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,767] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,873] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:41,978] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,083] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,186] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,308] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,412] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,518] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,623] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,728] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,832] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:42,937] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,043] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,148] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,253] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,357] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,462] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,568] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,673] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,778] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,882] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:43,987] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,108] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,212] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,318] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,422] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,527] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,632] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,738] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,843] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:44,947] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,052] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,158] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,263] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,368] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,473] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:45,908] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,017] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,122] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,227] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,333] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,438] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,542] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,647] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,753] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,858] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:46,963] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,068] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,172] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,278] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,383] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,487] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,607] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:47,923] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,028] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,132] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,237] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,448] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,657] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:48,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,408] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,512] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,617] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,722] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,827] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:49,933] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,038] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,143] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,247] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,352] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,458] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,563] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,668] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,773] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,878] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:50,983] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,087] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,208] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,312] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,417] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,523] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,628] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,732] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,837] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:51,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,048] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,153] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,257] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,363] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,468] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,573] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,679] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,783] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,887] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:52,992] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,108] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,212] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,317] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,422] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,527] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,633] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,738] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,843] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:53,947] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,052] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,158] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,263] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,368] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,473] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:54,908] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,017] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,122] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,227] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,333] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,438] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,542] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,647] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,753] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,858] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:55,963] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,067] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,172] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,278] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,383] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,487] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,607] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,712] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:56,922] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,028] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,237] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,343] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,447] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,762] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:57,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,286] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,407] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,512] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,617] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,723] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,827] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:58,932] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,037] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,143] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,248] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,353] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,563] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,668] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,773] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,878] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:01:59,982] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,087] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,208] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,312] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,418] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,522] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,627] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,732] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,838] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:00,943] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,047] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,153] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,258] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,363] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,468] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,573] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,678] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,783] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,887] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:01,992] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,108] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,212] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,317] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,422] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,528] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,632] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,737] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,843] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:02,948] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,053] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,158] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,262] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,369] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,475] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,682] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:03,908] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,012] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,117] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,222] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,327] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,433] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,538] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,643] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,747] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,852] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:04,958] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,063] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,168] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,273] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,378] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,483] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,587] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,708] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,817] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:05,922] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,027] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,133] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,238] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,342] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,447] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,553] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,658] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,763] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,868] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:06,973] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,078] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,183] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,287] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,408] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,517] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,622] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,727] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,833] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:07,938] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,042] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,147] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,253] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,358] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,456] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,463] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,569] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,673] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,778] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,883] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:08,987] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,108] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,212] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,317] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,423] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,528] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,633] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,737] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,842] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:09,947] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,053] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,158] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,263] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,368] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,473] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,578] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,683] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,787] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:10,908] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,012] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,117] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,223] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,327] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,432] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,538] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,643] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,748] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,852] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:11,957] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,063] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,168] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,273] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,378] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,482] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,587] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,718] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,828] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:12,932] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,037] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,143] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,248] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,353] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,457] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,459] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,563] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,668] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,773] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,878] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:13,982] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:14,088] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:18,459] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:20,172] WARN [GroupMetadataManager brokerId=4] group: bench with leader: consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 17:02:20,177] INFO [GroupCoordinator 4]: Preparing to rebalance group bench in state PreparingRebalance with old generation 1 (__consumer_offsets-32) (reason: Removing member consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 17:02:20,178] INFO [GroupCoordinator 4]: Group bench with generation 2 is now empty (__consumer_offsets-32) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 17:02:20,179] INFO [GroupCoordinator 4]: Member MemberMetadata(memberId=consumer-bench-1-9d6fadbb-7e80-48d1-b521-2bf3c422290d, groupInstanceId=None, clientId=consumer-bench-1, clientHost=/172.99.0.17, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group bench through explicit `LeaveGroup` request (kafka.coordinator.group.GroupCoordinator)
