===> User
uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
===> Configuring ...
===> Running preflight checks ... 
===> Check if /var/lib/kafka/data is writable ...
===> Check if Zookeeper is healthy ...
0 [main] DEBUG io.confluent.admin.utils.cli.ZookeeperReadyCommand  - Arguments Namespace(zookeeper_connect=zookeeper:2181, timeout=40000). 
3 [main] DEBUG io.confluent.admin.utils.ClusterStatus  - Check if Zookeeper is ready: zookeeper:2181 
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:host.name=broker-1
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.version=11.0.14.1
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.vendor=Azul Systems, Inc.
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.home=/usr/lib/jvm/zulu11-ca
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.class.path=/usr/share/java/cp-base-new/jackson-dataformat-csv-2.12.3.jar:/usr/share/java/cp-base-new/confluent-log4j-1.2.17-cp10.jar:/usr/share/java/cp-base-new/jackson-dataformat-yaml-2.12.3.jar:/usr/share/java/cp-base-new/jackson-annotations-2.12.3.jar:/usr/share/java/cp-base-new/lz4-java-1.8.0.jar:/usr/share/java/cp-base-new/jmx_prometheus_javaagent-0.14.0.jar:/usr/share/java/cp-base-new/scala-reflect-2.13.5.jar:/usr/share/java/cp-base-new/disk-usage-agent-7.1.0.jar:/usr/share/java/cp-base-new/logredactor-1.0.10.jar:/usr/share/java/cp-base-new/utility-belt-7.1.0.jar:/usr/share/java/cp-base-new/commons-cli-1.4.jar:/usr/share/java/cp-base-new/kafka-storage-api-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jackson-module-scala_2.13-2.12.3.jar:/usr/share/java/cp-base-new/kafka-raft-7.1.0-ccs.jar:/usr/share/java/cp-base-new/common-utils-7.1.0.jar:/usr/share/java/cp-base-new/kafka-metadata-7.1.0-ccs.jar:/usr/share/java/cp-base-new/slf4j-api-1.7.30.jar:/usr/share/java/cp-base-new/logredactor-metrics-1.0.10.jar:/usr/share/java/cp-base-new/kafka-clients-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jolokia-core-1.6.2.jar:/usr/share/java/cp-base-new/slf4j-log4j12-1.7.30.jar:/usr/share/java/cp-base-new/scala-java8-compat_2.13-1.0.0.jar:/usr/share/java/cp-base-new/zstd-jni-1.5.0-4.jar:/usr/share/java/cp-base-new/scala-library-2.13.5.jar:/usr/share/java/cp-base-new/gson-2.8.6.jar:/usr/share/java/cp-base-new/kafka-server-common-7.1.0-ccs.jar:/usr/share/java/cp-base-new/audience-annotations-0.5.0.jar:/usr/share/java/cp-base-new/paranamer-2.8.jar:/usr/share/java/cp-base-new/argparse4j-0.7.0.jar:/usr/share/java/cp-base-new/jackson-datatype-jdk8-2.12.3.jar:/usr/share/java/cp-base-new/slf4j-simple-1.7.30.jar:/usr/share/java/cp-base-new/snappy-java-1.1.8.4.jar:/usr/share/java/cp-base-new/jopt-simple-5.0.4.jar:/usr/share/java/cp-base-new/json-simple-1.1.1.jar:/usr/share/java/cp-base-new/kafka_2.13-7.1.0-ccs.jar:/usr/share/java/cp-base-new/kafka-storage-7.1.0-ccs.jar:/usr/share/java/cp-base-new/jose4j-0.7.8.jar:/usr/share/java/cp-base-new/zookeeper-jute-3.6.3.jar:/usr/share/java/cp-base-new/zookeeper-3.6.3.jar:/usr/share/java/cp-base-new/jolokia-jvm-1.6.2-agent.jar:/usr/share/java/cp-base-new/jackson-core-2.12.3.jar:/usr/share/java/cp-base-new/jackson-databind-2.12.3.jar:/usr/share/java/cp-base-new/minimal-json-0.9.5.jar:/usr/share/java/cp-base-new/scala-collection-compat_2.13-2.4.4.jar:/usr/share/java/cp-base-new/scala-logging_2.13-3.9.3.jar:/usr/share/java/cp-base-new/snakeyaml-1.27.jar:/usr/share/java/cp-base-new/re2j-1.6.jar:/usr/share/java/cp-base-new/metrics-core-4.1.12.1.jar:/usr/share/java/cp-base-new/metrics-core-2.2.0.jar
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.io.tmpdir=/tmp
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:java.compiler=<NA>
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.name=Linux
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.arch=amd64
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.version=5.10.39-zjiabuild
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.name=appuser
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.home=/home/appuser
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:user.dir=/home/appuser
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.free=237MB
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.max=3886MB
15 [main] INFO org.apache.zookeeper.ZooKeeper  - Client environment:os.memory.total=244MB
17 [main] INFO org.apache.zookeeper.ZooKeeper  - Initiating client connection, connectString=zookeeper:2181 sessionTimeout=40000 watcher=io.confluent.admin.utils.ZookeeperConnectionWatcher@78ac1102
20 [main] INFO org.apache.zookeeper.common.X509Util  - Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation
25 [main] INFO org.apache.zookeeper.ClientCnxnSocket  - jute.maxbuffer value is 1048575 Bytes
31 [main] INFO org.apache.zookeeper.ClientCnxn  - zookeeper.request.timeout value is 0. feature enabled=false
39 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to kstreams-test_zookeeper.1.jotrgg9l4ym2hrnwiu2lxf4v5.kstreams-test_default
41 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.99.0.12:2181.
41 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
48 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - Session 0x0 for sever zookeeper/172.99.0.12:2181, Closing socket connection. Attempting reconnect except it is a SessionExpiredException.
java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:344)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
50 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxnSocketNIO  - Ignoring exception during shutdown input
java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:160)
	at java.base/sun.nio.ch.SocketChannelImpl.shutdownInput(SocketChannelImpl.java:913)
	at java.base/sun.nio.ch.SocketAdaptor.shutdownInput(SocketAdaptor.java:398)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:193)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1390)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanAndNotifyState(ClientCnxn.java:1331)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1309)
50 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxnSocketNIO  - Ignoring exception during shutdown output
java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.SocketChannelImpl.ensureOpen(SocketChannelImpl.java:160)
	at java.base/sun.nio.ch.SocketChannelImpl.shutdownOutput(SocketChannelImpl.java:930)
	at java.base/sun.nio.ch.SocketAdaptor.shutdownOutput(SocketAdaptor.java:406)
	at org.apache.zookeeper.ClientCnxnSocketNIO.cleanup(ClientCnxnSocketNIO.java:198)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanup(ClientCnxn.java:1390)
	at org.apache.zookeeper.ClientCnxn$SendThread.cleanAndNotifyState(ClientCnxn.java:1331)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1309)
11163 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.SaslServerPrincipal  - Canonicalized address to zookeeper
11163 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Opening socket connection to server zookeeper/172.99.0.11:2181.
11164 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - SASL config status: Will not attempt to authenticate using SASL (unknown error)
11164 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Socket connection established, initiating session, client: /172.99.0.4:47334, server: zookeeper/172.99.0.11:2181
11167 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Session establishment request sent on zookeeper/172.99.0.11:2181
11171 [main-SendThread(zookeeper:2181)] INFO org.apache.zookeeper.ClientCnxn  - Session establishment complete on server zookeeper/172.99.0.11:2181, session id = 0x1000003755e0002, negotiated timeout = 40000
11174 [main] DEBUG org.apache.zookeeper.ZooKeeper  - Closing session: 0x1000003755e0002
11174 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Closing client for session: 0x1000003755e0002
11179 [main-SendThread(zookeeper:2181)] DEBUG org.apache.zookeeper.ClientCnxn  - Reading reply session id: 0x1000003755e0002, packet:: clientPath:null serverPath:null finished:false header:: 1,-11  replyHeader:: 1,6,0  request:: null response:: null
11179 [main-SendThread(zookeeper:2181)] WARN org.apache.zookeeper.ClientCnxn  - An exception was thrown while closing send thread for session 0x1000003755e0002.
EndOfStreamException: Unable to read additional data from server sessionid 0x1000003755e0002, likely server has closed socket
	at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:77)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1290)
11180 [main] DEBUG org.apache.zookeeper.ClientCnxn  - Disconnecting client for session: 0x1000003755e0002
11281 [main] INFO org.apache.zookeeper.ZooKeeper  - Session: 0x1000003755e0002 closed
11281 [main-EventThread] INFO org.apache.zookeeper.ClientCnxn  - EventThread shut down for session: 0x1000003755e0002
===> Launching ... 
===> Launching kafka ... 
[2022-10-04 16:34:21,961] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2022-10-04 16:34:22,236] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
[2022-10-04 16:34:22,308] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
[2022-10-04 16:34:22,310] INFO starting (kafka.server.KafkaServer)
[2022-10-04 16:34:22,310] INFO Connecting to zookeeper on zookeeper:2181 (kafka.server.KafkaServer)
[2022-10-04 16:34:22,322] INFO [ZooKeeperClient Kafka server] Initializing a new session to zookeeper:2181. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:34:22,326] INFO Client environment:zookeeper.version=3.6.3--6401e4ad2087061bc6b9f80dec2d69f2e3c8660a, built on 04/08/2021 16:35 GMT (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:host.name=broker-1 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.version=11.0.14.1 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.vendor=Azul Systems, Inc. (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.home=/usr/lib/jvm/zulu11-ca (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.class.path=/usr/bin/../share/java/kafka/jaxb-api-2.3.0.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/javassist-3.27.0-GA.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.8.1.jar:/usr/bin/../share/java/kafka/connect-json-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.1.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.73.Final.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-raft-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/logredactor-metrics-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.6.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.30.jar:/usr/bin/../share/java/kafka/rocksdbjni-6.22.1.1.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.12.3.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-clients-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-tcnative-classes-2.0.46.Final.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/kafka-shell-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-client-2.34.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/slf4j-log4j12-1.7.30.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.0.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.0-4.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.34.jar:/usr/bin/../share/java/kafka/connect-mirror-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/logredactor-1.0.8.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/audience-annotations-0.5.0.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.73.Final.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.73.Final.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/trogdor-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/confluent-log4j-1.2.17-cp8.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.6.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.34.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/netty-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.73.Final.jar:/usr/bin/../share/java/kafka/reflections-0.9.12.jar:/usr/bin/../share/java/kafka/maven-artifact-3.8.1.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.8.4.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jersey-common-2.34.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/kafka-tools-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-api-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.12.3.jar:/usr/bin/../share/java/kafka/connect-runtime-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.34.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jersey-server-2.34.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/connect-transforms-7.1.0-ccs.jar:/usr/bin/../share/java/kafka/jose4j-0.7.8.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.6.3.jar:/usr/bin/../share/java/kafka/zookeeper-3.6.3.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/jackson-core-2.12.3.jar:/usr/bin/../share/java/kafka/jackson-databind-2.12.3.jar:/usr/bin/../share/java/kafka/minimal-json-0.9.5.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.2.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.4.4.jar:/usr/bin/../share/java/kafka/plexus-utils-3.2.1.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.3.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.73.Final.jar:/usr/bin/../share/java/kafka/re2j-1.6.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.12.3.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.44.v20210927.jar:/usr/bin/../share/java/kafka/jline-3.12.1.jar:/usr/bin/../share/java/confluent-telemetry/* (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.library.path=/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:os.version=5.10.39-zjiabuild (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:user.name=appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:user.home=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:user.dir=/home/appuser (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:os.memory.free=1010MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:os.memory.max=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,326] INFO Client environment:os.memory.total=1024MB (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,328] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=18000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@232a7d73 (org.apache.zookeeper.ZooKeeper)
[2022-10-04 16:34:22,332] INFO jute.maxbuffer value is 4194304 Bytes (org.apache.zookeeper.ClientCnxnSocket)
[2022-10-04 16:34:22,337] INFO zookeeper.request.timeout value is 0. feature enabled=false (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:34:22,338] INFO [ZooKeeperClient Kafka server] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:34:22,343] INFO Opening socket connection to server zookeeper/172.99.0.12:2181. (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:34:22,343] INFO SASL config status: Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:34:22,347] INFO Socket connection established, initiating session, client: /172.99.0.4:49316, server: zookeeper/172.99.0.12:2181 (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:34:22,352] INFO Session establishment complete on server zookeeper/172.99.0.12:2181, session id = 0x1000003755e0003, negotiated timeout = 18000 (org.apache.zookeeper.ClientCnxn)
[2022-10-04 16:34:22,354] INFO [ZooKeeperClient Kafka server] Connected. (kafka.zookeeper.ZooKeeperClient)
[2022-10-04 16:34:22,426] INFO [feature-zk-node-event-process-thread]: Starting (kafka.server.FinalizedFeatureChangeListener$ChangeNotificationProcessorThread)
[2022-10-04 16:34:22,434] INFO Feature ZK node at path: /feature does not exist (kafka.server.FinalizedFeatureChangeListener)
[2022-10-04 16:34:22,434] INFO Cleared cache (kafka.server.FinalizedFeatureCache)
[2022-10-04 16:34:22,579] INFO Cluster ID = aNn6nqV0RNWRMtIuKUIC5Q (kafka.server.KafkaServer)
[2022-10-04 16:34:22,581] WARN No meta.properties file under dir /var/lib/kafka/data/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2022-10-04 16:34:22,615] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.4:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-10-04 16:34:22,622] INFO KafkaConfig values: 
	advertised.listeners = PLAINTEXT://172.99.0.4:9092
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = false
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.heartbeat.interval.ms = 2000
	broker.id = 1
	broker.id.generation.enable = true
	broker.rack = null
	broker.session.timeout.ms = 9000
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	connections.max.reauth.ms = 0
	control.plane.listener.name = null
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.listener.names = null
	controller.quorum.append.linger.ms = 25
	controller.quorum.election.backoff.max.ms = 1000
	controller.quorum.election.timeout.ms = 1000
	controller.quorum.fetch.timeout.ms = 2000
	controller.quorum.request.timeout.ms = 2000
	controller.quorum.retry.backoff.ms = 20
	controller.quorum.voters = []
	controller.quota.window.num = 11
	controller.quota.window.size.seconds = 1
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delegation.token.secret.key = null
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.max.bytes = 57671680
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 3000
	group.max.session.timeout.ms = 1800000
	group.max.size = 2147483647
	group.min.session.timeout.ms = 6000
	initial.broker.registration.timeout.ms = 60000
	inter.broker.listener.name = null
	inter.broker.protocol.version = 3.1-IV0
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT
	listeners = PLAINTEXT://0.0.0.0:9092
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.max.compaction.lag.ms = 9223372036854775807
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /var/lib/kafka/data
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 3.0-IV1
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connection.creation.rate = 2147483647
	max.connections = 2147483647
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1048588
	metadata.log.dir = null
	metadata.log.max.record.bytes.between.snapshots = 20971520
	metadata.log.segment.bytes = 1073741824
	metadata.log.segment.min.bytes = 8388608
	metadata.log.segment.ms = 604800000
	metadata.max.retention.bytes = -1
	metadata.max.retention.ms = 604800000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 3
	node.id = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 3
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
	process.roles = []
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.window.num = 11
	quota.window.size.seconds = 1
	remote.log.index.file.cache.total.size.bytes = 1073741824
	remote.log.manager.task.interval.ms = 30000
	remote.log.manager.task.retry.backoff.max.ms = 30000
	remote.log.manager.task.retry.backoff.ms = 500
	remote.log.manager.task.retry.jitter = 0.2
	remote.log.manager.thread.pool.size = 10
	remote.log.metadata.manager.class.name = null
	remote.log.metadata.manager.class.path = null
	remote.log.metadata.manager.impl.prefix = null
	remote.log.metadata.manager.listener.name = null
	remote.log.reader.max.pending.tasks = 100
	remote.log.reader.threads = 10
	remote.log.storage.manager.class.name = null
	remote.log.storage.manager.class.path = null
	remote.log.storage.manager.impl.prefix = null
	remote.log.storage.system.enable = false
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 30000
	replica.selector.class = null
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism.controller.protocol = GSSAPI
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	security.providers = null
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.principal.mapping.rules = DEFAULT
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 2
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 3
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.clientCnxnSocket = null
	zookeeper.connect = zookeeper:2181
	zookeeper.connection.timeout.ms = null
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 18000
	zookeeper.set.acl = false
	zookeeper.ssl.cipher.suites = null
	zookeeper.ssl.client.enable = false
	zookeeper.ssl.crl.enable = false
	zookeeper.ssl.enabled.protocols = null
	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
	zookeeper.ssl.keystore.location = null
	zookeeper.ssl.keystore.password = null
	zookeeper.ssl.keystore.type = null
	zookeeper.ssl.ocsp.enable = false
	zookeeper.ssl.protocol = TLSv1.2
	zookeeper.ssl.truststore.location = null
	zookeeper.ssl.truststore.password = null
	zookeeper.ssl.truststore.type = null
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2022-10-04 16:34:22,658] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:34:22,659] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:34:22,660] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:34:22,661] INFO [ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2022-10-04 16:34:22,696] INFO Loading logs from log dirs ArraySeq(/var/lib/kafka/data) (kafka.log.LogManager)
[2022-10-04 16:34:22,699] INFO Attempting recovery for all logs in /var/lib/kafka/data since no clean shutdown file was found (kafka.log.LogManager)
[2022-10-04 16:34:22,703] INFO Loaded 0 logs in 7ms. (kafka.log.LogManager)
[2022-10-04 16:34:22,703] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2022-10-04 16:34:22,705] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2022-10-04 16:34:22,717] INFO Starting the log cleaner (kafka.log.LogCleaner)
[2022-10-04 16:34:22,799] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner)
[2022-10-04 16:34:23,020] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:34:23,169] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
[2022-10-04 16:34:23,173] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2022-10-04 16:34:23,196] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-10-04 16:34:23,202] INFO [BrokerToControllerChannelManager broker=1 name=alterIsr]: Starting (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:34:23,220] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,221] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,222] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,223] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,235] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2022-10-04 16:34:23,255] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.zk.KafkaZkClient)
[2022-10-04 16:34:23,272] INFO Stat of the created znode at /brokers/ids/1 is: 31,31,1664901263265,1664901263265,1,0,0,72057608891924483,204,0,31
 (kafka.zk.KafkaZkClient)
[2022-10-04 16:34:23,272] INFO Registered broker 1 at path /brokers/ids/1 with addresses: PLAINTEXT://172.99.0.4:9092, czxid (broker epoch): 31 (kafka.zk.KafkaZkClient)
[2022-10-04 16:34:23,316] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-10-04 16:34:23,323] INFO [ExpirationReaper-1-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,328] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,329] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,330] INFO Successfully created /controller_epoch with initial epoch 0 (kafka.zk.KafkaZkClient)
[2022-10-04 16:34:23,336] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-10-04 16:34:23,340] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-10-04 16:34:23,342] INFO Feature ZK node created at path: /feature (kafka.server.FinalizedFeatureChangeListener)
[2022-10-04 16:34:23,345] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:34:23,348] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:34:23,366] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:34:23,368] INFO [Transaction Marker Channel Manager 1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2022-10-04 16:34:23,368] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:34:23,369] INFO Updated cache from existing <empty> to latest FinalizedFeaturesAndEpoch(features=Features{}, epoch=0). (kafka.server.FinalizedFeatureCache)
[2022-10-04 16:34:23,369] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-10-04 16:34:23,372] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-10-04 16:34:23,373] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-10-04 16:34:23,375] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-10-04 16:34:23,385] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 31) (kafka.controller.KafkaController)
[2022-10-04 16:34:23,389] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-10-04 16:34:23,393] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-10-04 16:34:23,398] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2022-10-04 16:34:23,400] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-04 16:34:23,401] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-10-04 16:34:23,402] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-10-04 16:34:23,402] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-10-04 16:34:23,402] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-10-04 16:34:23,405] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-10-04 16:34:23,405] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-10-04 16:34:23,405] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-10-04 16:34:23,406] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-10-04 16:34:23,406] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-10-04 16:34:23,409] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2022-10-04 16:34:23,413] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2022-10-04 16:34:23,416] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-10-04 16:34:23,417] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-04 16:34:23,419] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-10-04 16:34:23,419] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-10-04 16:34:23,420] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-10-04 16:34:23,420] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-10-04 16:34:23,421] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Starting socket server acceptors and processors (kafka.network.SocketServer)
[2022-10-04 16:34:23,422] INFO [RequestSendThread controllerId=1] Controller 1 connected to 172.99.0.4:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-04 16:34:23,422] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-10-04 16:34:23,423] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-10-04 16:34:23,427] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-10-04 16:34:23,427] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-10-04 16:34:23,427] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-10-04 16:34:23,428] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-10-04 16:34:23,429] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-10-04 16:34:23,433] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Started data-plane acceptor and processor(s) for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
[2022-10-04 16:34:23,434] INFO [SocketServer listenerType=ZK_BROKER, nodeId=1] Started socket server acceptors and processors (kafka.network.SocketServer)
[2022-10-04 16:34:23,439] INFO Kafka version: 7.1.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:34:23,439] INFO Kafka commitId: c86722379ab997cc (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:34:23,439] INFO Kafka startTimeMs: 1664901263434 (org.apache.kafka.common.utils.AppInfoParser)
[2022-10-04 16:34:23,440] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-10-04 16:34:23,441] INFO [KafkaServer id=1] started (kafka.server.KafkaServer)
[2022-10-04 16:34:23,478] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:34:23,504] INFO [BrokerToControllerChannelManager broker=1 name=alterIsr]: Recorded new controller, from now on will use broker 172.99.0.4:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:34:23,529] INFO [BrokerToControllerChannelManager broker=1 name=forwarding]: Recorded new controller, from now on will use broker 172.99.0.4:9092 (id: 1 rack: null) (kafka.server.BrokerToControllerRequestThread)
[2022-10-04 16:34:28,442] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-10-04 16:34:28,442] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-10-04 16:34:28,741] INFO [Controller id=1] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 1,4 (kafka.controller.KafkaController)
[2022-10-04 16:34:28,741] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-10-04 16:34:28,744] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-04 16:34:28,745] INFO [Controller id=1] New broker startup callback for 4 (kafka.controller.KafkaController)
[2022-10-04 16:34:28,745] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2022-10-04 16:34:28,746] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(4) for 0 partitions (state.change.logger)
[2022-10-04 16:34:28,747] INFO [RequestSendThread controllerId=1] Controller 1 connected to 172.99.0.3:9092 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-04 16:34:28,747] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:34:28,748] DEBUG [Controller id=1] Register BrokerModifications handler for List(4) (kafka.controller.KafkaController)
[2022-10-04 16:34:28,750] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 31, 4 -> 53) (kafka.controller.KafkaController)
[2022-10-04 16:34:28,933] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:34:30,044] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2,4 (kafka.controller.KafkaController)
[2022-10-04 16:34:30,044] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-10-04 16:34:30,046] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-04 16:34:30,047] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-10-04 16:34:30,047] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 4) for 0 partitions (state.change.logger)
[2022-10-04 16:34:30,047] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2022-10-04 16:34:30,048] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-10-04 16:34:30,048] INFO [RequestSendThread controllerId=1] Controller 1 connected to 172.99.0.5:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-04 16:34:30,049] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 31, 2 -> 69, 4 -> 53) (kafka.controller.KafkaController)
[2022-10-04 16:34:30,049] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:34:30,049] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:34:30,269] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:34:31,881] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3,4 (kafka.controller.KafkaController)
[2022-10-04 16:34:31,881] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-10-04 16:34:31,884] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-10-04 16:34:31,884] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-10-04 16:34:31,884] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 4) for 0 partitions (state.change.logger)
[2022-10-04 16:34:31,885] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(3) for 0 partitions (state.change.logger)
[2022-10-04 16:34:31,885] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-10-04 16:34:31,886] INFO [RequestSendThread controllerId=1] Controller 1 connected to 172.99.0.6:9092 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-10-04 16:34:31,886] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 31, 2 -> 69, 3 -> 85, 4 -> 53) (kafka.controller.KafkaController)
[2022-10-04 16:34:31,886] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:34:31,887] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:34:31,887] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 1 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:34:32,071] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 0 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:25,360] INFO Creating topic output with configuration {min.insync.replicas=3} and initial partition assignment HashMap(0 -> ArrayBuffer(3, 2, 1)) (kafka.zk.AdminZkClient)
[2022-10-04 16:35:25,376] INFO [Controller id=1] New topics: [Set(output)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output,Some(AhlpG_-rRICZz41j2T8QTw),Map(output-0 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-04 16:35:25,377] INFO [Controller id=1] New partition creation callback for output-0 (kafka.controller.KafkaController)
[2022-10-04 16:35:25,379] INFO [Controller id=1 epoch=1] Changed partition output-0 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:25,379] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:25,382] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition output-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:25,382] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition output-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:25,382] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition output-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:25,382] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:25,399] INFO [Controller id=1 epoch=1] Changed partition output-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:25,400] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition output-0 (state.change.logger)
[2022-10-04 16:35:25,401] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2022-10-04 16:35:25,403] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition output-0 (state.change.logger)
[2022-10-04 16:35:25,403] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2022-10-04 16:35:25,403] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition output-0 (state.change.logger)
[2022-10-04 16:35:25,403] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2022-10-04 16:35:25,403] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3, 4) for 1 partitions (state.change.logger)
[2022-10-04 16:35:25,404] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition output-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:25,404] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition output-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:25,404] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition output-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:25,404] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:25,406] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 for 1 partitions (state.change.logger)
[2022-10-04 16:35:25,406] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 4 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:25,412] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:35:25,420] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 4 from controller 1 epoch 1 starting the become-follower transition for partition output-0 with leader 3 (state.change.logger)
[2022-10-04 16:35:25,464] INFO [LogLoader partition=output-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:25,473] INFO Created log for partition output-0 in /var/lib/kafka/data/output-0 with properties {min.insync.replicas=3} (kafka.log.LogManager)
[2022-10-04 16:35:25,474] INFO [Partition output-0 broker=1] No checkpointed highwatermark is found for partition output-0 (kafka.cluster.Partition)
[2022-10-04 16:35:25,475] INFO [Partition output-0 broker=1] Log loaded for partition output-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:25,475] INFO [Broker id=1] Follower output-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:25,476] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(output-0) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:25,477] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 4 for 1 partitions (state.change.logger)
[2022-10-04 16:35:25,489] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:25,491] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 3 for partitions Map(output-0 -> InitialFetchState(Some(AhlpG_-rRICZz41j2T8QTw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:25,492] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 4 from controller 1 epoch 1 for the become-follower transition for partition output-0 with leader 3 (state.change.logger)
[2022-10-04 16:35:25,492] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition output-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:25,493] INFO [UnifiedLog partition=output-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:25,500] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=AhlpG_-rRICZz41j2T8QTw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 1 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:25,501] INFO [Broker id=1] Finished LeaderAndIsr request in 95ms correlationId 4 from controller 1 for 1 partitions (state.change.logger)
[2022-10-04 16:35:25,503] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=AhlpG_-rRICZz41j2T8QTw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 4 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:25,505] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 2 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:25,506] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='output', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition output-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:35:25,507] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2022-10-04 16:35:25,510] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 5 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:25,522] WARN [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition output-0. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:25,534] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=AhlpG_-rRICZz41j2T8QTw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 2 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:25,540] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 3 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:28,545] INFO Creating topic src with configuration {min.insync.replicas=3} and initial partition assignment HashMap(0 -> ArrayBuffer(3, 2, 1)) (kafka.zk.AdminZkClient)
[2022-10-04 16:35:28,552] INFO [Controller id=1] New topics: [Set(src)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(src,Some(4eJ_JqRGQz-hcdTC3mcimA),Map(src-0 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-04 16:35:28,552] INFO [Controller id=1] New partition creation callback for src-0 (kafka.controller.KafkaController)
[2022-10-04 16:35:28,553] INFO [Controller id=1 epoch=1] Changed partition src-0 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:28,553] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:28,553] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition src-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:28,553] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition src-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:28,553] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition src-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:28,553] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:28,559] INFO [Controller id=1 epoch=1] Changed partition src-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:28,559] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition src-0 (state.change.logger)
[2022-10-04 16:35:28,559] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2022-10-04 16:35:28,559] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition src-0 (state.change.logger)
[2022-10-04 16:35:28,559] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2022-10-04 16:35:28,559] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition src-0 (state.change.logger)
[2022-10-04 16:35:28,559] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2022-10-04 16:35:28,559] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3, 4) for 1 partitions (state.change.logger)
[2022-10-04 16:35:28,560] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 for 1 partitions (state.change.logger)
[2022-10-04 16:35:28,560] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 6 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:28,560] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition src-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:28,560] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition src-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:28,560] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition src-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:28,560] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:28,561] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 epoch 1 starting the become-follower transition for partition src-0 with leader 3 (state.change.logger)
[2022-10-04 16:35:28,562] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 4 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:35:28,564] INFO [LogLoader partition=src-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:28,565] INFO Created log for partition src-0 in /var/lib/kafka/data/src-0 with properties {min.insync.replicas=3} (kafka.log.LogManager)
[2022-10-04 16:35:28,565] INFO [Partition src-0 broker=1] No checkpointed highwatermark is found for partition src-0 (kafka.cluster.Partition)
[2022-10-04 16:35:28,566] INFO [Partition src-0 broker=1] Log loaded for partition src-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:28,566] INFO [Broker id=1] Follower src-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:28,566] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(src-0) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:28,567] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 6 for 1 partitions (state.change.logger)
[2022-10-04 16:35:28,567] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 3 for partitions Map(src-0 -> InitialFetchState(Some(4eJ_JqRGQz-hcdTC3mcimA),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:28,567] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 6 from controller 1 epoch 1 for the become-follower transition for partition src-0 with leader 3 (state.change.logger)
[2022-10-04 16:35:28,567] INFO [Broker id=1] Finished LeaderAndIsr request in 7ms correlationId 6 from controller 1 for 1 partitions (state.change.logger)
[2022-10-04 16:35:28,568] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=4eJ_JqRGQz-hcdTC3mcimA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 3 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:28,568] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=4eJ_JqRGQz-hcdTC3mcimA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 6 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:28,569] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='src', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition src-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:35:28,569] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2022-10-04 16:35:28,570] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 4 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:28,570] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 7 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:28,571] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=4eJ_JqRGQz-hcdTC3mcimA, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 4 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:28,573] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 5 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:29,047] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition src-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:29,048] INFO [UnifiedLog partition=src-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,529] INFO Creating topic __transaction_state with configuration {compression.type=uncompressed, cleanup.policy=compact, min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} and initial partition assignment HashMap(0 -> ArrayBuffer(3, 1, 4), 1 -> ArrayBuffer(1, 4, 2), 2 -> ArrayBuffer(4, 2, 3), 3 -> ArrayBuffer(2, 3, 1), 4 -> ArrayBuffer(3, 4, 2), 5 -> ArrayBuffer(1, 2, 3), 6 -> ArrayBuffer(4, 3, 1), 7 -> ArrayBuffer(2, 1, 4), 8 -> ArrayBuffer(3, 2, 1), 9 -> ArrayBuffer(1, 3, 4), 10 -> ArrayBuffer(4, 1, 2), 11 -> ArrayBuffer(2, 4, 3), 12 -> ArrayBuffer(3, 1, 4), 13 -> ArrayBuffer(1, 4, 2), 14 -> ArrayBuffer(4, 2, 3), 15 -> ArrayBuffer(2, 3, 1), 16 -> ArrayBuffer(3, 4, 2), 17 -> ArrayBuffer(1, 2, 3), 18 -> ArrayBuffer(4, 3, 1), 19 -> ArrayBuffer(2, 1, 4), 20 -> ArrayBuffer(3, 2, 1), 21 -> ArrayBuffer(1, 3, 4), 22 -> ArrayBuffer(4, 1, 2), 23 -> ArrayBuffer(2, 4, 3), 24 -> ArrayBuffer(3, 1, 4), 25 -> ArrayBuffer(1, 4, 2), 26 -> ArrayBuffer(4, 2, 3), 27 -> ArrayBuffer(2, 3, 1), 28 -> ArrayBuffer(3, 4, 2), 29 -> ArrayBuffer(1, 2, 3), 30 -> ArrayBuffer(4, 3, 1), 31 -> ArrayBuffer(2, 1, 4), 32 -> ArrayBuffer(3, 2, 1), 33 -> ArrayBuffer(1, 3, 4), 34 -> ArrayBuffer(4, 1, 2), 35 -> ArrayBuffer(2, 4, 3), 36 -> ArrayBuffer(3, 1, 4), 37 -> ArrayBuffer(1, 4, 2), 38 -> ArrayBuffer(4, 2, 3), 39 -> ArrayBuffer(2, 3, 1), 40 -> ArrayBuffer(3, 4, 2), 41 -> ArrayBuffer(1, 2, 3), 42 -> ArrayBuffer(4, 3, 1), 43 -> ArrayBuffer(2, 1, 4), 44 -> ArrayBuffer(3, 2, 1), 45 -> ArrayBuffer(1, 3, 4), 46 -> ArrayBuffer(4, 1, 2), 47 -> ArrayBuffer(2, 4, 3), 48 -> ArrayBuffer(3, 1, 4), 49 -> ArrayBuffer(1, 4, 2)) (kafka.zk.AdminZkClient)
[2022-10-04 16:35:43,539] INFO [Controller id=1] New topics: [Set(__transaction_state)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__transaction_state,Some(chHt1jyvThK3HHFupH1biw),HashMap(__transaction_state-42 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __transaction_state-7 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __transaction_state-13 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __transaction_state-0 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __transaction_state-37 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __transaction_state-6 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __transaction_state-32 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __transaction_state-18 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __transaction_state-40 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __transaction_state-31 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __transaction_state-45 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __transaction_state-15 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __transaction_state-12 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __transaction_state-46 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __transaction_state-48 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __transaction_state-49 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __transaction_state-28 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __transaction_state-2 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __transaction_state-20 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __transaction_state-24 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __transaction_state-3 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __transaction_state-21 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __transaction_state-29 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __transaction_state-39 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __transaction_state-38 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __transaction_state-14 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __transaction_state-10 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __transaction_state-44 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __transaction_state-9 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __transaction_state-22 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __transaction_state-43 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __transaction_state-4 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __transaction_state-30 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __transaction_state-33 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __transaction_state-25 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __transaction_state-17 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __transaction_state-23 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __transaction_state-47 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __transaction_state-26 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __transaction_state-36 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __transaction_state-5 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __transaction_state-8 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __transaction_state-16 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __transaction_state-11 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __transaction_state-19 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __transaction_state-27 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __transaction_state-41 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __transaction_state-1 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __transaction_state-34 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __transaction_state-35 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-04 16:35:43,540] INFO [Controller id=1] New partition creation callback for __transaction_state-42,__transaction_state-7,__transaction_state-13,__transaction_state-0,__transaction_state-37,__transaction_state-6,__transaction_state-32,__transaction_state-18,__transaction_state-40,__transaction_state-31,__transaction_state-45,__transaction_state-15,__transaction_state-12,__transaction_state-46,__transaction_state-48,__transaction_state-49,__transaction_state-28,__transaction_state-2,__transaction_state-20,__transaction_state-24,__transaction_state-3,__transaction_state-21,__transaction_state-29,__transaction_state-39,__transaction_state-38,__transaction_state-14,__transaction_state-10,__transaction_state-44,__transaction_state-9,__transaction_state-22,__transaction_state-43,__transaction_state-4,__transaction_state-30,__transaction_state-33,__transaction_state-25,__transaction_state-17,__transaction_state-23,__transaction_state-47,__transaction_state-26,__transaction_state-36,__transaction_state-5,__transaction_state-8,__transaction_state-16,__transaction_state-11,__transaction_state-19,__transaction_state-27,__transaction_state-41,__transaction_state-1,__transaction_state-34,__transaction_state-35 (kafka.controller.KafkaController)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-42 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-7 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-13 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-0 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-37 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-6 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:43,540] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-32 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-18 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-40 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-31 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-45 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-15 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-12 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-46 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-48 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-49 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-28 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-2 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-20 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-24 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-3 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-21 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-29 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-39 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-38 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-14 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-10 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-44 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-9 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-22 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-43 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-4 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-30 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-33 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-25 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-17 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-23 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-47 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-26 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:43,541] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-36 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-5 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-8 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-16 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-11 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-19 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-27 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-41 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-1 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-34 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-35 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:43,542] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-8 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-1 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-46 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-10 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-29 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-39 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-37 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-25 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-24 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-43 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-17 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-6 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-20 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-41 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-15 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-13 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-22 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-27 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-3 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-42 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-48 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-33 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-34 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-12 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-9 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-5 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-30 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-18 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-21 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-44 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-36 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,544] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-7 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-31 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-32 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-19 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-45 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-49 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-43 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-13 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-4 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-26 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-17 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-22 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-39 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-27 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-15 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-44 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-3 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-46 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-32 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-40 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-14 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-31 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-49 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-28 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-2 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-23 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-29 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-37 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-5 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-35 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-41 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-8 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-7 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,545] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-1 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-34 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-38 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-20 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-11 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-47 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-25 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-16 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-19 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-10 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-29 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-2 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-41 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-44 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-11 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-48 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-5 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-42 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-8 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-35 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-28 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-32 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-18 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-24 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-40 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-26 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-33 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-12 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-21 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-38 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-17 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-39 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-16 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-47 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-20 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-4 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,546] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-6 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-9 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-45 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-15 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-36 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-3 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-30 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-14 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-27 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-23 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-18 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-43 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-14 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-30 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-40 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-34 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-10 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-28 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-48 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-21 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-11 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-4 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-22 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-9 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-37 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-47 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-12 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-1 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-25 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-33 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-31 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-46 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-23 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-45 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-2 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-42 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,547] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-6 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-7 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-13 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-36 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-49 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-19 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-24 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-26 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-38 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-35 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-16 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:43,548] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,616] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] INFO [Controller id=1 epoch=1] Changed partition __transaction_state-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:43,617] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-42 (state.change.logger)
[2022-10-04 16:35:43,617] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-44 (state.change.logger)
[2022-10-04 16:35:43,617] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-13 (state.change.logger)
[2022-10-04 16:35:43,617] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-46 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-15 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-48 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-17 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-34 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-3 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-36 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-5 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-7 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-9 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-30 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-32 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-1 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-18 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-20 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-22 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-24 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-10 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-43 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-12 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-45 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-49 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-37 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-6 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-39 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-8 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-41 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-27 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-29 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-31 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-0 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-33 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-19 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-21 (state.change.logger)
[2022-10-04 16:35:43,618] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __transaction_state-25 (state.change.logger)
[2022-10-04 16:35:43,618] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 13 become-leader and 25 become-follower partitions (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-11 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-44 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-13 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-46 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-15 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-17 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-34 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-3 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-5 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-38 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-7 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-40 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-26 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-28 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-32 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-1 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-20 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-22 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-10 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-43 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-14 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-47 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-16 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-49 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-2 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-35 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-4 (state.change.logger)
[2022-10-04 16:35:43,619] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-37 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-39 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-8 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-41 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-27 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-29 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-31 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-19 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-23 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __transaction_state-25 (state.change.logger)
[2022-10-04 16:35:43,620] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 12 become-leader and 25 become-follower partitions (state.change.logger)
[2022-10-04 16:35:43,620] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 for 38 partitions (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-42 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-11 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-44 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-15 (state.change.logger)
[2022-10-04 16:35:43,620] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-48 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-17 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-3 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-36 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-5 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-38 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-40 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-9 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-26 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-28 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-30 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-32 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-18 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-20 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-24 (state.change.logger)
[2022-10-04 16:35:43,621] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-12 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-45 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-14 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-47 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-16 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-2 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-35 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-4 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-6 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-39 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-8 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-41 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-27 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 8 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-29 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-0 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-33 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-21 (state.change.logger)
[2022-10-04 16:35:43,622] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __transaction_state-23 (state.change.logger)
[2022-10-04 16:35:43,622] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 13 become-leader and 24 become-follower partitions (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-42 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-11 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-13 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-46 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-48 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-34 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-36 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-38 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-7 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-40 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-9 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-26 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-28 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-30 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-1 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-18 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-22 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-24 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-10 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-43 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-12 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-45 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-14 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-47 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-16 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-49 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-2 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-35 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-4 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-37 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-6 (state.change.logger)
[2022-10-04 16:35:43,623] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-31 (state.change.logger)
[2022-10-04 16:35:43,624] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-0 (state.change.logger)
[2022-10-04 16:35:43,624] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-33 (state.change.logger)
[2022-10-04 16:35:43,624] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-19 (state.change.logger)
[2022-10-04 16:35:43,624] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-21 (state.change.logger)
[2022-10-04 16:35:43,624] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-23 (state.change.logger)
[2022-10-04 16:35:43,624] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __transaction_state-25 (state.change.logger)
[2022-10-04 16:35:43,624] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 4 with 12 become-leader and 26 become-follower partitions (state.change.logger)
[2022-10-04 16:35:43,624] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3, 4) for 50 partitions (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-8 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-1 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-46 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-10 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-29 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-39 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-37 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-25 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-24 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-43 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-17 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-6 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-20 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-41 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-15 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-13 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-22 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-27 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-3 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-42 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-48 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-33 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-34 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-12 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-9 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-5 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-30 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-18 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-21 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-44 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-36 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-7 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-31 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-32 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-19 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-45 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __transaction_state-49 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-43 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-13 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-4 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-26 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-17 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-22 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-39 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-27 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-15 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-44 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,626] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-3 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-46 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-32 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-40 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-14 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-31 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-49 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-28 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-2 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-23 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-29 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-37 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-5 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-35 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-41 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-8 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-7 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-1 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-34 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-38 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-20 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-11 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-47 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-25 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-16 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-19 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __transaction_state-10 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-29 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-2 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-41 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-44 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-11 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-48 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-5 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-42 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-8 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-35 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-28 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-32 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-18 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-24 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-40 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-26 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-33 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-12 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-21 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-38 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-17 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-39 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,627] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-16 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-47 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-20 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-4 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-6 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-9 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-45 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-15 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-36 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-3 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-30 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-14 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-27 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __transaction_state-23 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-18 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-43 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-14 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-30 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-40 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-34 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-10 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-28 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-48 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-21 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-11 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-4 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-22 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-9 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-37 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-47 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-12 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-1 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-25 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-33 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-31 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-46 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-23 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-45 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-2 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-42 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-6 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-7 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-13 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,628] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-36 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-49 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-19 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-24 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-26 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-38 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-35 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __transaction_state-16 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:43,629] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-5 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-37 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-1 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-33 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-13 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-45 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-9 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-41 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-21 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-17 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-49 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-29 (state.change.logger)
[2022-10-04 16:35:43,638] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-leader transition for partition __transaction_state-25 (state.change.logger)
[2022-10-04 16:35:43,638] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__transaction_state-45, __transaction_state-49, __transaction_state-13, __transaction_state-37, __transaction_state-9, __transaction_state-33, __transaction_state-5, __transaction_state-41, __transaction_state-1, __transaction_state-21, __transaction_state-29, __transaction_state-25, __transaction_state-17) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:43,639] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 8 from controller 1 epoch 1 as part of the become-leader transition for 13 partitions (state.change.logger)
[2022-10-04 16:35:43,643] INFO [LogLoader partition=__transaction_state-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,644] INFO Created log for partition __transaction_state-5 in /var/lib/kafka/data/__transaction_state-5 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,644] INFO [Partition __transaction_state-5 broker=1] No checkpointed highwatermark is found for partition __transaction_state-5 (kafka.cluster.Partition)
[2022-10-04 16:35:43,644] INFO [Partition __transaction_state-5 broker=1] Log loaded for partition __transaction_state-5 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,645] INFO [Broker id=1] Leader __transaction_state-5 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,651] INFO [LogLoader partition=__transaction_state-37, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,651] INFO Created log for partition __transaction_state-37 in /var/lib/kafka/data/__transaction_state-37 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,651] INFO [Partition __transaction_state-37 broker=1] No checkpointed highwatermark is found for partition __transaction_state-37 (kafka.cluster.Partition)
[2022-10-04 16:35:43,651] INFO [Partition __transaction_state-37 broker=1] Log loaded for partition __transaction_state-37 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,651] INFO [Broker id=1] Leader __transaction_state-37 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,654] INFO [LogLoader partition=__transaction_state-1, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,655] INFO Created log for partition __transaction_state-1 in /var/lib/kafka/data/__transaction_state-1 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,655] INFO [Partition __transaction_state-1 broker=1] No checkpointed highwatermark is found for partition __transaction_state-1 (kafka.cluster.Partition)
[2022-10-04 16:35:43,655] INFO [Partition __transaction_state-1 broker=1] Log loaded for partition __transaction_state-1 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,655] INFO [Broker id=1] Leader __transaction_state-1 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,657] INFO [LogLoader partition=__transaction_state-33, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,658] INFO Created log for partition __transaction_state-33 in /var/lib/kafka/data/__transaction_state-33 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,658] INFO [Partition __transaction_state-33 broker=1] No checkpointed highwatermark is found for partition __transaction_state-33 (kafka.cluster.Partition)
[2022-10-04 16:35:43,658] INFO [Partition __transaction_state-33 broker=1] Log loaded for partition __transaction_state-33 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,658] INFO [Broker id=1] Leader __transaction_state-33 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,660] INFO [LogLoader partition=__transaction_state-13, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,661] INFO Created log for partition __transaction_state-13 in /var/lib/kafka/data/__transaction_state-13 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,661] INFO [Partition __transaction_state-13 broker=1] No checkpointed highwatermark is found for partition __transaction_state-13 (kafka.cluster.Partition)
[2022-10-04 16:35:43,661] INFO [Partition __transaction_state-13 broker=1] Log loaded for partition __transaction_state-13 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,661] INFO [Broker id=1] Leader __transaction_state-13 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,664] INFO [LogLoader partition=__transaction_state-45, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,665] INFO Created log for partition __transaction_state-45 in /var/lib/kafka/data/__transaction_state-45 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,665] INFO [Partition __transaction_state-45 broker=1] No checkpointed highwatermark is found for partition __transaction_state-45 (kafka.cluster.Partition)
[2022-10-04 16:35:43,665] INFO [Partition __transaction_state-45 broker=1] Log loaded for partition __transaction_state-45 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,665] INFO [Broker id=1] Leader __transaction_state-45 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,667] INFO [LogLoader partition=__transaction_state-9, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,668] INFO Created log for partition __transaction_state-9 in /var/lib/kafka/data/__transaction_state-9 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,668] INFO [Partition __transaction_state-9 broker=1] No checkpointed highwatermark is found for partition __transaction_state-9 (kafka.cluster.Partition)
[2022-10-04 16:35:43,668] INFO [Partition __transaction_state-9 broker=1] Log loaded for partition __transaction_state-9 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,668] INFO [Broker id=1] Leader __transaction_state-9 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,670] INFO [LogLoader partition=__transaction_state-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,671] INFO Created log for partition __transaction_state-41 in /var/lib/kafka/data/__transaction_state-41 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,671] INFO [Partition __transaction_state-41 broker=1] No checkpointed highwatermark is found for partition __transaction_state-41 (kafka.cluster.Partition)
[2022-10-04 16:35:43,671] INFO [Partition __transaction_state-41 broker=1] Log loaded for partition __transaction_state-41 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,671] INFO [Broker id=1] Leader __transaction_state-41 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,673] INFO [LogLoader partition=__transaction_state-21, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,674] INFO Created log for partition __transaction_state-21 in /var/lib/kafka/data/__transaction_state-21 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,674] INFO [Partition __transaction_state-21 broker=1] No checkpointed highwatermark is found for partition __transaction_state-21 (kafka.cluster.Partition)
[2022-10-04 16:35:43,674] INFO [Partition __transaction_state-21 broker=1] Log loaded for partition __transaction_state-21 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,674] INFO [Broker id=1] Leader __transaction_state-21 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,676] INFO [LogLoader partition=__transaction_state-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,677] INFO Created log for partition __transaction_state-17 in /var/lib/kafka/data/__transaction_state-17 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,677] INFO [Partition __transaction_state-17 broker=1] No checkpointed highwatermark is found for partition __transaction_state-17 (kafka.cluster.Partition)
[2022-10-04 16:35:43,677] INFO [Partition __transaction_state-17 broker=1] Log loaded for partition __transaction_state-17 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,677] INFO [Broker id=1] Leader __transaction_state-17 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,680] INFO [LogLoader partition=__transaction_state-49, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,680] INFO Created log for partition __transaction_state-49 in /var/lib/kafka/data/__transaction_state-49 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,680] INFO [Partition __transaction_state-49 broker=1] No checkpointed highwatermark is found for partition __transaction_state-49 (kafka.cluster.Partition)
[2022-10-04 16:35:43,680] INFO [Partition __transaction_state-49 broker=1] Log loaded for partition __transaction_state-49 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,680] INFO [Broker id=1] Leader __transaction_state-49 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,682] INFO [LogLoader partition=__transaction_state-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,683] INFO Created log for partition __transaction_state-29 in /var/lib/kafka/data/__transaction_state-29 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,683] INFO [Partition __transaction_state-29 broker=1] No checkpointed highwatermark is found for partition __transaction_state-29 (kafka.cluster.Partition)
[2022-10-04 16:35:43,683] INFO [Partition __transaction_state-29 broker=1] Log loaded for partition __transaction_state-29 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,683] INFO [Broker id=1] Leader __transaction_state-29 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,685] INFO [LogLoader partition=__transaction_state-25, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,686] INFO Created log for partition __transaction_state-25 in /var/lib/kafka/data/__transaction_state-25 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,686] INFO [Partition __transaction_state-25 broker=1] No checkpointed highwatermark is found for partition __transaction_state-25 (kafka.cluster.Partition)
[2022-10-04 16:35:43,686] INFO [Partition __transaction_state-25 broker=1] Log loaded for partition __transaction_state-25 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,686] INFO [Broker id=1] Leader __transaction_state-25 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,687] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-5 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-37 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-1 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-33 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-13 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-45 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-9 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-41 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-21 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-17 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-49 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-29 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-leader transition for partition __transaction_state-25 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-7 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-22 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-3 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-18 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-0 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-15 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-30 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-8 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-19 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-34 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-31 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-46 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-12 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-27 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-42 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-24 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-39 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-20 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-32 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-43 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-6 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-36 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-48 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-44 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,688] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 8 from controller 1 epoch 1 starting the become-follower transition for partition __transaction_state-10 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,690] INFO [LogLoader partition=__transaction_state-7, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,690] INFO Created log for partition __transaction_state-7 in /var/lib/kafka/data/__transaction_state-7 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,690] INFO [Partition __transaction_state-7 broker=1] No checkpointed highwatermark is found for partition __transaction_state-7 (kafka.cluster.Partition)
[2022-10-04 16:35:43,690] INFO [Partition __transaction_state-7 broker=1] Log loaded for partition __transaction_state-7 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,690] INFO [Broker id=1] Follower __transaction_state-7 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,692] INFO [LogLoader partition=__transaction_state-22, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,693] INFO Created log for partition __transaction_state-22 in /var/lib/kafka/data/__transaction_state-22 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,693] INFO [Partition __transaction_state-22 broker=1] No checkpointed highwatermark is found for partition __transaction_state-22 (kafka.cluster.Partition)
[2022-10-04 16:35:43,693] INFO [Partition __transaction_state-22 broker=1] Log loaded for partition __transaction_state-22 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,693] INFO [Broker id=1] Follower __transaction_state-22 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,695] INFO [LogLoader partition=__transaction_state-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,695] INFO Created log for partition __transaction_state-3 in /var/lib/kafka/data/__transaction_state-3 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,695] INFO [Partition __transaction_state-3 broker=1] No checkpointed highwatermark is found for partition __transaction_state-3 (kafka.cluster.Partition)
[2022-10-04 16:35:43,695] INFO [Partition __transaction_state-3 broker=1] Log loaded for partition __transaction_state-3 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,695] INFO [Broker id=1] Follower __transaction_state-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,697] INFO [LogLoader partition=__transaction_state-18, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,698] INFO Created log for partition __transaction_state-18 in /var/lib/kafka/data/__transaction_state-18 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,698] INFO [Partition __transaction_state-18 broker=1] No checkpointed highwatermark is found for partition __transaction_state-18 (kafka.cluster.Partition)
[2022-10-04 16:35:43,698] INFO [Partition __transaction_state-18 broker=1] Log loaded for partition __transaction_state-18 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,698] INFO [Broker id=1] Follower __transaction_state-18 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,700] INFO [LogLoader partition=__transaction_state-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,700] INFO Created log for partition __transaction_state-0 in /var/lib/kafka/data/__transaction_state-0 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,700] INFO [Partition __transaction_state-0 broker=1] No checkpointed highwatermark is found for partition __transaction_state-0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,700] INFO [Partition __transaction_state-0 broker=1] Log loaded for partition __transaction_state-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,700] INFO [Broker id=1] Follower __transaction_state-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,702] INFO [LogLoader partition=__transaction_state-15, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,702] INFO Created log for partition __transaction_state-15 in /var/lib/kafka/data/__transaction_state-15 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,702] INFO [Partition __transaction_state-15 broker=1] No checkpointed highwatermark is found for partition __transaction_state-15 (kafka.cluster.Partition)
[2022-10-04 16:35:43,702] INFO [Partition __transaction_state-15 broker=1] Log loaded for partition __transaction_state-15 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,702] INFO [Broker id=1] Follower __transaction_state-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,704] INFO [LogLoader partition=__transaction_state-30, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,704] INFO Created log for partition __transaction_state-30 in /var/lib/kafka/data/__transaction_state-30 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,705] INFO [Partition __transaction_state-30 broker=1] No checkpointed highwatermark is found for partition __transaction_state-30 (kafka.cluster.Partition)
[2022-10-04 16:35:43,705] INFO [Partition __transaction_state-30 broker=1] Log loaded for partition __transaction_state-30 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,705] INFO [Broker id=1] Follower __transaction_state-30 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,706] INFO [LogLoader partition=__transaction_state-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,707] INFO Created log for partition __transaction_state-8 in /var/lib/kafka/data/__transaction_state-8 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,707] INFO [Partition __transaction_state-8 broker=1] No checkpointed highwatermark is found for partition __transaction_state-8 (kafka.cluster.Partition)
[2022-10-04 16:35:43,707] INFO [Partition __transaction_state-8 broker=1] Log loaded for partition __transaction_state-8 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,707] INFO [Broker id=1] Follower __transaction_state-8 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,709] INFO [LogLoader partition=__transaction_state-19, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,709] INFO Created log for partition __transaction_state-19 in /var/lib/kafka/data/__transaction_state-19 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,709] INFO [Partition __transaction_state-19 broker=1] No checkpointed highwatermark is found for partition __transaction_state-19 (kafka.cluster.Partition)
[2022-10-04 16:35:43,709] INFO [Partition __transaction_state-19 broker=1] Log loaded for partition __transaction_state-19 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,709] INFO [Broker id=1] Follower __transaction_state-19 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,711] INFO [LogLoader partition=__transaction_state-34, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,711] INFO Created log for partition __transaction_state-34 in /var/lib/kafka/data/__transaction_state-34 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,711] INFO [Partition __transaction_state-34 broker=1] No checkpointed highwatermark is found for partition __transaction_state-34 (kafka.cluster.Partition)
[2022-10-04 16:35:43,711] INFO [Partition __transaction_state-34 broker=1] Log loaded for partition __transaction_state-34 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,711] INFO [Broker id=1] Follower __transaction_state-34 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,713] INFO [LogLoader partition=__transaction_state-31, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,713] INFO Created log for partition __transaction_state-31 in /var/lib/kafka/data/__transaction_state-31 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,713] INFO [Partition __transaction_state-31 broker=1] No checkpointed highwatermark is found for partition __transaction_state-31 (kafka.cluster.Partition)
[2022-10-04 16:35:43,714] INFO [Partition __transaction_state-31 broker=1] Log loaded for partition __transaction_state-31 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,714] INFO [Broker id=1] Follower __transaction_state-31 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,715] INFO [LogLoader partition=__transaction_state-46, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,716] INFO Created log for partition __transaction_state-46 in /var/lib/kafka/data/__transaction_state-46 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,716] INFO [Partition __transaction_state-46 broker=1] No checkpointed highwatermark is found for partition __transaction_state-46 (kafka.cluster.Partition)
[2022-10-04 16:35:43,716] INFO [Partition __transaction_state-46 broker=1] Log loaded for partition __transaction_state-46 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,716] INFO [Broker id=1] Follower __transaction_state-46 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,717] INFO [LogLoader partition=__transaction_state-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,718] INFO Created log for partition __transaction_state-12 in /var/lib/kafka/data/__transaction_state-12 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,718] INFO [Partition __transaction_state-12 broker=1] No checkpointed highwatermark is found for partition __transaction_state-12 (kafka.cluster.Partition)
[2022-10-04 16:35:43,718] INFO [Partition __transaction_state-12 broker=1] Log loaded for partition __transaction_state-12 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,718] INFO [Broker id=1] Follower __transaction_state-12 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,720] INFO [LogLoader partition=__transaction_state-27, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,720] INFO Created log for partition __transaction_state-27 in /var/lib/kafka/data/__transaction_state-27 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,720] INFO [Partition __transaction_state-27 broker=1] No checkpointed highwatermark is found for partition __transaction_state-27 (kafka.cluster.Partition)
[2022-10-04 16:35:43,720] INFO [Partition __transaction_state-27 broker=1] Log loaded for partition __transaction_state-27 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,720] INFO [Broker id=1] Follower __transaction_state-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,722] INFO [LogLoader partition=__transaction_state-42, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,722] INFO Created log for partition __transaction_state-42 in /var/lib/kafka/data/__transaction_state-42 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,722] INFO [Partition __transaction_state-42 broker=1] No checkpointed highwatermark is found for partition __transaction_state-42 (kafka.cluster.Partition)
[2022-10-04 16:35:43,722] INFO [Partition __transaction_state-42 broker=1] Log loaded for partition __transaction_state-42 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,722] INFO [Broker id=1] Follower __transaction_state-42 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,724] INFO [LogLoader partition=__transaction_state-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,725] INFO Created log for partition __transaction_state-24 in /var/lib/kafka/data/__transaction_state-24 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,725] INFO [Partition __transaction_state-24 broker=1] No checkpointed highwatermark is found for partition __transaction_state-24 (kafka.cluster.Partition)
[2022-10-04 16:35:43,725] INFO [Partition __transaction_state-24 broker=1] Log loaded for partition __transaction_state-24 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,725] INFO [Broker id=1] Follower __transaction_state-24 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,727] INFO [LogLoader partition=__transaction_state-39, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,728] INFO Created log for partition __transaction_state-39 in /var/lib/kafka/data/__transaction_state-39 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,728] INFO [Partition __transaction_state-39 broker=1] No checkpointed highwatermark is found for partition __transaction_state-39 (kafka.cluster.Partition)
[2022-10-04 16:35:43,728] INFO [Partition __transaction_state-39 broker=1] Log loaded for partition __transaction_state-39 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,728] INFO [Broker id=1] Follower __transaction_state-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,730] INFO [LogLoader partition=__transaction_state-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,730] INFO Created log for partition __transaction_state-20 in /var/lib/kafka/data/__transaction_state-20 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,730] INFO [Partition __transaction_state-20 broker=1] No checkpointed highwatermark is found for partition __transaction_state-20 (kafka.cluster.Partition)
[2022-10-04 16:35:43,730] INFO [Partition __transaction_state-20 broker=1] Log loaded for partition __transaction_state-20 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,730] INFO [Broker id=1] Follower __transaction_state-20 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,733] INFO [LogLoader partition=__transaction_state-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,733] INFO Created log for partition __transaction_state-32 in /var/lib/kafka/data/__transaction_state-32 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,733] INFO [Partition __transaction_state-32 broker=1] No checkpointed highwatermark is found for partition __transaction_state-32 (kafka.cluster.Partition)
[2022-10-04 16:35:43,733] INFO [Partition __transaction_state-32 broker=1] Log loaded for partition __transaction_state-32 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,733] INFO [Broker id=1] Follower __transaction_state-32 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,735] INFO [LogLoader partition=__transaction_state-43, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,736] INFO Created log for partition __transaction_state-43 in /var/lib/kafka/data/__transaction_state-43 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,736] INFO [Partition __transaction_state-43 broker=1] No checkpointed highwatermark is found for partition __transaction_state-43 (kafka.cluster.Partition)
[2022-10-04 16:35:43,736] INFO [Partition __transaction_state-43 broker=1] Log loaded for partition __transaction_state-43 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,736] INFO [Broker id=1] Follower __transaction_state-43 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,738] INFO [LogLoader partition=__transaction_state-6, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,738] INFO Created log for partition __transaction_state-6 in /var/lib/kafka/data/__transaction_state-6 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,739] INFO [Partition __transaction_state-6 broker=1] No checkpointed highwatermark is found for partition __transaction_state-6 (kafka.cluster.Partition)
[2022-10-04 16:35:43,739] INFO [Partition __transaction_state-6 broker=1] Log loaded for partition __transaction_state-6 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,739] INFO [Broker id=1] Follower __transaction_state-6 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,741] INFO [LogLoader partition=__transaction_state-36, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,741] INFO Created log for partition __transaction_state-36 in /var/lib/kafka/data/__transaction_state-36 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,741] INFO [Partition __transaction_state-36 broker=1] No checkpointed highwatermark is found for partition __transaction_state-36 (kafka.cluster.Partition)
[2022-10-04 16:35:43,741] INFO [Partition __transaction_state-36 broker=1] Log loaded for partition __transaction_state-36 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,741] INFO [Broker id=1] Follower __transaction_state-36 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,743] INFO [LogLoader partition=__transaction_state-48, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,744] INFO Created log for partition __transaction_state-48 in /var/lib/kafka/data/__transaction_state-48 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,744] INFO [Partition __transaction_state-48 broker=1] No checkpointed highwatermark is found for partition __transaction_state-48 (kafka.cluster.Partition)
[2022-10-04 16:35:43,744] INFO [Partition __transaction_state-48 broker=1] Log loaded for partition __transaction_state-48 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,744] INFO [Broker id=1] Follower __transaction_state-48 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,746] INFO [LogLoader partition=__transaction_state-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,746] INFO Created log for partition __transaction_state-44 in /var/lib/kafka/data/__transaction_state-44 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,746] INFO [Partition __transaction_state-44 broker=1] No checkpointed highwatermark is found for partition __transaction_state-44 (kafka.cluster.Partition)
[2022-10-04 16:35:43,746] INFO [Partition __transaction_state-44 broker=1] Log loaded for partition __transaction_state-44 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,746] INFO [Broker id=1] Follower __transaction_state-44 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,748] INFO [LogLoader partition=__transaction_state-10, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:43,748] INFO Created log for partition __transaction_state-10 in /var/lib/kafka/data/__transaction_state-10 with properties {cleanup.policy=compact, compression.type="uncompressed", min.insync.replicas=2, segment.bytes=104857600, unclean.leader.election.enable=false} (kafka.log.LogManager)
[2022-10-04 16:35:43,748] INFO [Partition __transaction_state-10 broker=1] No checkpointed highwatermark is found for partition __transaction_state-10 (kafka.cluster.Partition)
[2022-10-04 16:35:43,748] INFO [Partition __transaction_state-10 broker=1] Log loaded for partition __transaction_state-10 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:43,748] INFO [Broker id=1] Follower __transaction_state-10 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:43,748] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__transaction_state-42, __transaction_state-44, __transaction_state-46, __transaction_state-15, __transaction_state-48, __transaction_state-34, __transaction_state-3, __transaction_state-36, __transaction_state-7, __transaction_state-30, __transaction_state-32, __transaction_state-18, __transaction_state-20, __transaction_state-22, __transaction_state-24, __transaction_state-10, __transaction_state-43, __transaction_state-12, __transaction_state-6, __transaction_state-39, __transaction_state-8, __transaction_state-27, __transaction_state-31, __transaction_state-0, __transaction_state-19) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:43,748] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 8 for 25 partitions (state.change.logger)
[2022-10-04 16:35:43,750] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 3 for partitions HashMap(__transaction_state-12 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-48 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-0 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-44 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-32 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-20 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-24 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-36 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __transaction_state-8 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:43,752] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,752] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-10 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,752] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 4 for partitions HashMap(__transaction_state-42 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-46 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-6 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-10 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-18 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-34 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-22 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __transaction_state-30 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:43,753] INFO [UnifiedLog partition=__transaction_state-10, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,754] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,754] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-27 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,754] INFO [UnifiedLog partition=__transaction_state-27, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,754] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 2 for partitions HashMap(__transaction_state-31 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-15 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-7 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-3 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-39 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-43 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-19 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __transaction_state-27 -> InitialFetchState(Some(chHt1jyvThK3HHFupH1biw),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:43,754] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-43 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,754] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-7 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,754] INFO [UnifiedLog partition=__transaction_state-43, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,754] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-42 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,754] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-22 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,754] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-15 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-42, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,754] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-3 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-15, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-30 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-18 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-31 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-30, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-31, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-46 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-3 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-46, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-18 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-18, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-34 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-34, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-6 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-6, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __transaction_state-22 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-22, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,755] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-0 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,755] INFO [UnifiedLog partition=__transaction_state-3, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-15 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-30 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,756] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-19 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-8 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-19 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-34 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-31 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,756] INFO [UnifiedLog partition=__transaction_state-19, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-46 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-12 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-27 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,756] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-7 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-42 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-24 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] INFO [UnifiedLog partition=__transaction_state-7, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-39 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-20 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __transaction_state-39 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-32 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-43 with leader 2 (state.change.logger)
[2022-10-04 16:35:43,756] INFO [UnifiedLog partition=__transaction_state-39, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-6 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-36 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-48 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-44 with leader 3 (state.change.logger)
[2022-10-04 16:35:43,756] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 8 from controller 1 epoch 1 for the become-follower transition for partition __transaction_state-10 with leader 4 (state.change.logger)
[2022-10-04 16:35:43,757] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 5 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 37 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 1 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 33 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 13 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 45 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 9 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 41 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 21 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 17 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 49 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-5 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 29 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,761] INFO [TransactionCoordinator id=1] Elected as the txn coordinator for partition 25 at epoch 0 (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,762] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 7 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,762] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-7 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 22 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-22 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 3 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-3 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 18 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-18 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 0 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-0 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 15 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-15 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 30 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-30 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 8 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-8 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 19 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-19 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 34 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-34 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 31 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-31 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 46 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-46 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 12 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-12 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 27 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-27 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 42 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-42 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 24 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-24 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 39 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-39 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 20 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-20 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 32 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-32 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 43 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-43 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 6 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,763] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-6 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,763] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 36 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,764] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-36 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,764] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 48 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,764] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-48 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,764] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 44 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,764] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-44 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,764] INFO [TransactionCoordinator id=1] Resigned as the txn coordinator for partition 10 at epoch Some(0) (kafka.coordinator.transaction.TransactionCoordinator)
[2022-10-04 16:35:43,764] INFO [Transaction State Manager 1]: No cached transaction metadata found for __transaction_state-10 during become-follower transition (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,764] INFO [Broker id=1] Finished LeaderAndIsr request in 144ms correlationId 8 from controller 1 for 38 partitions (state.change.logger)
[2022-10-04 16:35:43,765] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=chHt1jyvThK3HHFupH1biw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 8 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:43,766] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-5 in 5 milliseconds, of which 1 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=42, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=13, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=46, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=34, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=38, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=9, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=26, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=30, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=1, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=18, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=22, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=12, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=45, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=16, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=49, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=4, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=37, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=8, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __transaction_state-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=33, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=21, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __transaction_state-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,767] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=25, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __transaction_state-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=11, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=44, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=15, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=48, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=3, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=36, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=7, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=40, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=28, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __transaction_state-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=32, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=20, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __transaction_state-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=24, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __transaction_state-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=10, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __transaction_state-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=43, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=14, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=47, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=2, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __transaction_state-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=35, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=6, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __transaction_state-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=39, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=27, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __transaction_state-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=31, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=19, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __transaction_state-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__transaction_state', partitionIndex=23, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __transaction_state-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,768] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 9 (state.change.logger)
[2022-10-04 16:35:43,769] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 9 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:43,769] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-5 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,769] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-37 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,771] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-37 in 10 milliseconds, of which 8 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,771] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-37 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,771] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-1 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,772] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-1 in 11 milliseconds, of which 10 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,773] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-1 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,773] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-33 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,774] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-33 in 13 milliseconds, of which 12 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,774] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-33 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,774] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-13 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,775] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-13 in 14 milliseconds, of which 13 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,775] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-13 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,775] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-45 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,777] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-45 in 16 milliseconds, of which 14 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,777] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-45 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,777] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-9 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-27. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-43. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-15. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-31. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-3. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-19. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-7. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,777] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-39. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,779] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-9 in 17 milliseconds, of which 16 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,779] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-9 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,779] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-41 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-10. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-42. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-30. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-46. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-18. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-34. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-6. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __transaction_state-22. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:43,780] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-41 in 19 milliseconds, of which 18 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,780] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-41 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,780] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-21 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,782] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-21 in 21 milliseconds, of which 19 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,782] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-21 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,782] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-17 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,784] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-17 in 23 milliseconds, of which 21 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,784] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-17 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,784] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-49 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,785] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-49 in 24 milliseconds, of which 23 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,785] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-49 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,785] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-29 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,787] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-29 in 26 milliseconds, of which 24 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,787] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-29 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,787] INFO [Transaction State Manager 1]: Loading transaction metadata from __transaction_state-25 at epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,788] INFO [Transaction State Manager 1]: Finished loading 0 transaction metadata from __transaction_state-25 in 27 milliseconds, of which 26 milliseconds was spent in the scheduler. (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,788] INFO [Transaction State Manager 1]: Completed loading transaction metadata from __transaction_state-25 for coordinator epoch 0 (kafka.coordinator.transaction.TransactionStateManager)
[2022-10-04 16:35:43,810] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=chHt1jyvThK3HHFupH1biw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 5 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:43,814] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 6 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:43,832] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=chHt1jyvThK3HHFupH1biw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 6 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:43,836] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 7 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:43,909] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=chHt1jyvThK3HHFupH1biw, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 5 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:35:43,912] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 6 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:35:43,966] DEBUG [Controller id=1] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2022-10-04 16:35:43,969] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock{brokerId=3, producerIdStart=0, producerIdLen=1000} by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2022-10-04 16:35:44,025] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-12 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,025] INFO [UnifiedLog partition=__transaction_state-12, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-44 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-44, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-32 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-32, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-48 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-48, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-0 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-0, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-20 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-20, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-36 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-36, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-8 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-8, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,026] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __transaction_state-24 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,026] INFO [UnifiedLog partition=__transaction_state-24, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,055] INFO Creating topic __consumer_offsets with configuration {compression.type=producer, cleanup.policy=compact, segment.bytes=104857600} and initial partition assignment HashMap(0 -> ArrayBuffer(1, 4, 2), 1 -> ArrayBuffer(4, 2, 3), 2 -> ArrayBuffer(2, 3, 1), 3 -> ArrayBuffer(3, 1, 4), 4 -> ArrayBuffer(1, 2, 3), 5 -> ArrayBuffer(4, 3, 1), 6 -> ArrayBuffer(2, 1, 4), 7 -> ArrayBuffer(3, 4, 2), 8 -> ArrayBuffer(1, 3, 4), 9 -> ArrayBuffer(4, 1, 2), 10 -> ArrayBuffer(2, 4, 3), 11 -> ArrayBuffer(3, 2, 1), 12 -> ArrayBuffer(1, 4, 2), 13 -> ArrayBuffer(4, 2, 3), 14 -> ArrayBuffer(2, 3, 1), 15 -> ArrayBuffer(3, 1, 4), 16 -> ArrayBuffer(1, 2, 3), 17 -> ArrayBuffer(4, 3, 1), 18 -> ArrayBuffer(2, 1, 4), 19 -> ArrayBuffer(3, 4, 2), 20 -> ArrayBuffer(1, 3, 4), 21 -> ArrayBuffer(4, 1, 2), 22 -> ArrayBuffer(2, 4, 3), 23 -> ArrayBuffer(3, 2, 1), 24 -> ArrayBuffer(1, 4, 2), 25 -> ArrayBuffer(4, 2, 3), 26 -> ArrayBuffer(2, 3, 1), 27 -> ArrayBuffer(3, 1, 4), 28 -> ArrayBuffer(1, 2, 3), 29 -> ArrayBuffer(4, 3, 1), 30 -> ArrayBuffer(2, 1, 4), 31 -> ArrayBuffer(3, 4, 2), 32 -> ArrayBuffer(1, 3, 4), 33 -> ArrayBuffer(4, 1, 2), 34 -> ArrayBuffer(2, 4, 3), 35 -> ArrayBuffer(3, 2, 1), 36 -> ArrayBuffer(1, 4, 2), 37 -> ArrayBuffer(4, 2, 3), 38 -> ArrayBuffer(2, 3, 1), 39 -> ArrayBuffer(3, 1, 4), 40 -> ArrayBuffer(1, 2, 3), 41 -> ArrayBuffer(4, 3, 1), 42 -> ArrayBuffer(2, 1, 4), 43 -> ArrayBuffer(3, 4, 2), 44 -> ArrayBuffer(1, 3, 4), 45 -> ArrayBuffer(4, 1, 2), 46 -> ArrayBuffer(2, 4, 3), 47 -> ArrayBuffer(3, 2, 1), 48 -> ArrayBuffer(1, 4, 2), 49 -> ArrayBuffer(4, 2, 3)) (kafka.zk.AdminZkClient)
[2022-10-04 16:35:44,061] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(mVsUxQazQyabZsi3p8BocQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=3,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=4,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=4,3,1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2,4,3, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1,3,4, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-10-04 16:35:44,062] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 3,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 2,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 3,1,4 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 1,4,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 4,1,2 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 4,2,3 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:44,062] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2022-10-04 16:35:44,063] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 4,3,1 (state.change.logger)
[2022-10-04 16:35:44,063] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:44,063] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 2,4,3 (state.change.logger)
[2022-10-04 16:35:44,063] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 1,3,4 (state.change.logger)
[2022-10-04 16:35:44,063] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2022-10-04 16:35:44,063] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,063] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-23 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-14 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-26 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-40 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-4 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-38 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-2 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-16 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-35 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-47 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-11 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-28 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-22 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-20 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-7 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-41 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-42 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-48 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-18 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-24 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-49 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-19 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-44 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-43 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-39 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-3 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-6 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-25 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-8 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-46 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-21 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-15 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-1 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,064] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-31 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-37 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-27 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-12 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-5 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-13 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-10 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-17 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-45 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-29 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-36 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-34 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-30 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-9 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-32 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-33 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-0 from NonExistentReplica to NewReplica (state.change.logger)
[2022-10-04 16:35:44,065] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 2, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 4, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 1, 2), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=4, leaderEpoch=0, isr=List(4, 3, 1), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 4, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 3, 4), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2, 3), zkVersion=0) (state.change.logger)
[2022-10-04 16:35:44,108] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-15 (state.change.logger)
[2022-10-04 16:35:44,108] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:35:44,108] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-11 (state.change.logger)
[2022-10-04 16:35:44,108] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:35:44,108] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-9 (state.change.logger)
[2022-10-04 16:35:44,108] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-42 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-23 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-21 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-17 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-30 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-26 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-5 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-38 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-3 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-47 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-45 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-14 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-41 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-18 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-29 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-27 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-39 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-6 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-35 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-33 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 1 for partition __consumer_offsets-2 (state.change.logger)
[2022-10-04 16:35:44,109] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 13 become-leader and 24 become-follower partitions (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-13 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-46 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-11 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-9 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-42 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-23 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-21 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-19 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-30 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-26 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-7 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-38 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-1 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-34 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-47 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-45 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-14 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-43 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-10 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:35:44,109] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-22 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-49 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-18 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-31 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-25 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-37 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-6 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-35 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-33 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 2 for partition __consumer_offsets-2 (state.change.logger)
[2022-10-04 16:35:44,110] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 12 become-leader and 26 become-follower partitions (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-15 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-13 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-46 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-11 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-23 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-19 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-17 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-26 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-7 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-5 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-38 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-3 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-1 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-34 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-47 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-14 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-43 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-41 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-10 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-22 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-49 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-31 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-29 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-27 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-25 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-39 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-37 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-35 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:35:44,110] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 3 for partition __consumer_offsets-2 (state.change.logger)
[2022-10-04 16:35:44,110] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 12 become-leader and 25 become-follower partitions (state.change.logger)
[2022-10-04 16:35:44,111] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 for 37 partitions (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-15 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-13 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-46 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-9 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-42 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-21 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-19 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-17 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:35:44,111] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-30 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-7 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-5 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-3 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-34 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-45 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-43 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-41 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-10 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-22 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-49 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-18 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-31 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-29 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-27 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-25 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,112] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-39 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-37 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Controller id=1 epoch=1] Sending become-follower LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-6 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Controller id=1 epoch=1] Sending become-leader LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) to broker 4 for partition __consumer_offsets-33 (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,113] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 4 with 13 become-leader and 25 become-follower partitions (state.change.logger)
[2022-10-04 16:35:44,113] TRACE [Broker id=1] Received LeaderAndIsr request LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], addingReplicas=[], removingReplicas=[], isNew=true) correlation id 10 from controller 1 epoch 1 (state.change.logger)
[2022-10-04 16:35:44,113] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3, 4) for 50 partitions (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 1 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,114] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 2 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-23 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-14 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-26 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-40 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-4 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-38 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-2 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-16 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-35 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-47 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-11 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-28 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 3 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-22 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-20 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-7 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-41 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-42 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-48 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-18 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-24 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-49 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-19 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-44 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-43 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-39 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-3 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-6 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-25 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-8 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-46 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-21 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-15 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-1 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-31 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-37 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-27 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-12 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-5 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-13 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-10 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-17 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-45 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-29 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-36 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-34 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-30 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-9 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-32 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-33 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] TRACE [Controller id=1 epoch=1] Changed state of replica 4 for partition __consumer_offsets-0 from NewReplica to OnlineReplica (state.change.logger)
[2022-10-04 16:35:44,115] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2022-10-04 16:35:44,125] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:35:44,125] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:35:44,125] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:35:44,125] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:35:44,125] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:35:44,126] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:35:44,126] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-36, __consumer_offsets-24, __consumer_offsets-48, __consumer_offsets-12, __consumer_offsets-8, __consumer_offsets-4, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:44,126] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 10 from controller 1 epoch 1 as part of the become-leader transition for 13 partitions (state.change.logger)
[2022-10-04 16:35:44,129] INFO [LogLoader partition=__consumer_offsets-20, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,130] INFO Created log for partition __consumer_offsets-20 in /var/lib/kafka/data/__consumer_offsets-20 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,130] INFO [Partition __consumer_offsets-20 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
[2022-10-04 16:35:44,130] INFO [Partition __consumer_offsets-20 broker=1] Log loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,130] INFO [Broker id=1] Leader __consumer_offsets-20 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,133] INFO [LogLoader partition=__consumer_offsets-24, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,133] INFO Created log for partition __consumer_offsets-24 in /var/lib/kafka/data/__consumer_offsets-24 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,133] INFO [Partition __consumer_offsets-24 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
[2022-10-04 16:35:44,133] INFO [Partition __consumer_offsets-24 broker=1] Log loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,133] INFO [Broker id=1] Leader __consumer_offsets-24 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,136] INFO [LogLoader partition=__consumer_offsets-12, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,136] INFO Created log for partition __consumer_offsets-12 in /var/lib/kafka/data/__consumer_offsets-12 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,136] INFO [Partition __consumer_offsets-12 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
[2022-10-04 16:35:44,136] INFO [Partition __consumer_offsets-12 broker=1] Log loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,136] INFO [Broker id=1] Leader __consumer_offsets-12 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,138] INFO [LogLoader partition=__consumer_offsets-44, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,138] INFO Created log for partition __consumer_offsets-44 in /var/lib/kafka/data/__consumer_offsets-44 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,138] INFO [Partition __consumer_offsets-44 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
[2022-10-04 16:35:44,138] INFO [Partition __consumer_offsets-44 broker=1] Log loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,138] INFO [Broker id=1] Leader __consumer_offsets-44 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,141] INFO [LogLoader partition=__consumer_offsets-48, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,141] INFO Created log for partition __consumer_offsets-48 in /var/lib/kafka/data/__consumer_offsets-48 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,142] INFO [Partition __consumer_offsets-48 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
[2022-10-04 16:35:44,142] INFO [Partition __consumer_offsets-48 broker=1] Log loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,142] INFO [Broker id=1] Leader __consumer_offsets-48 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,144] INFO [LogLoader partition=__consumer_offsets-16, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,145] INFO Created log for partition __consumer_offsets-16 in /var/lib/kafka/data/__consumer_offsets-16 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,145] INFO [Partition __consumer_offsets-16 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
[2022-10-04 16:35:44,145] INFO [Partition __consumer_offsets-16 broker=1] Log loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,145] INFO [Broker id=1] Leader __consumer_offsets-16 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,147] INFO [LogLoader partition=__consumer_offsets-4, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,148] INFO Created log for partition __consumer_offsets-4 in /var/lib/kafka/data/__consumer_offsets-4 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,148] INFO [Partition __consumer_offsets-4 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
[2022-10-04 16:35:44,148] INFO [Partition __consumer_offsets-4 broker=1] Log loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,148] INFO [Broker id=1] Leader __consumer_offsets-4 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,150] INFO [LogLoader partition=__consumer_offsets-36, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,151] INFO Created log for partition __consumer_offsets-36 in /var/lib/kafka/data/__consumer_offsets-36 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,151] INFO [Partition __consumer_offsets-36 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
[2022-10-04 16:35:44,151] INFO [Partition __consumer_offsets-36 broker=1] Log loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,151] INFO [Broker id=1] Leader __consumer_offsets-36 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,153] INFO [LogLoader partition=__consumer_offsets-8, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,154] INFO Created log for partition __consumer_offsets-8 in /var/lib/kafka/data/__consumer_offsets-8 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,154] INFO [Partition __consumer_offsets-8 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
[2022-10-04 16:35:44,154] INFO [Partition __consumer_offsets-8 broker=1] Log loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,154] INFO [Broker id=1] Leader __consumer_offsets-8 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,156] INFO [LogLoader partition=__consumer_offsets-40, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,157] INFO Created log for partition __consumer_offsets-40 in /var/lib/kafka/data/__consumer_offsets-40 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,157] INFO [Partition __consumer_offsets-40 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
[2022-10-04 16:35:44,157] INFO [Partition __consumer_offsets-40 broker=1] Log loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,157] INFO [Broker id=1] Leader __consumer_offsets-40 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,159] INFO [LogLoader partition=__consumer_offsets-28, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,160] INFO Created log for partition __consumer_offsets-28 in /var/lib/kafka/data/__consumer_offsets-28 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,160] INFO [Partition __consumer_offsets-28 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
[2022-10-04 16:35:44,160] INFO [Partition __consumer_offsets-28 broker=1] Log loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,160] INFO [Broker id=1] Leader __consumer_offsets-28 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,2,3] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,162] INFO [LogLoader partition=__consumer_offsets-0, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,162] INFO Created log for partition __consumer_offsets-0 in /var/lib/kafka/data/__consumer_offsets-0 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,163] INFO [Partition __consumer_offsets-0 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,163] INFO [Partition __consumer_offsets-0 broker=1] Log loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,163] INFO [Broker id=1] Leader __consumer_offsets-0 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,4,2] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,165] INFO [LogLoader partition=__consumer_offsets-32, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,165] INFO Created log for partition __consumer_offsets-32 in /var/lib/kafka/data/__consumer_offsets-32 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,165] INFO [Partition __consumer_offsets-32 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
[2022-10-04 16:35:44,165] INFO [Partition __consumer_offsets-32 broker=1] Log loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,165] INFO [Broker id=1] Leader __consumer_offsets-32 starts at leader epoch 0 from offset 0 with high watermark 0 ISR [1,3,4] addingReplicas [] removingReplicas []. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-20 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-24 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-12 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-44 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-48 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-16 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-36 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-8 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-40 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-28 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-0 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-leader transition for partition __consumer_offsets-32 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-3 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-18 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-41 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-29 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-14 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-33 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-23 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-38 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-11 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-26 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-45 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-15 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-30 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-35 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-5 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-39 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-9 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-27 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-42 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-2 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-21 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-6 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-47 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,166] TRACE [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 epoch 1 starting the become-follower transition for partition __consumer_offsets-17 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,168] INFO [LogLoader partition=__consumer_offsets-3, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,168] INFO Created log for partition __consumer_offsets-3 in /var/lib/kafka/data/__consumer_offsets-3 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,168] INFO [Partition __consumer_offsets-3 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition)
[2022-10-04 16:35:44,168] INFO [Partition __consumer_offsets-3 broker=1] Log loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,168] INFO [Broker id=1] Follower __consumer_offsets-3 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,170] INFO [LogLoader partition=__consumer_offsets-18, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,170] INFO Created log for partition __consumer_offsets-18 in /var/lib/kafka/data/__consumer_offsets-18 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,170] INFO [Partition __consumer_offsets-18 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition)
[2022-10-04 16:35:44,170] INFO [Partition __consumer_offsets-18 broker=1] Log loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,170] INFO [Broker id=1] Follower __consumer_offsets-18 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,172] INFO [LogLoader partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,173] INFO Created log for partition __consumer_offsets-41 in /var/lib/kafka/data/__consumer_offsets-41 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,173] INFO [Partition __consumer_offsets-41 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
[2022-10-04 16:35:44,173] INFO [Partition __consumer_offsets-41 broker=1] Log loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,173] INFO [Broker id=1] Follower __consumer_offsets-41 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,174] INFO [LogLoader partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,175] INFO Created log for partition __consumer_offsets-29 in /var/lib/kafka/data/__consumer_offsets-29 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,175] INFO [Partition __consumer_offsets-29 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
[2022-10-04 16:35:44,175] INFO [Partition __consumer_offsets-29 broker=1] Log loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,175] INFO [Broker id=1] Follower __consumer_offsets-29 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,176] INFO [LogLoader partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,177] INFO Created log for partition __consumer_offsets-14 in /var/lib/kafka/data/__consumer_offsets-14 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,177] INFO [Partition __consumer_offsets-14 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
[2022-10-04 16:35:44,177] INFO [Partition __consumer_offsets-14 broker=1] Log loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,177] INFO [Broker id=1] Follower __consumer_offsets-14 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,179] INFO [LogLoader partition=__consumer_offsets-33, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,179] INFO Created log for partition __consumer_offsets-33 in /var/lib/kafka/data/__consumer_offsets-33 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,179] INFO [Partition __consumer_offsets-33 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition)
[2022-10-04 16:35:44,179] INFO [Partition __consumer_offsets-33 broker=1] Log loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,179] INFO [Broker id=1] Follower __consumer_offsets-33 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,181] INFO [LogLoader partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,181] INFO Created log for partition __consumer_offsets-23 in /var/lib/kafka/data/__consumer_offsets-23 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,182] INFO [Partition __consumer_offsets-23 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
[2022-10-04 16:35:44,182] INFO [Partition __consumer_offsets-23 broker=1] Log loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,182] INFO [Broker id=1] Follower __consumer_offsets-23 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,183] INFO [LogLoader partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,184] INFO Created log for partition __consumer_offsets-38 in /var/lib/kafka/data/__consumer_offsets-38 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,184] INFO [Partition __consumer_offsets-38 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
[2022-10-04 16:35:44,184] INFO [Partition __consumer_offsets-38 broker=1] Log loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,184] INFO [Broker id=1] Follower __consumer_offsets-38 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,185] INFO [LogLoader partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,186] INFO Created log for partition __consumer_offsets-11 in /var/lib/kafka/data/__consumer_offsets-11 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,186] INFO [Partition __consumer_offsets-11 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
[2022-10-04 16:35:44,186] INFO [Partition __consumer_offsets-11 broker=1] Log loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,186] INFO [Broker id=1] Follower __consumer_offsets-11 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,187] INFO [LogLoader partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,188] INFO Created log for partition __consumer_offsets-26 in /var/lib/kafka/data/__consumer_offsets-26 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,188] INFO [Partition __consumer_offsets-26 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
[2022-10-04 16:35:44,188] INFO [Partition __consumer_offsets-26 broker=1] Log loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,188] INFO [Broker id=1] Follower __consumer_offsets-26 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,190] INFO [LogLoader partition=__consumer_offsets-45, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,190] INFO Created log for partition __consumer_offsets-45 in /var/lib/kafka/data/__consumer_offsets-45 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,190] INFO [Partition __consumer_offsets-45 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition)
[2022-10-04 16:35:44,190] INFO [Partition __consumer_offsets-45 broker=1] Log loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,190] INFO [Broker id=1] Follower __consumer_offsets-45 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,192] INFO [LogLoader partition=__consumer_offsets-15, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,193] INFO Created log for partition __consumer_offsets-15 in /var/lib/kafka/data/__consumer_offsets-15 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,193] INFO [Partition __consumer_offsets-15 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition)
[2022-10-04 16:35:44,193] INFO [Partition __consumer_offsets-15 broker=1] Log loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,193] INFO [Broker id=1] Follower __consumer_offsets-15 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,194] INFO [LogLoader partition=__consumer_offsets-30, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,195] INFO Created log for partition __consumer_offsets-30 in /var/lib/kafka/data/__consumer_offsets-30 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,195] INFO [Partition __consumer_offsets-30 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition)
[2022-10-04 16:35:44,195] INFO [Partition __consumer_offsets-30 broker=1] Log loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,195] INFO [Broker id=1] Follower __consumer_offsets-30 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,197] INFO [LogLoader partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,197] INFO Created log for partition __consumer_offsets-35 in /var/lib/kafka/data/__consumer_offsets-35 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,197] INFO [Partition __consumer_offsets-35 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
[2022-10-04 16:35:44,197] INFO [Partition __consumer_offsets-35 broker=1] Log loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,197] INFO [Broker id=1] Follower __consumer_offsets-35 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,199] INFO [LogLoader partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,200] INFO Created log for partition __consumer_offsets-5 in /var/lib/kafka/data/__consumer_offsets-5 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,200] INFO [Partition __consumer_offsets-5 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
[2022-10-04 16:35:44,200] INFO [Partition __consumer_offsets-5 broker=1] Log loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,200] INFO [Broker id=1] Follower __consumer_offsets-5 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,201] INFO [LogLoader partition=__consumer_offsets-39, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,202] INFO Created log for partition __consumer_offsets-39 in /var/lib/kafka/data/__consumer_offsets-39 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,202] INFO [Partition __consumer_offsets-39 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition)
[2022-10-04 16:35:44,202] INFO [Partition __consumer_offsets-39 broker=1] Log loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,202] INFO [Broker id=1] Follower __consumer_offsets-39 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,204] INFO [LogLoader partition=__consumer_offsets-9, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,204] INFO Created log for partition __consumer_offsets-9 in /var/lib/kafka/data/__consumer_offsets-9 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,204] INFO [Partition __consumer_offsets-9 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition)
[2022-10-04 16:35:44,204] INFO [Partition __consumer_offsets-9 broker=1] Log loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,204] INFO [Broker id=1] Follower __consumer_offsets-9 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,206] INFO [LogLoader partition=__consumer_offsets-27, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,206] INFO Created log for partition __consumer_offsets-27 in /var/lib/kafka/data/__consumer_offsets-27 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,206] INFO [Partition __consumer_offsets-27 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition)
[2022-10-04 16:35:44,206] INFO [Partition __consumer_offsets-27 broker=1] Log loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,206] INFO [Broker id=1] Follower __consumer_offsets-27 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,208] INFO [LogLoader partition=__consumer_offsets-42, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,209] INFO Created log for partition __consumer_offsets-42 in /var/lib/kafka/data/__consumer_offsets-42 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,209] INFO [Partition __consumer_offsets-42 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition)
[2022-10-04 16:35:44,209] INFO [Partition __consumer_offsets-42 broker=1] Log loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,209] INFO [Broker id=1] Follower __consumer_offsets-42 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,211] INFO [LogLoader partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,211] INFO Created log for partition __consumer_offsets-2 in /var/lib/kafka/data/__consumer_offsets-2 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,211] INFO [Partition __consumer_offsets-2 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
[2022-10-04 16:35:44,211] INFO [Partition __consumer_offsets-2 broker=1] Log loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,211] INFO [Broker id=1] Follower __consumer_offsets-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,240] INFO [LogLoader partition=__consumer_offsets-21, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,241] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=mVsUxQazQyabZsi3p8BocQ, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 7 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:44,241] INFO Created log for partition __consumer_offsets-21 in /var/lib/kafka/data/__consumer_offsets-21 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,241] INFO [Partition __consumer_offsets-21 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition)
[2022-10-04 16:35:44,241] INFO [Partition __consumer_offsets-21 broker=1] Log loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,241] INFO [Broker id=1] Follower __consumer_offsets-21 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,243] INFO [LogLoader partition=__consumer_offsets-6, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,244] INFO Created log for partition __consumer_offsets-6 in /var/lib/kafka/data/__consumer_offsets-6 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,244] INFO [Partition __consumer_offsets-6 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition)
[2022-10-04 16:35:44,244] INFO [Partition __consumer_offsets-6 broker=1] Log loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,244] INFO [Broker id=1] Follower __consumer_offsets-6 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,244] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 8 sent to broker 172.99.0.6:9092 (id: 3 rack: null) (state.change.logger)
[2022-10-04 16:35:44,246] INFO [LogLoader partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,246] INFO Created log for partition __consumer_offsets-47 in /var/lib/kafka/data/__consumer_offsets-47 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,246] INFO [Partition __consumer_offsets-47 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
[2022-10-04 16:35:44,246] INFO [Partition __consumer_offsets-47 broker=1] Log loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,246] INFO [Broker id=1] Follower __consumer_offsets-47 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,248] INFO [LogLoader partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
[2022-10-04 16:35:44,249] INFO Created log for partition __consumer_offsets-17 in /var/lib/kafka/data/__consumer_offsets-17 with properties {cleanup.policy=compact, compression.type="producer", segment.bytes=104857600} (kafka.log.LogManager)
[2022-10-04 16:35:44,249] INFO [Partition __consumer_offsets-17 broker=1] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
[2022-10-04 16:35:44,249] INFO [Partition __consumer_offsets-17 broker=1] Log loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Partition)
[2022-10-04 16:35:44,249] INFO [Broker id=1] Follower __consumer_offsets-17 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (state.change.logger)
[2022-10-04 16:35:44,249] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(__consumer_offsets-15, __consumer_offsets-11, __consumer_offsets-9, __consumer_offsets-42, __consumer_offsets-23, __consumer_offsets-21, __consumer_offsets-17, __consumer_offsets-30, __consumer_offsets-26, __consumer_offsets-5, __consumer_offsets-38, __consumer_offsets-3, __consumer_offsets-47, __consumer_offsets-45, __consumer_offsets-14, __consumer_offsets-41, __consumer_offsets-18, __consumer_offsets-29, __consumer_offsets-27, __consumer_offsets-39, __consumer_offsets-6, __consumer_offsets-35, __consumer_offsets-33, __consumer_offsets-2) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:44,249] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 10 for 24 partitions (state.change.logger)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 3 for partitions HashMap(__consumer_offsets-27 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-35 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-23 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-47 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-3 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-15 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-11 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0), __consumer_offsets-39 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=3, host=172.99.0.6:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-29 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 4 for partitions HashMap(__consumer_offsets-21 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-9 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-17 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-29 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-41 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-33 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-45 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0), __consumer_offsets-5 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=4, host=172.99.0.3:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:44,251] INFO [UnifiedLog partition=__consumer_offsets-29, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-45 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,251] INFO [UnifiedLog partition=__consumer_offsets-45, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-41 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-30 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,251] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 2 for partitions HashMap(__consumer_offsets-30 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-38 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-26 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-42 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-18 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-2 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-6 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0), __consumer_offsets-14 -> InitialFetchState(Some(mVsUxQazQyabZsi3p8BocQ),BrokerEndPoint(id=2, host=172.99.0.5:9092),0,0)) (kafka.server.ReplicaFetcherManager)
[2022-10-04 16:35:44,251] INFO [UnifiedLog partition=__consumer_offsets-41, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-30, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-9 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-3 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-18 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-14 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-9, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-41 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-14, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-21 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-29 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-42 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-21, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-14 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-42, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-5 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-33 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-23 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-5, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-26 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-38 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-33 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-26, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-11 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-33, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-26 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-38 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-45 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-15 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Truncating partition __consumer_offsets-17 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-30 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-35 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-5 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-17, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-39 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,252] INFO [UnifiedLog partition=__consumer_offsets-38, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,252] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-9 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-27 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-42 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,253] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-6 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-2 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-21 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,253] INFO [UnifiedLog partition=__consumer_offsets-6, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-6 with leader 2 (state.change.logger)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-47 with leader 3 (state.change.logger)
[2022-10-04 16:35:44,253] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-18 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,253] TRACE [Broker id=1] Completed LeaderAndIsr request correlationId 10 from controller 1 epoch 1 for the become-follower transition for partition __consumer_offsets-17 with leader 4 (state.change.logger)
[2022-10-04 16:35:44,253] INFO [UnifiedLog partition=__consumer_offsets-18, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,253] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition __consumer_offsets-2 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,253] INFO [UnifiedLog partition=__consumer_offsets-2, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,254] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 20 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,254] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=mVsUxQazQyabZsi3p8BocQ, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 7 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:35:44,254] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-45. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,254] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-41. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,254] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-9. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,254] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-21. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-17. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-29. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-5. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=4, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-33. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-20 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-14. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-42. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-18. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-30. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-26. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-38. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-6. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,255] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Received UNKNOWN_TOPIC_ID from the leader for partition __consumer_offsets-2. This error may be returned transiently when the partition is being created or deleted, but it is not expected to persist. (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 24 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-24 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 12 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-12 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 44 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-44 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 48 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-48 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 16 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-16 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 4 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-4 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 36 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-36 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 8 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-8 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 40 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-40 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 28 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-28 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 0 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-0 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Elected as the group coordinator for partition 32 in epoch 0 (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,256] INFO [GroupMetadataManager brokerId=1] Scheduling loading of offsets and group metadata from __consumer_offsets-32 for epoch 0 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,256] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 3 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 18 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 41 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 29 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 14 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 33 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 23 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 38 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 11 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 26 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 45 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 15 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 30 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 35 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 5 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 39 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 9 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 27 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 42 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,257] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 2 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,257] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,258] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 21 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,258] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,258] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 6 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,258] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,258] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 47 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,258] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,258] INFO [GroupCoordinator 1]: Resigned as the group coordinator for partition 17 in epoch Some(0) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,258] INFO [GroupMetadataManager brokerId=1] Scheduling unloading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,258] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 8 sent to broker 172.99.0.3:9092 (id: 4 rack: null) (state.change.logger)
[2022-10-04 16:35:44,258] INFO [Broker id=1] Finished LeaderAndIsr request in 147ms correlationId 10 from controller 1 for 37 partitions (state.change.logger)
[2022-10-04 16:35:44,258] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=mVsUxQazQyabZsi3p8BocQ, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=15, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=44, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=17, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=32, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=5, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=3, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=41, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=20, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=29, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=27, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=39, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=8, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 10 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:44,259] TRACE [Controller id=1 epoch=1] Received response LeaderAndIsrResponseData(errorCode=0, partitionErrors=[], topics=[LeaderAndIsrTopicError(topicId=mVsUxQazQyabZsi3p8BocQ, partitionErrors=[LeaderAndIsrPartitionError(topicName='', partitionIndex=48, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=13, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=46, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=11, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=9, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=42, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=23, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=21, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=19, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=30, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=28, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=26, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=7, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=40, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=38, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=36, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=1, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=34, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=47, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=16, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=45, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=14, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=43, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=12, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=10, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=24, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=22, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=49, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=18, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=31, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=0, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=25, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=37, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=6, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=35, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=4, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=33, errorCode=0), LeaderAndIsrPartitionError(topicName='', partitionIndex=2, errorCode=0)])]) for request LEADER_AND_ISR with correlation id 8 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-13 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-46 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-9 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-42 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-21 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-17 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-30 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-26 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-5 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-38 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-1 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-34 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-16 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-45 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-12 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-41 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-24 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-20 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-49 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-0 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 3, 1], zkVersion=0, replicas=[4, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-29 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-25 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-8 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 2, 3], zkVersion=0, replicas=[4, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-37 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-4 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=4, leaderEpoch=0, isr=[4, 1, 2], zkVersion=0, replicas=[4, 1, 2], offlineReplicas=[]) for partition __consumer_offsets-33 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-15 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-48 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,260] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-11 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-44 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-23 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-19 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 3, 4], zkVersion=0, replicas=[1, 3, 4], offlineReplicas=[]) for partition __consumer_offsets-32 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-28 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-7 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 2, 3], zkVersion=0, replicas=[1, 2, 3], offlineReplicas=[]) for partition __consumer_offsets-40 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-3 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 4, 2], zkVersion=0, replicas=[1, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-36 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-47 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-14 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-43 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-10 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 4, 3], zkVersion=0, replicas=[2, 4, 3], offlineReplicas=[]) for partition __consumer_offsets-22 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-18 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 4, 2], zkVersion=0, replicas=[3, 4, 2], offlineReplicas=[]) for partition __consumer_offsets-31 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-27 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1, 4], zkVersion=0, replicas=[3, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-39 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 1, 4], zkVersion=0, replicas=[2, 1, 4], offlineReplicas=[]) for partition __consumer_offsets-6 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 2, 1], zkVersion=0, replicas=[3, 2, 1], offlineReplicas=[]) for partition __consumer_offsets-35 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] TRACE [Broker id=1] Cached leader info UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3, 1], zkVersion=0, replicas=[2, 3, 1], offlineReplicas=[]) for partition __consumer_offsets-2 in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 11 (state.change.logger)
[2022-10-04 16:35:44,261] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-20 in 5 milliseconds for epoch 0, of which 2 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,261] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 11 sent to broker 172.99.0.4:9092 (id: 1 rack: null) (state.change.logger)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-24 in 6 milliseconds for epoch 0, of which 5 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-12 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-44 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-48 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-16 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-4 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-36 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-8 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-40 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,262] TRACE [Controller id=1 epoch=1] Received response UpdateMetadataResponseData(errorCode=0) for request UPDATE_METADATA with correlation id 9 sent to broker 172.99.0.5:9092 (id: 2 rack: null) (state.change.logger)
[2022-10-04 16:35:44,262] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-28 in 6 milliseconds for epoch 0, of which 6 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,263] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-0 in 7 milliseconds for epoch 0, of which 7 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,263] INFO [GroupMetadataManager brokerId=1] Finished loading offsets and group metadata from __consumer_offsets-32 in 7 milliseconds for epoch 0, of which 7 milliseconds was spent in the scheduler. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-3 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-18 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-41 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-29 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-14 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-33 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-23 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-38 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-11 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-26 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-45 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-15 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-30 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-35 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-5 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-39 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-9 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-27 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-42 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-2 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-21 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,264] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-6 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,265] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-47 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,265] INFO [GroupMetadataManager brokerId=1] Finished unloading __consumer_offsets-17 for coordinator epoch Some(0). Removed 0 cached offsets and 0 cached groups. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:44,292] INFO [GroupCoordinator 1]: Dynamic member with unknown member id joins group bench in Empty state. Created a new member id consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 and request the member to rejoin with this id. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,300] INFO [GroupCoordinator 1]: Preparing to rebalance group bench in state PreparingRebalance with old generation 0 (__consumer_offsets-32) (reason: Adding new member consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 with group instance id None) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:44,328] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-15 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,328] INFO [UnifiedLog partition=__consumer_offsets-15, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,328] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-47 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,328] INFO [UnifiedLog partition=__consumer_offsets-47, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,328] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-27 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,328] INFO [UnifiedLog partition=__consumer_offsets-27, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,328] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-11 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,328] INFO [UnifiedLog partition=__consumer_offsets-11, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,328] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-39 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,328] INFO [UnifiedLog partition=__consumer_offsets-39, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,328] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-23 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,329] INFO [UnifiedLog partition=__consumer_offsets-23, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,329] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-35 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,329] INFO [UnifiedLog partition=__consumer_offsets-35, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:44,329] INFO [ReplicaFetcher replicaId=1, leaderId=3, fetcherId=0] Truncating partition __consumer_offsets-3 with TruncationState(offset=0, completed=true) due to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2022-10-04 16:35:44,329] INFO [UnifiedLog partition=__consumer_offsets-3, dir=/var/lib/kafka/data] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.UnifiedLog)
[2022-10-04 16:35:47,307] INFO [GroupCoordinator 1]: Stabilized group bench generation 1 (__consumer_offsets-32) with 1 members (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:47,317] INFO [GroupCoordinator 1]: Assignment received from leader consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 for group bench for generation 1. The group has 1 members, 0 of which are static. (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:35:52,363] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:52,475] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:52,586] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:52,697] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:52,806] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:52,916] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,026] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,134] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,245] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,355] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,466] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,575] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,686] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:53,907] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,016] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,127] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,234] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,344] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,456] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,564] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,675] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,786] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:54,896] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,006] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,116] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,227] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,334] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,444] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,555] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,664] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,775] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,885] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:55,996] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,106] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,215] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,326] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,434] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,540] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,650] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,755] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,865] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:56,975] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,085] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,196] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,305] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,411] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,520] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,628] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,739] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,849] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:57,954] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,065] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,171] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,280] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,386] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,495] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,605] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,714] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,820] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:58,928] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,038] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,143] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,249] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,354] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,460] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,569] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,674] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,784] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,890] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:35:59,999] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,105] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,215] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,321] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,429] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,538] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,644] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,754] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,859] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:00,969] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,075] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,184] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,290] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,400] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,510] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,620] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,729] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,838] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:01,944] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,048] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,154] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,264] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,369] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,479] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,584] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,694] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,799] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:02,909] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,015] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,125] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,233] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,339] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,449] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,554] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,664] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,769] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,873] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:03,979] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,089] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,194] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,304] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,410] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,520] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,629] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,738] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,844] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:04,948] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,054] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,163] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,269] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,379] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,484] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,594] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,699] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,809] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:05,925] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,033] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,137] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,243] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,459] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,569] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,674] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,783] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,889] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:06,995] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,104] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,210] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,319] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,428] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,533] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,638] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,744] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,853] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:07,959] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,063] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,169] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,275] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,384] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,490] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,599] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,704] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,814] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:08,920] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,028] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,138] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,244] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,454] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,559] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,664] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,769] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,874] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:09,979] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,089] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,194] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,300] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,409] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,514] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,620] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,728] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,837] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:10,946] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,053] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,159] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,269] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,374] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,479] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,584] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,689] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,794] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:11,903] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,009] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,114] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,224] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,333] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,439] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,543] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,648] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,754] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,863] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:12,969] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,074] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,183] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,289] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,394] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,503] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,609] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,714] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,820] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:13,928] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,033] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,137] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,243] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,453] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,558] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,664] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,769] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,879] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:14,984] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,089] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,198] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,304] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,410] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,519] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,624] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,733] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,838] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:15,943] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,048] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,153] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,258] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,364] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,468] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,573] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,679] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,783] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,888] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:16,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,099] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,204] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,309] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,414] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,519] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,628] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,738] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,843] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:17,947] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,053] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,158] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,262] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,368] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,473] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,579] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,688] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:18,904] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,008] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,114] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,219] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,327] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,438] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,543] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,647] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,753] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,858] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:19,963] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,068] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,173] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,279] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,383] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,489] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,594] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,703] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,809] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:20,914] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,019] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,123] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,227] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,337] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,443] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,549] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,658] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,763] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,869] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:21,978] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,084] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,189] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,299] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,404] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,619] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,724] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,832] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:22,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,043] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,358] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,462] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,673] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,779] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,888] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:23,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,099] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,204] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,313] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,419] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,524] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,632] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,737] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,843] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:24,948] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,052] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,158] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,263] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,368] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,473] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,578] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,684] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,788] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,894] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:25,999] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,104] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,213] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,318] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,424] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,532] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,638] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,743] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,852] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:26,958] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,063] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,168] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,273] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,378] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,484] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,593] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,698] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,803] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:27,909] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,019] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,124] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,232] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,337] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,443] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,547] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,653] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,758] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,864] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:28,973] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,078] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,183] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,289] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,398] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,504] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,609] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,718] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,823] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:29,927] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,037] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,143] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,248] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,353] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,458] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,563] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,669] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,773] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,878] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:30,984] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,088] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,193] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,299] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,404] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,509] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,614] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,719] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,823] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:31,927] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,037] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,143] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,248] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,352] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,457] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,563] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,668] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,773] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,878] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:32,984] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,088] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,193] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,299] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,404] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,508] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,613] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,719] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,824] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:33,932] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,038] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,143] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,247] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,353] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,458] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,563] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,667] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,773] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,879] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:34,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,094] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,198] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,304] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,408] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,619] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,724] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,832] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:35,938] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,043] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,253] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,358] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,462] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,673] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,778] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,883] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:36,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,093] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,199] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,304] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,409] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,514] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,619] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,723] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,832] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:37,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,042] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,358] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,463] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,569] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,673] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,779] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,888] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:38,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,099] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,203] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,308] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,413] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,519] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,623] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,727] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,832] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:39,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,043] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,253] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,463] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,672] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,778] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,883] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:40,989] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,098] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,203] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,309] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,414] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,524] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,632] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,738] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,842] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:41,947] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,053] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,158] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,263] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,368] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,473] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,578] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,683] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,788] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,894] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:42,998] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,103] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,208] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,313] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,418] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,524] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,632] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,737] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,842] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:43,948] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,052] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,157] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,263] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,368] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,472] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,578] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,683] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,788] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,893] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:44,998] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,104] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,209] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,313] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,419] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,524] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,632] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,737] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,843] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:45,947] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,052] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,158] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,263] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,367] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,473] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,578] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,683] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,787] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,893] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:46,999] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,104] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,208] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,313] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,418] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,523] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,627] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,732] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,837] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:47,942] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,048] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,152] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,257] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,363] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,468] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,572] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,678] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,783] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,888] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:48,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,098] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,203] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,309] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,413] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,518] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,624] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,728] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,837] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:49,942] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,048] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,152] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,257] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,363] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,468] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,572] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,677] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,783] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,889] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:50,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,098] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,203] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,308] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,413] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,519] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,624] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,731] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,837] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:51,942] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,047] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,153] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,257] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,362] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,468] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,573] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,678] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,783] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,888] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:52,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,098] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,203] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,308] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,413] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,518] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,623] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,727] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,832] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:53,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,042] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,253] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,462] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,673] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,777] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,882] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:54,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,093] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,198] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,303] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,408] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,618] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,723] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,832] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:55,938] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,043] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,358] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,462] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,567] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,673] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,778] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,883] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:56,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,093] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,198] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,303] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,408] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,618] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,724] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,831] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:57,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,042] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,463] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,672] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,778] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,883] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:58,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,093] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,198] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,303] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,408] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,618] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,723] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,831] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:36:59,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,042] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,148] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,463] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,673] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,778] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,882] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:00,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,093] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,199] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,303] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,408] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,618] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,724] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,831] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:01,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,042] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,463] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,568] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,672] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,778] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,883] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:02,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,092] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,198] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,303] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,408] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,514] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,618] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,723] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,827] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:03,932] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,037] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,142] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,247] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,352] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,457] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,562] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,667] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,773] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,878] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:04,983] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,088] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,193] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,298] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,403] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,508] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,613] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,718] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,823] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:05,931] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,037] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,142] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,247] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,352] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,457] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,563] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,667] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,773] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,877] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:06,982] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,088] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,193] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,298] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,403] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,508] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,613] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,718] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,822] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:07,926] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,032] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,137] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,241] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,452] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,557] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,662] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,767] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,872] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:08,977] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,083] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,187] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,292] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,397] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,503] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,608] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,712] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,818] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:09,923] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,031] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,136] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,242] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,451] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,556] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,662] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,767] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,872] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:10,977] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,082] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,188] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,293] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,398] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,503] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,608] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,713] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,817] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:11,922] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,026] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,132] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,236] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,342] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,447] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,552] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,657] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,762] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,867] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:12,973] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,078] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,182] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,287] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,393] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,498] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,603] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,708] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,813] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:13,918] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,023] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,126] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,232] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,336] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,442] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,547] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,652] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,757] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,862] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:14,967] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,072] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,177] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,283] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,387] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,492] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,597] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,703] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,808] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:15,912] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,018] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,123] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,227] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,331] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,436] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,542] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,647] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,752] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,857] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:16,962] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,067] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,172] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,278] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,382] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,487] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,592] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,698] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,803] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:17,908] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,012] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,117] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,223] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,327] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,536] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,642] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,747] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,852] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:18,956] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,167] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,272] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,378] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,798] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:19,903] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,007] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,112] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,218] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,323] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,536] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,642] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,747] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,852] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:20,957] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,167] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,272] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,378] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,588] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,693] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,798] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:21,903] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,007] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,113] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,218] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,323] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,537] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,642] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,747] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,851] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:22,957] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,167] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,272] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,378] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:23,903] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,007] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,113] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,218] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,323] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,536] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,642] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,747] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,852] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:24,957] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,167] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,272] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,378] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,483] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:25,903] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,008] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,112] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,217] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,323] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,426] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,531] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,636] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,742] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,847] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:26,951] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,056] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,162] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,267] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,373] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,478] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,582] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,687] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,792] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:27,898] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,003] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,107] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,212] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,318] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,423] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,531] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,636] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,741] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,847] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:28,952] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,057] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,161] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,267] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,372] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,477] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,582] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,687] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,792] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:29,897] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,003] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,108] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,213] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,317] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,423] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,526] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,632] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,736] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,841] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:30,947] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,052] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,157] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,262] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,367] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,473] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,577] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,682] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,787] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,892] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:31,998] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,102] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,208] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,313] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,418] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,523] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,626] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,731] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,837] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:32,942] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,046] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,152] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,257] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,362] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,467] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,571] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,677] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,782] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,887] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:33,993] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,097] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,202] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,307] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,413] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,518] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,622] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,726] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,831] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:34,937] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,041] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,147] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,462] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,567] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,672] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,777] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,882] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:35,988] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,092] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,197] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,302] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,407] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,617] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,722] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,826] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:36,931] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,037] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,141] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,247] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,352] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,457] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,562] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,667] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,772] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,877] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:37,982] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,088] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,192] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,297] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,402] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,507] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,613] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,717] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,822] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:38,926] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,031] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,136] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,241] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,452] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,557] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,661] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,767] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,872] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:39,977] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,082] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,188] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,292] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,397] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,502] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,608] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,713] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,817] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:40,923] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,026] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,131] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,236] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,341] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,447] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,552] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,657] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,761] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,866] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:41,972] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,077] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,182] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,287] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,392] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,497] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,603] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,708] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,812] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:42,917] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,022] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,126] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,232] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,336] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,441] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,546] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,652] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,757] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,861] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:43,967] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,072] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,177] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,282] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,387] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,492] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,597] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,702] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,808] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:44,912] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,017] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,122] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,226] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,331] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,436] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,541] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,647] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,752] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,856] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:45,961] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,067] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,172] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,277] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,382] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,487] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,592] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,697] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,802] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:46,908] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,012] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,117] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,222] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,326] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,536] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,641] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,746] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,851] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:47,957] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,061] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,166] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,272] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,377] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:48,902] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,008] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,112] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,217] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,322] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,426] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,531] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,636] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,741] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,846] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:49,952] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,057] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,169] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,277] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,382] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,487] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,592] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,697] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,802] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:50,907] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,012] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,118] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,223] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,326] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,536] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,642] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,746] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,851] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:51,956] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,167] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,271] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,376] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,796] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:52,902] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,007] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,112] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,218] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,322] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,426] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,531] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,636] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,742] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,846] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:53,951] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,056] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,162] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,267] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,372] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,476] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,581] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,687] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,792] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:54,897] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,003] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,107] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,212] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,317] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,423] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,530] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,636] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,741] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,846] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:55,952] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,057] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,161] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,266] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,371] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,477] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,582] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,686] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,792] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:56,897] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,002] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,108] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,212] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,317] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,422] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,526] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,631] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,736] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,841] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:57,946] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,052] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,157] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,261] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,366] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,472] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,577] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,682] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,786] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,891] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:58,997] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,102] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,207] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,312] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,417] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,522] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,626] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,731] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,836] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:37:59,941] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,047] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,152] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,257] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,361] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,466] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,572] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,677] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,782] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,887] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:00,992] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,097] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,202] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,308] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,413] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,517] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,622] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,726] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,831] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:01,936] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,041] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,146] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,357] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,461] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,566] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,672] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,777] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,882] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:02,987] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,092] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,197] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,302] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,407] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,512] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,617] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,722] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,826] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:03,931] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,037] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,141] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,246] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,352] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,457] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,562] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,666] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,771] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,877] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:04,982] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,087] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,191] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,297] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,402] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,507] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,613] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,717] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,822] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:05,926] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,031] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,137] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,241] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,451] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,557] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,662] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,766] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,872] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:06,976] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,082] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,187] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,293] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,397] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,502] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,607] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,712] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,817] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:07,922] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,025] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,131] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,236] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,342] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,446] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,551] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,656] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,762] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,867] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:08,971] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,076] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,182] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,287] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,392] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,496] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,602] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,707] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,812] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:09,917] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,023] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,131] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,236] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,341] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,447] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,551] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,656] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,761] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,867] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:10,972] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,076] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,182] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,287] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,392] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,497] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,602] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,707] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,812] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:11,917] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,023] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,130] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,236] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,341] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,447] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,551] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,656] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,762] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,867] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:12,972] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,077] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,181] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,287] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,392] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,497] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,602] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,706] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,812] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:13,917] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,022] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,126] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,230] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,336] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,441] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,546] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,652] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,757] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,861] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:14,967] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,072] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,177] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,282] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,386] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,492] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,597] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,702] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,807] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:15,912] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,017] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,122] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,226] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,331] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,436] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,541] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,646] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,751] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,857] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:16,962] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,066] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,172] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,277] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,382] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,487] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,592] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,697] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,802] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:17,907] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,012] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,117] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,222] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,326] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,537] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,641] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,746] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,851] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:18,956] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,167] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,271] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,377] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:19,902] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,007] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,112] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,217] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,323] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,426] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,531] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,636] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,742] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,846] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:20,952] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,057] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,162] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,267] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,371] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,476] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,582] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,687] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,792] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:21,896] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,002] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,107] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,212] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,318] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,422] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,526] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,631] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,736] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,842] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:22,946] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,051] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,156] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,261] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,367] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,472] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,576] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,681] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,787] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,892] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:23,997] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,102] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,207] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,312] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,418] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,523] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,625] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,731] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,836] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:24,941] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,046] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,152] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,256] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,361] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,467] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,572] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,677] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,781] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,887] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:25,992] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,097] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,202] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,307] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,411] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,517] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,622] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,726] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,830] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:26,936] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,041] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,146] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,252] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,347] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,356] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,461] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,566] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,672] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,777] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,882] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:27,986] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,092] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,197] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,302] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,407] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,513] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,617] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,722] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,826] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:28,931] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,036] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,141] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,246] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,351] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,457] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,562] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,666] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,771] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,876] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:29,982] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,087] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,193] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,297] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,402] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,507] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,612] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,718] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,822] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:30,926] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,031] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,136] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,241] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,346] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,451] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,557] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,662] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,767] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,871] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:31,977] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,082] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,187] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,292] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,396] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,502] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,607] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,712] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,817] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:32,921] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,026] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,131] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,236] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,342] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,446] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,551] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,656] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,762] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,867] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:33,972] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,077] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,181] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,287] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,392] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,497] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,602] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,707] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,812] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:34,917] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,022] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,125] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,231] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,336] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,442] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,547] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,651] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,756] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,861] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:35,967] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,072] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,177] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,282] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,387] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,492] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,597] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,702] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,807] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:36,912] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,017] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,122] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,226] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,331] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,436] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,541] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,646] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,752] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,857] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:37,961] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,066] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,172] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,277] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,382] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,487] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,592] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,697] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,802] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:38,907] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,013] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,117] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,222] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,326] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,431] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,537] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,641] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,746] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,852] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:39,957] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,062] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,166] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,271] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,377] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,482] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,587] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,692] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,797] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:40,902] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,007] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,112] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,217] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,322] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,426] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,531] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,637] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,741] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,846] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:41,951] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,057] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,162] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,267] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,371] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,477] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,582] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,687] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,793] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:42,897] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,002] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,107] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,212] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,317] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,422] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,526] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,631] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,735] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:43,841] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:47,348] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:49,045] WARN [GroupMetadataManager brokerId=1] group: bench with leader: consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 has received offset commits from consumers as well as transactional producers. Mixing both types of offset commits will generally result in surprises and should be avoided. (kafka.coordinator.group.GroupMetadataManager)
[2022-10-04 16:38:49,050] INFO [GroupCoordinator 1]: Preparing to rebalance group bench in state PreparingRebalance with old generation 1 (__consumer_offsets-32) (reason: Removing member consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24 on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:38:49,051] INFO [GroupCoordinator 1]: Group bench with generation 2 is now empty (__consumer_offsets-32) (kafka.coordinator.group.GroupCoordinator)
[2022-10-04 16:38:49,052] INFO [GroupCoordinator 1]: Member MemberMetadata(memberId=consumer-bench-1-a29fe613-e468-4b7c-8002-262f35241d24, groupInstanceId=None, clientId=consumer-bench-1, clientHost=/172.99.0.17, sessionTimeoutMs=45000, rebalanceTimeoutMs=300000, supportedProtocols=List(range, cooperative-sticky)) has left group bench through explicit `LeaveGroup` request (kafka.coordinator.group.GroupCoordinator)
